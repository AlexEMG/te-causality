(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    822693,      16797]
NotebookOptionsPosition[    812448,      16484]
NotebookOutlinePosition[    812830,      16501]
CellTagsIndexPosition[    812787,      16498]
WindowFrame->Normal
ContainsDynamic->True *)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["load spike data and network topology", "Subsection",
 CellChangeTimes->{{3.476084150589821*^9, 3.476084158946248*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "basedir", " ", "=", " ", 
   "\"\</home/olav/Desktop/Doktorarbeit/Simulationen/NEST/calciumbursts2/\>\"\
"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4760842053119907`*^9, 3.476084259956079*^9}, {
   3.476085089553505*^9, 3.476085089624876*^9}, {3.476085126496986*^9, 
   3.476085153557378*^9}, {3.47608524227201*^9, 3.476085242855344*^9}, {
   3.476085317075013*^9, 3.476085317154746*^9}, {3.4760853695055723`*^9, 
   3.4760853884296293`*^9}, {3.476085445236587*^9, 3.4760854453544083`*^9}, {
   3.476085604706642*^9, 3.476085604808267*^9}, {3.477647600851346*^9, 
   3.4776476051454782`*^9}, 3.480670048588007*^9, {3.480847220100284*^9, 
   3.4808472556877813`*^9}, {3.487912237320615*^9, 3.487912237939989*^9}}],

Cell[CellGroupData[{

Cell["import from old MX files", "Subsubsection",
 CellChangeTimes->{{3.476017880475691*^9, 3.4760178883314342`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"pos", "=", 
   RowBox[{"<<", "\"\<pos.mx\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"connections", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"basedir", "<>", "\"\<input/cons.mx\>\""}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pars", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"basedir", "<>", "\"\<input/pars.mx\>\""}], ")"}]}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"calculate", " ", "adjacency", " ", "matrix"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjA", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0.0", ",", 
     RowBox[{"{", 
      RowBox[{"size", "/.", "pars"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"size", "/.", "pars"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"ii", "=", "1"}], ",", 
    RowBox[{
     RowBox[{"ii", "\[LessEqual]", "cons"}], "/.", "pars"}], ",", 
    RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"adjA", "\[LeftDoubleBracket]", 
      RowBox[{
       RowBox[{"connections", "\[LeftDoubleBracket]", 
        RowBox[{"ii", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"connections", "\[LeftDoubleBracket]", 
        RowBox[{"ii", ",", "2"}], "\[RightDoubleBracket]"}]}], 
      "\[RightDoubleBracket]"}], "=", "1.0"}]}], "\[IndentingNewLine]", "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"adjA2", "=", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{"adjA", ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"calculate", " ", "degrees"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"degreein", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "@", 
      RowBox[{"adjA", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"degreeout", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "@", 
      RowBox[{"adjA", "\[LeftDoubleBracket]", 
       RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"degreeboth", "=", 
   RowBox[{"Diagonal", "@", 
    RowBox[{"MatrixPower", "[", 
     RowBox[{"adjA", ",", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"degreetotal", "=", 
   RowBox[{"degreein", "+", "degreeout"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.454946501997407*^9, 3.45494655717003*^9}, {
  3.460285568827726*^9, 3.460285597421915*^9}, {3.4602856414947557`*^9, 
  3.4602856478432827`*^9}, {3.460707829194428*^9, 3.460707838337882*^9}, {
  3.4607085881861258`*^9, 3.4607086233340178`*^9}, {3.460709045327145*^9, 
  3.460709054799498*^9}, {3.460709802934825*^9, 3.460709819739313*^9}, {
  3.476016595026308*^9, 3.476016597568923*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"size", "\[Rule]", "100"}], ",", 
   RowBox[{"cons", "\[Rule]", "1200"}], ",", 
   RowBox[{"mindist", "\[Rule]", "0.01`"}], ",", 
   RowBox[{"cstrmin", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"cstrmax", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"thresh", "\[Rule]", "1"}], ",", 
   RowBox[{"topology", "\[Rule]", "new"}], ",", 
   RowBox[{"stepsize", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"leaktime", "\[Rule]", "20"}], ",", 
   RowBox[{"syndelay", "\[Rule]", "0"}], ",", 
   RowBox[{"transmittertime", "\[Rule]", "100"}], ",", 
   RowBox[{"transmitterred", "\[Rule]", "0.3`"}], ",", 
   RowBox[{"allowbidircons", "\[Rule]", "True"}], ",", 
   RowBox[{"globalstimulation", "\[Rule]", "False"}], ",", 
   RowBox[{"globalconnectivity", "\[Rule]", "False"}], ",", 
   RowBox[{"nondirectionalcons", "\[Rule]", "False"}], ",", 
   RowBox[{"watchitmaxdur", "\[Rule]", "110"}], ",", 
   RowBox[{"analysislength", "\[Rule]", "150"}], ",", 
   RowBox[{
   "notes", "\[Rule]", "\<\"watchit-Topologien fuer die NEST-Simulationen \
(Vergleich mit Demians TE-Auswertung)\"\>"}], ",", 
   RowBox[{"compiletime", "\[Rule]", "\<\"15:03:36 on Aug 26 2009\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.463928923950018*^9, 3.464020659510275*^9, 3.464355572702835*^9, 
   3.464933013105462*^9, 3.465582866508277*^9, 3.4655856898377237`*^9, {
   3.46790356680194*^9, 3.4679035770855923`*^9}, 3.467916696585786*^9, 
   3.4679168671029797`*^9, 3.474219455009221*^9, 3.474321932113083*^9, 
   3.4743559386205072`*^9, 3.474358063641821*^9, 3.474403292111087*^9, 
   3.4744407317902527`*^9, 3.474486707564067*^9, 3.474534340200758*^9, 
   3.474615289937821*^9, 3.4746201676998377`*^9, 3.474660069271846*^9, 
   3.475335216615011*^9, 3.475568416108693*^9, 3.4756720804765778`*^9, 
   3.475767752238648*^9, 3.47582627093267*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "import from YAML2MX file (compatibility for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 6)"
}], "Subsubsection",
 CellChangeTimes->{{3.47601789178699*^9, 3.476017895791419*^9}, {
  3.4879134157627*^9, 3.487913433370204*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImportNetworkFromYAML", "[", "filename_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "instream", ",", "cfrom", ",", "j", ",", "ctolist", ",", "adjA", ",", 
       "pos", ",", "pars"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", " ", "[", 
       RowBox[{"adjA", ",", "pos", ",", "pars"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "make", " ", "sure", " ", "converter", " ", "and", " ", "input", " ", 
        "file", " ", "exist"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "load", " ", "yaml", " ", "file", " ", "in", " ", "raw", " ", "form"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"instream", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Get", "[", "filename", "]"}]}]}], ";", "\[IndentingNewLine]",
       
      RowBox[{"If", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "instream"}], "\[Equal]", "0"}], ",", 
        RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"pars", "=", 
        RowBox[{"Sort", "@", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"instream", ",", 
           RowBox[{"nodes", "\[Rule]", "_"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"adjA", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"size", "/.", "pars"}], ",", 
           RowBox[{"size", "/.", "pars"}]}], "}"}], ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"size", "/.", "pars"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"instream", "=", 
       RowBox[{"nodes", "/.", "instream"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cfrom", "=", "1"}], ",", 
        RowBox[{"cfrom", "\[LessEqual]", 
         RowBox[{"Length", "@", "instream"}]}], ",", 
        RowBox[{"cfrom", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "pos", "\[LeftDoubleBracket]", "cfrom", "\[RightDoubleBracket]"}], 
          "=", 
          RowBox[{"pos", "/."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"for", " ", "now"}], ",", " ", 
          RowBox[{
          "assume", " ", "all", " ", "nodes", " ", "are", " ", "present", " ",
            "here", " ", "and", " ", "that", " ", "they", " ", "are", " ", 
           "presented", " ", "in", " ", "order"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"id", "/.", "instream"}], ")"}], "\[NotEqual]", 
            "cfrom"}], ",", 
           RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ctolist", "=", 
          RowBox[{"connectedTo", "/.", 
           RowBox[{
           "instream", "\[LeftDoubleBracket]", "cfrom", 
            "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "@", "ctolist"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"adjA", "\[LeftDoubleBracket]", 
             RowBox[{"cfrom", ",", 
              RowBox[{
              "ctolist", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "=", 
            "1"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"adjA", ",", "pos", ",", "pars"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"adjA", ",", "pos", ",", "pars"}], "}"}], "=", 
   RowBox[{
   "ImportNetworkFromYAML", "[", "\"\<topology-Leogang.yml.mx\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.476017799818989*^9, 3.476017811225112*^9}, {
  3.476017871645936*^9, 3.4760178723544397`*^9}, {3.476017980806569*^9, 
  3.476018014155528*^9}, {3.47601810092706*^9, 3.4760181432028503`*^9}, {
  3.476018243014686*^9, 3.4760182803559303`*^9}, {3.4806700529222107`*^9, 
  3.4806700782546577`*^9}, {3.480670226838128*^9, 3.4806702465473137`*^9}, {
  3.480671519176909*^9, 3.4806715218790417`*^9}, {3.48067636484166*^9, 
  3.4806763653049803`*^9}, {3.480937021806864*^9, 3.480937024148855*^9}, {
  3.4809393372360077`*^9, 3.4809393377709503`*^9}, {3.480940139080224*^9, 
  3.480940140357624*^9}, {3.4809409944636583`*^9, 3.480940994966477*^9}, {
  3.480944896696537*^9, 3.4809448977107763`*^9}, {3.4825196271605263`*^9, 
  3.4825196429891663`*^9}, {3.48252047180844*^9, 3.4825204731748247`*^9}, {
  3.482520996198477*^9, 3.482520996668619*^9}, {3.482591772746105*^9, 
  3.482591773389286*^9}, {3.482591869265727*^9, 3.482591870264079*^9}, {
  3.483078376921789*^9, 3.483078377459985*^9}, {3.483379391841157*^9, 
  3.483379394206235*^9}, {3.484305680803679*^9, 3.484305681426613*^9}, {
  3.484308336937319*^9, 3.4843083378640347`*^9}, {3.4848953324903517`*^9, 
  3.484895333158863*^9}, {3.485079750982482*^9, 3.4850797525567513`*^9}, {
  3.485085283189507*^9, 3.485085283844618*^9}, {3.485086265538705*^9, 
  3.485086266569882*^9}, {3.485584912167392*^9, 3.485584912800179*^9}, {
  3.485607938638867*^9, 3.485607939668169*^9}, {3.485694031324893*^9, 
  3.485694031928234*^9}, {3.4868181102617893`*^9, 3.4868181115100527`*^9}, {
  3.48681908531664*^9, 3.4868190860597057`*^9}, {3.4879134477558804`*^9, 
  3.4879135260110064`*^9}, {3.487913583973442*^9, 3.487913584451117*^9}, {
  3.4879136150518913`*^9, 3.487913654131895*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"cons", "\[Rule]", "1200"}], ",", 
   RowBox[{"createdAt", "\[Rule]", "\<\"Tue 23 Feb 2010 13:48:46\"\>"}], ",", 
   
   RowBox[{"minDist", "\[Rule]", "0.01`"}], ",", 
   RowBox[{
   "notes", "\[Rule]", "\<\"watchit-Topologien fuer die NEST-Simulationen \
(Vergleich mit Demians TE-Auswertung) - sp\[CapitalATilde]\[Currency]tere \
Anmerkung: dies ist der YAML-Export der DemianTest-Leogang-Topologie\"\>"}], 
   ",", 
   RowBox[{"size", "\[Rule]", "100"}]}], "}"}]], "Print",
 CellChangeTimes->{{3.4879136259865837`*^9, 3.487913655147911*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["import from YAML file", "Subsubsection",
 CellChangeTimes->{{3.47601789178699*^9, 3.476017895791419*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImportNetworkFromYAML", "[", "filename_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "instream", ",", "cfrom", ",", "j", ",", "ctolist", ",", "adjA", ",", 
       "pos", ",", "pars"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "make", " ", "sure", " ", "converter", " ", "and", " ", "input", " ", 
       "file", " ", "exist"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{
          "FileExistsQ", "[", 
           "\"\</Users/olav/Desktop/Doktorarbeit/Simulationen/networktest4/\
20090924/C1_05\>\"", "]"}]}], ",", 
         RowBox[{"Abort", "[", "]"}]}], "]"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"FileExistsQ", "[", "filename", "]"}]}], ",", 
        RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "load", " ", "yaml", " ", "file", " ", "in", " ", "raw", " ", "form"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"instream", "=", 
       RowBox[{"First", "@", 
        RowBox[{"RunThrough", "[", 
         RowBox[{
          RowBox[{
          "\"\</Users/olav/Desktop/Doktorarbeit/Simulationen/yaml2mx \>\"", "<>",
            "filename"}], ",", "\"\<\>\""}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"pars", "=", 
        RowBox[{"Sort", "@", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{"instream", ",", 
           RowBox[{"nodes", "\[Rule]", "_"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"adjA", "=", 
       RowBox[{"SparseArray", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"size", "/.", "pars"}], ",", 
           RowBox[{"size", "/.", "pars"}]}], "}"}], ",", "0"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"size", "/.", "pars"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"instream", "=", 
       RowBox[{"nodes", "/.", "instream"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"cfrom", "=", "1"}], ",", 
        RowBox[{"cfrom", "\[LessEqual]", 
         RowBox[{"Length", "@", "instream"}]}], ",", 
        RowBox[{"cfrom", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "pos", "\[LeftDoubleBracket]", "cfrom", "\[RightDoubleBracket]"}], 
          "=", 
          RowBox[{"pos", "/."}]}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"for", " ", "now"}], ",", " ", 
          RowBox[{
          "assume", " ", "all", " ", "nodes", " ", "are", " ", "present", " ",
            "here", " ", "and", " ", "that", " ", "they", " ", "are", " ", 
           "presented", " ", "in", " ", "order"}]}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"id", "/.", "instream"}], ")"}], "\[NotEqual]", 
            "cfrom"}], ",", 
           RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ctolist", "=", 
          RowBox[{"connectedTo", "/.", 
           RowBox[{
           "instream", "\[LeftDoubleBracket]", "cfrom", 
            "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "@", "ctolist"}]}], ",", 
           RowBox[{"j", "++"}], ",", 
           RowBox[{
            RowBox[{"adjA", "\[LeftDoubleBracket]", 
             RowBox[{"cfrom", ",", 
              RowBox[{
              "ctolist", "\[LeftDoubleBracket]", "j", 
               "\[RightDoubleBracket]"}]}], "\[RightDoubleBracket]"}], "=", 
            "1"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"adjA", ",", "pos", ",", "pars"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"adjA", ",", "pos", ",", "pars"}], "}"}], "=", 
   RowBox[{
   "ImportNetworkFromYAML", "[", "\"\<topology-Random.yml\>\"", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.476017799818989*^9, 3.476017811225112*^9}, {
  3.476017871645936*^9, 3.4760178723544397`*^9}, {3.476017980806569*^9, 
  3.476018014155528*^9}, {3.47601810092706*^9, 3.4760181432028503`*^9}, {
  3.476018243014686*^9, 3.4760182803559303`*^9}, {3.4806700529222107`*^9, 
  3.4806700782546577`*^9}, {3.480670226838128*^9, 3.4806702465473137`*^9}, {
  3.480671519176909*^9, 3.4806715218790417`*^9}, {3.48067636484166*^9, 
  3.4806763653049803`*^9}, {3.480937021806864*^9, 3.480937024148855*^9}, {
  3.4809393372360077`*^9, 3.4809393377709503`*^9}, {3.480940139080224*^9, 
  3.480940140357624*^9}, {3.4809409944636583`*^9, 3.480940994966477*^9}, {
  3.480944896696537*^9, 3.4809448977107763`*^9}, {3.4825196271605263`*^9, 
  3.4825196429891663`*^9}, {3.48252047180844*^9, 3.4825204731748247`*^9}, {
  3.482520996198477*^9, 3.482520996668619*^9}, {3.482591772746105*^9, 
  3.482591773389286*^9}, {3.482591869265727*^9, 3.482591870264079*^9}, {
  3.483078376921789*^9, 3.483078377459985*^9}, {3.483379391841157*^9, 
  3.483379394206235*^9}, {3.484305680803679*^9, 3.484305681426613*^9}, {
  3.484308336937319*^9, 3.4843083378640347`*^9}, {3.4848953324903517`*^9, 
  3.484895333158863*^9}, {3.485079750982482*^9, 3.4850797525567513`*^9}, {
  3.485085283189507*^9, 3.485085283844618*^9}, {3.485086265538705*^9, 
  3.485086266569882*^9}, {3.485584912167392*^9, 3.485584912800179*^9}, {
  3.485607938638867*^9, 3.485607939668169*^9}, {3.485694031324893*^9, 
  3.485694031928234*^9}, {3.4868181102617893`*^9, 3.4868181115100527`*^9}, {
  3.48681908531664*^9, 3.4868190860597057`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"cons", "\[Rule]", "1200"}], ",", 
   RowBox[{"createdAt", "\[Rule]", "\<\"Mon 5 Apr 2010 20:42:20\"\>"}], ",", 
   RowBox[{"minDist", "\[Rule]", "0.01`"}], ",", 
   RowBox[{
   "notes", "\[Rule]", "\<\"random topology, for comparison with the Leogang \
topology\"\>"}], ",", 
   RowBox[{"size", "\[Rule]", "100"}]}], "}"}]], "Print",
 CellChangeTimes->{
  3.4825918756588783`*^9, {3.483078373392909*^9, 3.4830783780559797`*^9}, 
   3.483170915659404*^9, 3.483173823755184*^9, 3.483210594239088*^9, 
   3.483264774544702*^9, 3.483273165248693*^9, 3.4832774628430567`*^9, 
   3.483338589570752*^9, 3.48337939486236*^9, 3.4842989881799507`*^9, 
   3.484299083124709*^9, 3.484305682380905*^9, 3.4843083387341623`*^9, 
   3.484894002269073*^9, 3.4848953337798843`*^9, 3.484982105104315*^9, 
   3.485063817050745*^9, 3.48507975324864*^9, 3.4850850660428123`*^9, 
   3.485085284453726*^9, 3.485086267303712*^9, 3.485584913509098*^9, 
   3.485606511083108*^9, 3.485607940737599*^9, 3.485681766274877*^9, 
   3.485693817177966*^9, 3.485694032536378*^9, 3.486061886687913*^9, 
   3.486099759011373*^9, 3.4861216250300303`*^9, 3.486184105057001*^9, 
   3.486818112446364*^9, 3.4868190868515663`*^9, 3.486966339919073*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "extract", " ", "connections", " ", "list", " ", "from", " ", 
    "SparseArray", " ", "adjacency", " ", "matrix"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetConnections", "[", "adjA_", "]"}], ":=", 
     RowBox[{
      RowBox[{"Drop", "[", 
       RowBox[{
        RowBox[{"ArrayRules", "@", "adjA"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAconnections", "=", 
     RowBox[{"Evaluate", "@", 
      RowBox[{"GetConnections", "[", "adjA", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"inDegree", "[", "ii_", "]"}], ":=", 
     RowBox[{"Length", "@", 
      RowBox[{"Cases", "[", 
       RowBox[{"adjAconnections", ",", 
        RowBox[{"{", 
         RowBox[{"_", ",", "ii"}], "}"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"outDegree", "[", "ii_", "]"}], ":=", 
     RowBox[{"Length", "@", 
      RowBox[{"Cases", "[", 
       RowBox[{"adjAconnections", ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", "_"}], "}"}]}], "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.476440012668387*^9, {3.4832647934299097`*^9, 3.483264812978972*^9}, {
   3.484299008395179*^9, 3.484299078280259*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["load and evaluate reconstruction", "Subsection",
 CellChangeTimes->{{3.476084389987063*^9, 3.47608439276307*^9}, {
  3.480935529534381*^9, 3.480935531182004*^9}}],

Cell[CellGroupData[{

Cell["load single reconstruction results", "Subsubsection",
 CellChangeTimes->{{3.480935498637796*^9, 3.48093550792933*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "basedir", " ", "=", " ", 
   "\"\</Users/olav/Desktop/Doktorarbeit/Causality/transferentropy-sim/\
HeavierExternal/te\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4760842053119907`*^9, 3.476084259956079*^9}, {
   3.476085089553505*^9, 3.476085089624876*^9}, {3.476085126496986*^9, 
   3.476085153557378*^9}, {3.47608524227201*^9, 3.476085242855344*^9}, {
   3.476085317075013*^9, 3.476085317154746*^9}, {3.4760853695055723`*^9, 
   3.4760853884296293`*^9}, {3.476085445236587*^9, 3.4760854453544083`*^9}, {
   3.476085604706642*^9, 3.476085604808267*^9}, {3.477647600851346*^9, 
   3.4776476051454782`*^9}, {3.477656372683303*^9, 3.4776563869931307`*^9}, 
   3.477915927156283*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjAtest", "=", 
   RowBox[{
   "<<", "\"\<../../../Causality/granger/output/grangercausality_Leogang1.mx\>\
\""}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4552881849737253`*^9, 3.455288195458959*^9}, {
   3.455292077011904*^9, 3.455292086442218*^9}, 3.4565755420969353`*^9, {
   3.460709063463677*^9, 3.460709090073358*^9}, 3.460712611468128*^9, {
   3.4649330315735483`*^9, 3.464933037868712*^9}, {3.464933127697957*^9, 
   3.464933143308455*^9}, {3.46493323274529*^9, 3.46493323420014*^9}, {
   3.464933285622509*^9, 3.4649332867586412`*^9}, {3.4649333267425003`*^9, 
   3.4649333268619823`*^9}, {3.46558288765094*^9, 3.465582888034287*^9}, 
   3.465585633335867*^9, {3.465585747763074*^9, 3.4655857500645247`*^9}, {
   3.465585840179593*^9, 3.465585840715901*^9}, {3.465585890786249*^9, 
   3.465585891880547*^9}, {3.467919155624666*^9, 3.467919184684576*^9}, {
   3.471694188218775*^9, 3.4716941885761538`*^9}, {3.471694608423016*^9, 
   3.471694608525033*^9}, {3.472481257700157*^9, 3.472481274743144*^9}, {
   3.47249533027174*^9, 3.472495341306698*^9}, {3.472838777782398*^9, 
   3.472838779323813*^9}, {3.47284072520254*^9, 3.472840726168689*^9}, {
   3.472840834347789*^9, 3.472840835065248*^9}, {3.473173659013576*^9, 
   3.4731736719299583`*^9}, {3.474624675316263*^9, 3.474624694652171*^9}, {
   3.474663533400906*^9, 3.474663578621859*^9}, {3.474703901062809*^9, 
   3.4747039025744457`*^9}, {3.474704903124278*^9, 3.474704904272214*^9}, {
   3.474814126600263*^9, 3.474814127006555*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjAtest2", "=", 
   RowBox[{
   "<<", "\"\<../../../Causality/granger/output/grangercausality_Leogang2.mx\>\
\""}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.474814131165185*^9, 3.4748141316059217`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjAtestGC", "=", "adjAtest2"}], ";"}]], "Input",
 CellChangeTimes->{{3.4748141364306297`*^9, 3.47481414843225*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjAtest", "=", 
   RowBox[{"<<", "\"\<adjA_iteration5.mx\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.473175396153955*^9, 3.473175400736216*^9}, {
   3.4776563082868843`*^9, 3.477656341291574*^9}, 3.4776563927521544`*^9, {
   3.477656563238592*^9, 3.477656563901059*^9}, {3.477915931073615*^9, 
   3.477915931730681*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xfilename", "=", "\"\<granger/grangercausality_os_15bins.mx\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjAtestGC", "=", 
   RowBox[{"<<", 
    RowBox[{"(", "xfilename", ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4552881849737253`*^9, 3.455288195458959*^9}, {
   3.455292077011904*^9, 3.455292086442218*^9}, 3.4565755420969353`*^9, {
   3.460709063463677*^9, 3.460709090073358*^9}, 3.460712611468128*^9, {
   3.4649330315735483`*^9, 3.464933037868712*^9}, {3.464933127697957*^9, 
   3.464933143308455*^9}, {3.46493323274529*^9, 3.46493323420014*^9}, {
   3.464933285622509*^9, 3.4649332867586412`*^9}, {3.4649333267425003`*^9, 
   3.4649333268619823`*^9}, {3.46558288765094*^9, 3.465582888034287*^9}, 
   3.465585633335867*^9, {3.465585747763074*^9, 3.4655857500645247`*^9}, {
   3.465585840179593*^9, 3.465585840715901*^9}, {3.465585890786249*^9, 
   3.465585891880547*^9}, {3.467919155624666*^9, 3.467919184684576*^9}, {
   3.4708190752843437`*^9, 3.470819102903266*^9}, {3.470819187739356*^9, 
   3.470819190617086*^9}, {3.470819251670679*^9, 3.4708192782517843`*^9}, {
   3.470819878991311*^9, 3.470819884306695*^9}, 3.4708287884550858`*^9, {
   3.471533858309868*^9, 3.471533858668077*^9}, {3.471678603177012*^9, 
   3.471678603717484*^9}, {3.4716787114306602`*^9, 3.471678711734274*^9}, {
   3.471694610701008*^9, 3.471694610996982*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjAtest2", "=", 
   RowBox[{"<<", "\"\<granger/grangercausality_os_15bins.mx\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.4552881849737253`*^9, 3.455288195458959*^9}, {
   3.455292077011904*^9, 3.455292086442218*^9}, 3.4565755420969353`*^9, {
   3.460709063463677*^9, 3.460709090073358*^9}, 3.460712611468128*^9, {
   3.4649330315735483`*^9, 3.464933037868712*^9}, {3.464933127697957*^9, 
   3.464933143308455*^9}, {3.46493323274529*^9, 3.46493323420014*^9}, {
   3.464933285622509*^9, 3.4649332867586412`*^9}, {3.4649333267425003`*^9, 
   3.4649333268619823`*^9}, {3.46558288765094*^9, 3.465582888034287*^9}, 
   3.465585633335867*^9, {3.465585747763074*^9, 3.4655857500645247`*^9}, {
   3.465585840179593*^9, 3.465585840715901*^9}, {3.465585890786249*^9, 
   3.465585891880547*^9}, {3.467919155624666*^9, 3.467919184684576*^9}, {
   3.4708190752843437`*^9, 3.470819102903266*^9}, {3.470819187739356*^9, 
   3.470819190617086*^9}, {3.470819251670679*^9, 3.4708192782517843`*^9}, {
   3.470819878991311*^9, 3.470819884306695*^9}, 3.4708287884550858`*^9, {
   3.470829700421332*^9, 3.470829718817987*^9}, {3.470829757015032*^9, 
   3.470829780989376*^9}, {3.4708298161653547`*^9, 3.4708298239472513`*^9}, {
   3.470831203136725*^9, 3.470831205838456*^9}, {3.471533736086265*^9, 
   3.4715337368596573`*^9}, 3.471678607764852*^9, {3.4716941985676823`*^9, 
   3.47169419888807*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ii", ",", "jj"}], "]"}], ";", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
           RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
           RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"ii", ",", 
          RowBox[{"size", "/.", "pars"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"jj", ",", 
          RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", "1"}], "]"}],
     ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<local TE\>\"", ",", "\"\<combined TE\>\""}], "}"}]}], ",", 
    
    RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4716789248680477`*^9, 3.471678936555588*^9}, {
   3.471679031461474*^9, 3.471679068704988*^9}, {3.4716821618828*^9, 
   3.4716821688572283`*^9}, {3.471682287834642*^9, 3.471682319442451*^9}, 
   3.4716823508806458`*^9, {3.4724812885484953`*^9, 3.4724812886437273`*^9}, {
   3.472838785927485*^9, 3.472838786709467*^9}, {3.472839329686967*^9, 
   3.472839330868436*^9}, {3.472839607149116*^9, 3.472839616666801*^9}, {
   3.473175404556267*^9, 3.473175404633169*^9}, 3.473176025715322*^9, {
   3.4746247146990767`*^9, 3.474624723737714*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
z1tufxijxN764l79lDQyzndp806XQ9iStW/MNRmkp3pf0P9F3m8K3/FKY2x9
xLfbWf/O81p20DaJWsuq9FN51aYvWuT9jcwO1p4nPOott2bj+Dh0Gc877bJ4
FMAXTBaC3PxSBu9t+pRXTuXQ8XXrCU3k9zX727dlMyQ+11lVv9uA+dSJmB2k
boyoNB30goXkdkZqUBWNuJ77T17vxuHcn5aPjrjQKn+1ASl6l/QIbrWeyCMl
Fqd5eJpBwUcyfvyJ6Rx4ttGzicSd32CvCxoc1vDj7fYMDl/yi9KsI/tHy5pZ
e4uG88KRhZ8TOVV/o0kE9bS4loXpfwYnsPHOO6prz2LQg9FNU91p/OwT+XV5
FYcuZa5qYl5HRhhoIPtlI69kzeDL0TtL3Xnd2JvDtKyG0ng9NPbSgBOxqv3U
EDJm6bXVZP3OXstfW0GjlfPTC5XmLPK1eUENGtama246zuFQeCl8tmQC+S6V
jro3qxnwaOVSDynMnXId9CYrMMFT3O5GDot5+7uvnF/z7/xuosNsNsScwwxR
vNPbWQyOhTad2EziyP9zyqj+VcGoisszvJKoRFLS7uBobRY6IcanNkQrcClP
rVGP8EwvQdBZoepvlH+5dGXSdhbBo8fteBDJYGXMLpIKGfDdzm6kDroIF2cs
PPu5bFg6lAHPEscGxWDmfsUCY7I/+tyaWK8zSgHzzsvlrmAwkpO81Cbv7/Zs
f4E6Wb+bhu2HN+hxqNDy8TXqKcN826LydmT/BN8SD/DoyIJH1ec/sHg1jBfs
ZsC7Z18SsRDk7LrI4X5nF+18lkNJsreVRgmNx4ouIe5dFCoflfSvY6Y7Sljs
5u1lHlMoNG5va3+bQ/gVA4+iKQy2FyyQL/zCQtZdvkJ7IwOZe861vtNYCHSB
1DVf2Q3HmkYldDUed5pOvl+CvUWVnqZCdW6UeONSfcduLO4cHX+0TV0E6g94
XdX9GANBHqgbo9Kb8uXlJhIYJOqEhK8rJd/z0audi4YzaOOStsV1jwIzV9d2
Oj+FxrhH/QwPk/zgdGphjy+mvH71y2FqISw2rnENkMVTKn+K5n6NA7Nezsqu
52B0oz7ONkKGci+t49qeHPhsWLOMRVKLiWqaOiwaD52ym0TeK3ALryCqxPqR
wo0WOjIbu/ge4BDAj9vb0XiYsF8af5NV6a0333ds4G5Pf9NIeLtLwrgP9mT/
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
9il4meBgDj4+C732cxx6jk08OOwx95d/sZCZpchrQkh8FnXgLVTRlcq6fD2A
w68dTJcegRwWvNPxDl3NwlIYOCNx68sbBLOYJAhlkzwyJapl17lKbOLlO8MU
SPh1rCTmDanXT44RJMriS5Va3jAPDg4dHNtOfM5iV9tYI995CjgftfoY2opD
aLXhyh2kvifx7W/+CvTta/3L+ympt37TndipHLq21dupw3IqfT6jeUtdvpH8
2ZWXcyf5xYTP8g8VOLDxgfmQWAXelV3QzXThsOdxzOQ3JG+90XFd0ilGgUx+
XM2afHe+Pdaa+avvHAJxcdWfRTbk+wsGDOxfXwwl0i/zgJOB5eVLHvcUHPrk
iBkTinzffna9L2ZzEMbVlnIwkk8dkbyYU+kThDt9V/PP4bBOFnxYNozgnj6t
fm/+qlT5nmwQhDUUWF1/ocOfd2SdU7bcn76Kw4TUEbMnWCiQ17Mo7+ckheo8
C5fvKoaIFBjj3fY9Q+rukgHqvOQUjGeY6cxdo0CrOuOV8V9I/RGIDIX7M8Zn
st3JPufp108Wgi16DwX0g8tNvdYTPBbluqbeW6F6vztd3raaO16JQt6uIl6B
xdIGhw/XWNSUrBJvI7jAXnuVdqCMg3A9s4pBlHVf92ttlIjUKL5zvZTs1+oD
mxMeKCDIHlopMOHn8FlbDv2bP3hZQiXERyggyHU/ZLE5TNmy914O4tiTlJTg
guLJtyqK7ipxoMWCkSs1SByNvZU4yEuBDlsWl3FSBhe/vDzW6xyL0NO8QTeL
n/VMu/ppHHb5pM5ycqZRa9fhQ/8tnOo+ddWdvH5+XTgUJr/+I0mR4fatbf3W
ZinReH3DrSNk/5xYqH7tKdn3y/u1kyWtVODz08+xSa1i8Horf+DJ4fginVc6
4RwEOxiCU16s8LIz7spBaFduQyNOd8xTHQ3273kAB7rj0iZT8vOOTdB5doDg
xyZ3u/iirxz47roYwvtPv1DWrxvDwuFh7dSSUKnKD0K71zIteSyHqC4PCyvJ
93G4KA+o6MyhpoF6m32HRX+1itkpr2T4EdPpp+N7RoUXlxXu8B1kycHjPyE7
DA8PvhxjRepl7XK7HTso8F14GcdZfOPlH7tHoW38o7z2ZD2b/Y02VS/akkjy
am4NX5DkMBh/23gy4TMh2fzAJA37nwNkLaUcrv5cRxiNDE/7fZrWuYRV6QFs
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
hU1DXbYo/2Bg8u7KXTFVeF0m19mt/hgvL2n8CMX81ZGv/n8+MZF5+eHxZ9wv
0oE7Bq7Pki+nMZ8mngn+bNeK96t9ddSAhxhHthKDdQbxG5kURL5yo8jUYSoN
qbc+57teRnwYP1RbE/ejbr9rxo9NMW7ZJEYk6rNwvN25pQjzeZfcN3fOPcDr
7Plm6ZXHLEhlpYoZmJGqPnoC/v5GUs5IoKFPr+9DDF1Zod4+dcFtLRuMq1rS
BcwAhOVSR2fw8Cr4ubx5GwNDYpe9OziEh9rUZmRIDBAXq1FdJRCQuLkutoGG
0w96+qnj901csEB1ngsD+T+UNkWncoJfaUd8uDv4pk2/j7g+b9nZUFdYCOlD
JpzFYHIlKfoXrpcBk8u/UCz+/dGBa+9mYhwmbc97GZg1uvh44C6Ma7pPzsy6
iu/f8u6U+940vLQiQldHYNtG5eLJz5A/vY/xDyfzyFPV91//2znfRAVXDVpn
GAb3Zr3P2WnPQonIRtlzNy/w495W5a9GXcO8ot+98m0hBStt33zdboL7hbR3
xjNgFjP8aArmxd7B3+SMMB4Hn6jtttMXcZhjw6CXyPfODEysHdZPAtQy17Fb
g1jwi7YptZ2P+KG2r2r1bxHEpVjuzvvNQlXu2VdvMR9dzJ7U1MJ2znvPD9ic
zKWwMJnIxWK+y/o13uY68qcVtSdsNmkwsFD2XUZ4SqefyN5NDheL1kqE+fG5
Xfy+1X/loH1DSfi1NHz/JGxoScCX2I/dYSF3/PWj53vwEBRQ8PBWJJmXVmY8
XDkoIO2eiOeXex8YNGYSD8fGkxM+xC+HLy8NvYtx0Fvz+nqXIJAee83gwOBI
2avMrzREjBZzV5jO890OPYyO+Y/cx9SKwnoOUszlu21ox/X7d+wUa8TDHedP
2X8sMr03hkE/6QER8kF1zaQBL1hYZ5ZVO846RNCP7fBbsDDbMe1Gbw56uf1S
7NWVhV6/P3f7lS4R6geuh1surznQOS/2LFYv1+QqPg/VWevmGDAw1tDjyFQj
xD/aERH9QmkIIOMirQxI5YglDEx81fd2RQMH1rcc9aw2iyFo9N1LBST/O+rL
pgSJIa/AZyqP91/0VydfoiiGHsU+SiGIE15ETDh9swcLZTe0njoiHxH7T6SW
TGXA0cPW6UF/CXi+2Hg97m0ovHgjYzYB8/QF+UdqofMRn4+C68/Pdc5P3Dmz
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
0hMme/l4/6VmhXBvCYuJdZseOTjTOP1yVmCMI4sroznBNhqLiyyfHybP159r
L3Qm/Ge81Y+X5P1kXP8Wa7f2f+cZv+5vPtd4iuAlJa5iTuFKtndr1mApfuUk
GnUhvOzGspHCgyosr5di36WrJeNK8svShIL342iU781NONCV5eeBm/fd276k
C8v7FWslLdE+dp/l19dwmfEHt0VSni/6LlgSz6awkMmxXyD5sSrmYrNWPFIm
qR6YTHDY5sVXZnW3kGLutLIHV8nPJhd7P8g/w8Do4eEvEzi/kNQJpxV+xkPL
7lD6kpkUfpSNtD8+NB59fx9MGPqIRlKZUcWZfiwuJs9MvXY5EvY7vRWbTyRg
vOMd8WJyvlyTsnIeu7NQWaAxs9WJxrpxnBKpFH1lBVsKb/YumasuleJzxhWH
sSS/bZnX+90Qhm3L9xLI5GDjGCx/fvrb5mti/LbiHNlY/DF6f3OCfiyP3xbl
MtLW2QIce9z3nQWJF9/E3IUsiT8vlx55OVkKqXPHFb3MaexqfpFn/TeB1wvr
0P/Nja7HpVBIWXalT7YYo1Spph4bWBjtr15oeFEMFcKhlWeykIW5IBpp1hPV
e2hKsURmOBaL6nmfZjclSfm++GSL+0b65Hx9qIm+pDQ6FsuXrZln/IXhz3fQ
E0UVf0U5Hk3p0bi+z0cG87KOHVW9L0HYlPe1VcsYLJQJ0knwun+jz8oYltcz
UP768nVSBYvSN/3G995LY+votQTiMliZJzhiGBmN9f57qw/lyuPXDq8T02aR
8/HflYjKG4QXzY5O3jnwIo0W/eNWyhU0bvXY2HOFH4uzWQNG9EiQ3/fKxgu8
Cb6RNR5JgbEWqzP0CC+8rz0sjcSvdp+Yj1uY6pBFDFZ7r18TT/JxkOsRl055
LBIfcII6NCZddMpc0pHl9QW/mJevDLVmoe1W1mibJsZRkWLJBUoKh3cJS1eY
knPK2UfkkfNRt65k4DsKIyIsR+5+LueD7XhC1paUJ4LHLbvBgT3isfHaEZWx
2gys3A6ZnyPxekXlzUGH90jgVbQ64jvBzzMaG7tU7ojB0rmec94HM3j0c/BB
szqCK5uHCBu99/I+Ev33T2ycm8xAVt76S57/+97hNh9Yvp49RPOb/9xgFsv/
+mx6EkvhP+e/lx8TPvZvHoaGguha/BZyPqcd3/K7eCKF0B2B5JUxPA/K0qUf
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
PxZFovD1m6yWECFYlxT/42E4eWL72bEWInDlIK0RODbdc0P9BCFYdt1veQze
uG/YNs+xsx9gl8/Y2a6eQqzhGoCjkbDxUf2mSSL8XMQKmkWjom3jr/sLhYha
zN7QRKD6heI2315CnPpV6rZvagyS/VmHVBHKw1nAHYYu/wnuwGfUrkIVlShM
nLt/sA+JX//5J4Xhp8LCFHc1AV6a57w73j8GqUlHyz7xRNgbMuJSVFY0/Ncd
0Koa19n/fuWYS8EAwqerFH47nN8shPKIgpTbBM8FT7ke03uqGJtbvh9TIzgm
ZvYZwUwfwud/psj/XE1wXA8Ntwv3YmHz/KS/T26nHn7S63uK+TkkT6vYd8NR
gtdTnC590iV5nG1vTSHj0v/r7JbcJLCHi/m2Irw6HyQcSPD+GQxQ1kokceXV
HMcJySTPhV7Tm3tODL01KaVahHdybUqjxBi1udJixE4J0ueyJ1ZCpH9v97sT
QuP21+CJs2JEsD9wODjiWKe/UJUeqzTKYEXr0+kL9QTw2d/7sTFfCk7u2UyE
F4tZI2cJOHl3NTHabrGGwgy687sP9H6XgM1/h3eXz5BCMCfvoO/hROjeXWZT
qZEk0xM5meuwKn42BU7eYRtZZ/mH1qXcJbiKE1CLRem5wk23yOe1erMGdyIU
H/hQMeSXBLt9j8xZQvgpP6+fZ9h8CWLC2QsKEWKe9bNT8ZaCKy9bKYTr89sf
1ygzYF22fM1FMK7O183ox8j0Vj724j9tIO93iW2LmS/Cm6Xy2XfP0Yid+rWP
HsmLUyVF/rOCaCwecPpulzoR9I2vDmrtkiTTV5ffs6q+qCct48eWQ6qZQ9md
fiq/F6RPqBzEyPSFtEn0m/Oexko71hFcBH56NpVDeAwnn2ctghXbjhtB8Fjb
FLdI+c7z+grtyuJ3cmLENEYaNL3v1LPoONf5r89LBFYVJjydQXvlSMOoY2Jc
DmAFtmmZH/KFD/XnJn7q/HtfzgCWxqdw9sKdfL8yqxhFIWR3/YVAXxF25O28
u+4ceZ/qgnkKDSL0sDu8sn4Zg6Vxx66XGIrw5aCh3gPCtxwO9bIb7i+C+eWF
kQP4SbL7ovmOZY/evKKw41zFlrsVIriaWpY5xdDgjV700pvk0fB9Wz95RBA+
9XLcYzgRPNin15y7hG936FNqBA0RqaYw2MAeJz0Qw+ptdWqdDhlvc8+i2STP
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
dpH3rzP6yYPARWJofR27p9CHgrGXp29oihDqbbW82e+6u7GakfJ+3MEx/azr
N1GYoh4YkCB64ui7YrLfm/zeHz562VN2iuRDyY5vBoOF0Bzp+1H6iMLsRxVv
hz2T4K+m/nCvUSxax0yUCf+K8HiE5YMViQoMHMY5JIrwQ/du0FCVAvc2rGp9
q2cw+lgs6Pl3Cg1Wl909MlkMv4Cjbd97UxjzYMjAqIci5Cy03DbORYHlXLvT
NzFGf5m1OmQYhbkv9VfO/iqGXmrkzivvFFDDy8lCLNzWa/vDrhQyCrgCrwQ7
TyQ7LFytADcN8rClCD5qokDO64pBSw1viaFJb2mcRdZnVt6l/Vb7ZDjdwy3Y
fQXJH0ojacBGEWxGZCse7Kd4f6XzemPt3p2gUPCs3/LhpWK8ez3iD1tOI/9v
74WHMwXotEfP/UalAq5dNWUbPgsxvFfB+NJiBpy62oN7YpiGJulZkv2Q3t8r
7vZMAZw7aO202EH258Up/o8SxIhNmPhq7XkFDs92nX3hlxippY6Bzr0I/lI3
YJLzedLtbK9CBRxOfzHRJ/Gm5FCV6UsnxT8fFAm+DN9xrg9Zn4/BS1wKq8Og
F36t5HY2Bak25wAjxpa6ifO2PFEgr4diSHqSCO8+6JwzIuvd5I/XK2DNqDH1
CkRzsjMlQuxZvuRkDsmvKvGagTv2CeEwLivfg+TrnXfSln2/IOT5/YhHfood
mcL/ySecutw6cwrqsLxJAqeVXSOPH1Ggrs2YGSfI+fxcU59kZEzx/lCfWqza
UutGQy3v903I95/tW51DnVwqRpXu8lk5bymorwdJ/BRP4hRGWd4f4ZjdqB8D
dWn0db+qdWihEE4TdqxLX6yA3IRTKBZgwaZwO7fXJH6Z3bAwDZdAvV26kPi4
i1O0FcOAs18XKTHifN8vOQS3fyXoLmYLg6Slv4+l2CugsWSmdLO2EkJKPutp
PY317b7Qy/yVKCXR9CfJs0JbbqKbxZ6dm6tvrCPxNe4mQYpK3J47KtY7UoG0
vrc8FpSwvN+tfHi0P0uzeLe/7fk3Pwlu2D+vvWypkp9L3L2yZYugFiocWcwp
FNJIPvBJdaJjc/+tr7YvPXVCJMxmvBT0u0WDBOvlOwNYvp+1qQ/p7pt48XkN
gvtKPr8y6d2sr1q9N0Wnr4YK+py8TpAcEwJMpzn6sODcfh60JnF/xogk96Ao
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
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox["\"local TE\"", TraditionalForm], 
    FormBox["\"combined TE\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica Neue Light", FontSize -> 12],
  
  LabelStyle->Directive[FontFamily -> "Helvetica Neue Light", FontSize -> 12],
  
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.471678917001212*^9, 3.4716789374623013`*^9}, 
   3.471679031954224*^9, 3.471679069290944*^9, 3.4716821696297007`*^9, 
   3.4716822726297073`*^9, {3.471682320171302*^9, 3.471682352571802*^9}, 
   3.471683044657586*^9, 3.471689236165866*^9, 3.4724812897922773`*^9, 
   3.47249534483066*^9, 3.4728387887699633`*^9, 3.472839102119646*^9, 
   3.472839331456396*^9, 3.472839617345647*^9, 3.4728407285045357`*^9, 
   3.4731736752366323`*^9, 3.473175405228579*^9, {3.4731760210386133`*^9, 
   3.4731760262601023`*^9}, 3.473176095400386*^9, 3.474007543529538*^9, 
   3.474007706979014*^9, {3.474624697716763*^9, 3.474624724485298*^9}},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztfW1srdlV3onP8ef9vnPnI5lAJtCGAMkhAULCR3LnJJlJmAlxpiUzEvXM
bUTxzI1K6wKi16BS4gKqERLjP8UzSTENNVVw1cG/Lo1qqrofWGqtiyxVBtU/
DKqpZFVW5fw4P86P3b32Xs9+n73f9R4f37lTCTWW7j32e953v3uvtfb6Xmv/
2Bd+7pWf+ukv/Nztn/zCE5/6mS8svHL7J3/2iaf//s/4S+23tVpve6XVah09
0er4353/lf+Tn9vyX/PvfxQ+2m7QP3UnJyeu7//q6LX+6ak7Pe2Hv8b0mr8x
3jdwrS/HIb4ePh51u8tzbnn3xP8xcDur8zIF1+vJVLpubfc4vNX1D9yyXuvK
NOdW3dHAudP9jfh3t+u/67mllaXw9299bcl9dvmPWxPhHRNub3XW9VZ2XfVz
6tZmW+NhvW23uneK661/Us7us+5Lf3ziTnaW/dU5t6t3Hu+shL/3BwN3d8HP
YGHThSW7E7fqZzq7fuA251tufvNIX7jvFvzMuss77hu7y+7JL2F2U253peev
8+xO3Epv1m0d+yUOBh7Kg8Gv8bQ6aVq7yz15RQTzuADKrfm3L+/+mVv08Ng6
AQpm3ODwrlvdPHDbS13XW77rjj0u5Odoc55nFSc12Tip7VPX+vWmycz6N5+2
9fLeyqxb+sOve4T03G7fdXS17vTArS3OBjy3uj03N+uh5XEz4vt3+kPe33O9
1f0KGCdu2b9kdf9/hc+NIwLG0bZb3zpw/aNdt7V3EsYfDE7dlgdODRgXjcmc
ulU/7+7srJ//rJsN/3pudmHdf+N+1aahweFGWHWk6r7bXhUoLDmhkL3VXvh9
/2TgBh5Ciy2hnUN3uid0tuj2T4UWjt36nIfW2v4INHTqwdVzazt7bn9vb8zt
7e15St/bP3IDpfRf4VleSLMMNLG95nqRHfg1Lrndk0Ea9e7KvAejbJyOm/d0
pMDze3cBl3vzq+7QP1GgdG9UlLZ5Mq3rek1HC3+N6aTlxYN+P05g2TOBpe2w
vr4n7kG+jfwzfh8JfxpgMQUM2oEXvbpbvvZV4SX02rbbX498Ki43MpG5tR23
NpdfW9uvMZbwxxnc9a3+/VO6DObek8a1Gb0mxHoauPqg9bBeYy4/aVybycY7
DePdoPFOjo/dSX+QnuVrF4zxbow453eP+I5vexMw+NYIxqfDxxW3uwap1Q0S
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\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";", 
  RowBox[{"globaltransferentropy", "=", 
   RowBox[{
   "<<", "\"\</Users/olav/Desktop/Doktorarbeit/Imaging/transferentropy/output/\
transferentropy_global.mx\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4553615078873053`*^9, 3.4553615210607243`*^9}, {
   3.456555295730124*^9, 3.456555311256716*^9}, 3.4565755433939342`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";", 
  RowBox[{"maximatransferentropy", "=", 
   RowBox[{
   "<<", "\"\</Users/olav/Desktop/Doktorarbeit/Imaging/transferentropy/output/\
transferentropy_maxima.mx\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{3.456575545634575*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ii", ",", "jj"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"adjAtransferentropy", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"size", "/.", "pars"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"jj", ",", 
         RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fitted weight\>\"", ",", "\"\<variance reduction (0,0)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"adjAtransferentropy", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"size", "/.", "pars"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"jj", ",", 
         RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fitted weight\>\"", ",", "\"\<variance reduction (1,1)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"adjAtest3", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"ii", ",", 
         RowBox[{"size", "/.", "pars"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"jj", ",", 
         RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", "1"}], "]"}], 
   ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<variance reduction (0,0)\>\"", ",", 
      "\"\<variance reduction (1,1)\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4708298690112667`*^9, 3.470829901053796*^9}, {
  3.470829932469706*^9, 3.470829933219687*^9}, {3.470829997929508*^9, 
  3.470830069324914*^9}, {3.470830129984084*^9, 3.470830176061349*^9}, {
  3.470830366029457*^9, 3.470830369546521*^9}, {3.470831031679029*^9, 
  3.4708310495070744`*^9}, {3.4708312167200737`*^9, 3.470831229466155*^9}, {
  3.47083129022926*^9, 3.4708313097285557`*^9}, {3.471678876148909*^9, 
  3.471678878907696*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "All", ",", "kk"}], "\[RightDoubleBracket]"}]}]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"kk", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<bin\>\"", ",", "\"\<total TE contribution\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<all connections\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.4776566104910717`*^9, 3.477656695077209*^9}, {
   3.477656734277155*^9, 3.477656736851563*^9}, {3.4776567687156982`*^9, 
   3.4776568114308243`*^9}, {3.477657327912346*^9, 3.4776573385427723`*^9}, {
   3.4776621884005136`*^9, 3.477662210150556*^9}, 3.477662454483232*^9}],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
   EdgeForm[Opacity[0.7]], {{}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0., 0.}, {1., 0.8701022519999999}]},
          
          ImageSizeCache->{{34.368, 49.37320547945205}, {63.934928474586656`, 
           84.76729793979337}}],
         StatusArea[#, 0.8701022519999999]& ,
         TagBoxNote->"0.8701022519999999"],
        StyleBox["0.8701022519999999`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[0.8701022519999999, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1.1, 0.}, {2.1, 1.295222738}]},
          
          ImageSizeCache->{{50.32372602739726, 65.3289315068493}, {
           54.00080088359147, 84.76729793979337}}],
         StatusArea[#, 1.295222738]& ,
         TagBoxNote->"1.295222738"],
        StyleBox["1.295222738`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.295222738, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{2.2, 0.}, {3.2, 4.167891482}]},
          
          ImageSizeCache->{{66.2794520547945, 
           81.28465753424655}, {-13.127128184404228`, 84.76729793979337}}],
         StatusArea[#, 4.167891482]& ,
         TagBoxNote->"4.167891482"],
        StyleBox["4.167891482`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.167891482, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.3000000000000003`, 0.}, {4.300000000000001, 
            4.021338604}]},
          
          ImageSizeCache->{{82.23517808219177, 
           97.24038356164381}, {-9.702510842205513, 84.76729793979337}}],
         StatusArea[#, 4.021338604]& ,
         TagBoxNote->"4.021338604"],
        StyleBox["4.021338604`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.021338604, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{4.4, 0.}, {5.4, 6.197391323}]},
          
          ImageSizeCache->{{98.19090410958901, 
           113.19610958904104`}, {-60.55206071611579, 84.76729793979337}}],
         StatusArea[#, 6.197391323]& ,
         TagBoxNote->"6.197391323"],
        StyleBox["6.197391323`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[6.197391323, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{5.5, 0.}, {6.5, 4.085141200999999}]},
          
          ImageSizeCache->{{114.14663013698626`, 
           129.1518356164383}, {-11.193436732883086`, 84.76729793979337}}],
         StatusArea[#, 4.085141200999999]& ,
         TagBoxNote->"4.085141200999999"],
        StyleBox["4.085141200999999`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.085141200999999, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{6.6, 0.}, {7.6, 7.655942323}]},
          
          ImageSizeCache->{{130.1023561643835, 
           145.10756164383554`}, {-94.63517881824743, 84.76729793979337}}],
         StatusArea[#, 7.655942323]& ,
         TagBoxNote->"7.655942323"],
        StyleBox["7.655942323`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[7.655942323, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{7.699999999999999, 0.}, {8.7, 4.5885245910000005`}]},
          
          
          ImageSizeCache->{{146.05808219178076`, 
           161.06328767123279`}, {-22.956395677768427`, 84.76729793979337}}],
         StatusArea[#, 4.5885245910000005`]& ,
         TagBoxNote->"4.5885245910000005"],
        StyleBox["4.5885245910000005`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[4.5885245910000005`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{8.799999999999999, 0.}, {9.799999999999999, 
            8.401612747}]},
          
          ImageSizeCache->{{162.013808219178, 
           177.01901369863003`}, {-112.05985106245322`, 84.76729793979337}}],
         StatusArea[#, 8.401612747]& ,
         TagBoxNote->"8.401612747"],
        StyleBox["8.401612747`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[8.401612747, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{9.899999999999999, 0.}, {10.899999999999999`, 
            6.305359222}]},
          
          ImageSizeCache->{{177.96953424657522`, 
           192.97473972602728`}, {-63.075032249408764`, 84.76729793979337}}],
         StatusArea[#, 6.305359222]& ,
         TagBoxNote->"6.305359222"],
        StyleBox["6.305359222`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[6.305359222, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{10.999999999999998`, 0.}, {11.999999999999998`, 
            7.570024030000001}]},
          
          ImageSizeCache->{{193.92526027397247`, 
           208.93046575342453`}, {-92.6274579175367, 84.76729793979337}}],
         StatusArea[#, 7.570024030000001]& ,
         TagBoxNote->"7.570024030000001"],
        StyleBox["7.570024030000001`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[7.570024030000001, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{12.099999999999998`, 0.}, {13.099999999999998`, 
            6.902187177}]},
          
          ImageSizeCache->{{209.88098630136972`, 
           224.88619178082178`}, {-77.02158446247415, 84.76729793979337}}],
         StatusArea[#, 6.902187177]& ,
         TagBoxNote->"6.902187177"],
        StyleBox["6.902187177`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[6.902187177, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{13.199999999999998`, 0.}, {14.199999999999998`, 
            5.125063123}]},
          
          ImageSizeCache->{{225.83671232876696`, 
           240.84191780821902`}, {-35.49411712357343, 84.76729793979337}}],
         StatusArea[#, 5.125063123]& ,
         TagBoxNote->"5.125063123"],
        StyleBox["5.125063123`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.125063123, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{14.299999999999997`, 0.}, {15.299999999999997`, 
            5.695638249}]},
          
          ImageSizeCache->{{241.7924383561642, 
           256.79764383561627`}, {-48.827198658327205`, 84.76729793979337}}],
         StatusArea[#, 5.695638249]& ,
         TagBoxNote->"5.695638249"],
        StyleBox["5.695638249`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[5.695638249, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{15.399999999999997`, 0.}, {16.4, 3.432201804}]},
          
          ImageSizeCache->{{257.74816438356146`, 272.7533698630135}, {
           4.064316051548573, 84.76729793979337}}],
         StatusArea[#, 3.432201804]& ,
         TagBoxNote->"3.432201804"],
        StyleBox["3.432201804`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.432201804, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{16.5, 0.}, {17.5, 3.9282688219999997`}]},
          
          ImageSizeCache->{{273.70389041095876`, 
           288.7090958904108}, {-7.527675425654664, 84.76729793979337}}],
         StatusArea[#, 3.9282688219999997`]& ,
         TagBoxNote->"3.9282688219999997"],
        StyleBox["3.9282688219999997`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[3.9282688219999997`, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{17.6, 0.}, {18.6, 2.089301583}]},
          
          ImageSizeCache->{{289.65961643835607`, 304.66482191780807`}, {
           35.44493066956447, 84.76729793979337}}],
         StatusArea[#, 2.089301583]& ,
         TagBoxNote->"2.089301583"],
        StyleBox["2.089301583`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.089301583, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{18.700000000000003`, 0.}, {19.700000000000003`, 
            2.234850898}]},
          
          ImageSizeCache->{{305.6153424657533, 320.6205479452054}, {
           32.0437643799871, 84.76729793979337}}],
         StatusArea[#, 2.234850898]& ,
         TagBoxNote->"2.234850898"],
        StyleBox["2.234850898`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[2.234850898, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{19.800000000000004`, 0.}, {20.800000000000004`, 
            1.443262796}]},
          
          ImageSizeCache->{{321.57106849315056`, 336.5762739726026}, {
           50.541431426739834`, 84.76729793979337}}],
         StatusArea[#, 1.443262796]& ,
         TagBoxNote->"1.443262796"],
        StyleBox["1.443262796`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.443262796, {
          GrayLevel[0]}], "Tooltip"]& ]}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{20.900000000000006`, 0.}, {21.900000000000006`, 
            1.3082057759999999`}]},
          
          ImageSizeCache->{{337.52679452054787`, 352.53199999999987`}, {
           53.69741593683373, 84.76729793979337}}],
         StatusArea[#, 1.3082057759999999`]& ,
         TagBoxNote->"1.3082057759999999"],
        StyleBox["1.3082057759999999`", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1.3082057759999999`, {
          GrayLevel[0]}], "Tooltip"]& ]}}, {}, {}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  Frame->True,
  FrameLabel->{
    FormBox["\"bin\"", TraditionalForm], 
    FormBox["\"total TE contribution\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox["\"all connections\"", TraditionalForm],
  PlotRangePadding->Scaled[0.02],
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.4776566959106894`*^9, 3.4776567375899687`*^9, {3.477656770808675*^9, 
   3.477656831598749*^9}, 3.477657304508561*^9, 3.477657339458802*^9, 
   3.477662189314393*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
xSHEGat75BDOeO9jnoh267e5emsk\
\>"]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TElinked", "=", 
   RowBox[{"TEnotlinked", "=", 
    RowBox[{"TElinkedUnidir", "=", 
     RowBox[{"TElinkedBidir", "=", 
      RowBox[{"Table", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", "20", "}"}]}], "]"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"source", "=", "1"}], ",", 
    RowBox[{
     RowBox[{"source", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
    RowBox[{"source", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"target", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"target", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
       RowBox[{"target", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"GetConnections", "@", "adjA"}], ",", 
            RowBox[{"{", 
             RowBox[{"source", ",", "target"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TElinked", "+=", 
            RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
             RowBox[{"source", ",", "target"}], "\[RightDoubleBracket]"}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{
               RowBox[{"GetConnections", "@", "adjA"}], ",", 
               RowBox[{"{", 
                RowBox[{"target", ",", "source"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"TElinkedBidir", "+=", 
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"source", ",", "target"}], 
                "\[RightDoubleBracket]"}]}], ";"}], "\[IndentingNewLine]", 
             ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"TElinkedUnidir", "+=", 
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"source", ",", "target"}], 
                "\[RightDoubleBracket]"}]}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"TEnotlinked", "+=", 
            RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
             RowBox[{"source", ",", "target"}], "\[RightDoubleBracket]"}]}], 
           ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"source", ",", "target"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4764283498257627`*^9, 3.476428405824292*^9}, 
   3.476428532546214*^9, {3.476428568721843*^9, 3.4764287632168827`*^9}, {
   3.476440148302465*^9, 3.476440273993964*^9}, {3.476440334205378*^9, 
   3.476440418368566*^9}, 3.476440458120864*^9, {3.4765989065265217`*^9, 
   3.4765989285261297`*^9}, {3.47659897224407*^9, 3.47659897338774*^9}, {
   3.476711504618264*^9, 3.476711615206511*^9}, {3.476711773075418*^9, 
   3.4767117891483393`*^9}, {3.477662326098426*^9, 3.477662441813408*^9}}],

Cell[BoxData[{
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Total", "@", 
      RowBox[{"Flatten", "@", 
       RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "All", ",", "kk"}], "\[RightDoubleBracket]"}]}]}],
      ",", 
     RowBox[{"{", 
      RowBox[{"kk", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<bin\>\"", ",", "\"\<total TE contribution\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<all connections\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"TElinked", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<bin\>\"", ",", "\"\<total TE contribution\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<linked\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"TEnotlinked", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<bin\>\"", ",", "\"\<total TE contribution\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<not linked\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"TElinkedUnidir", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<bin\>\"", ",", "\"\<total TE contribution\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<linked (uni-directional)\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BarChart", "[", 
  RowBox[{"TElinkedBidir", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<bin\>\"", ",", "\"\<total TE contribution\>\""}], "}"}]}], 
   ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<linked (bi-directional)\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.47766246106386*^9, 3.477662604083799*^9}, 
   3.477662974102916*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["compare adjacency matrix directly", "Subsubsection",
 CellChangeTimes->{{3.4565600222544327`*^9, 3.456560032637117*^9}}],

Cell[BoxData[{
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"adjA", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<AvocadoColors\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"adjAtest2", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<AvocadoColors\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"ArrayPlot", "[", 
    RowBox[{"maximatransferentropy", ",", 
     RowBox[{"ColorFunction", "\[Rule]", "\"\<AvocadoColors\>\""}]}], "]"}], 
   " ", "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.455292993620844*^9, {3.455324341025098*^9, 3.455324390421791*^9}, {
   3.455325640539691*^9, 3.455325745568331*^9}, {3.455326103566411*^9, 
   3.4553261293610497`*^9}, {3.4565556499209137`*^9, 3.45655565542192*^9}, {
   3.460709101073822*^9, 3.460709103849595*^9}, {3.460709989978468*^9, 
   3.46070999913929*^9}, {3.4715337667010403`*^9, 3.4715337827623787`*^9}, 
   3.471533876557386*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"compare", " ", "single", " ", "entries"}], ",", " ", 
    RowBox[{"1", "st", " ", "order"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xdata", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"Sort", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"adjA", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"Length", "@", "adjA"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"jj", ",", 
              RowBox[{"Length", "@", "adjA"}]}], "}"}]}], "]"}], ",", "1"}], 
         "]"}]}], ",", 
       RowBox[{"Length", "@", "adjA"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"xfit", "=", 
    RowBox[{"FindFit", "[", 
     RowBox[{"xdata", ",", 
      RowBox[{
       RowBox[{"m", " ", "x"}], "+", "b"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "b"}], "}"}], ",", "x"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xplot", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"m", " ", "x"}], "+", "b"}], ")"}], "/.", "xfit"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"-", "0.2"}], ",", "1.2"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"xplot", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<actual\>\"", ",", "\"\<reconstruction\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<quality of reconstruction\>\""}]}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Correlation", "[", 
    RowBox[{
     RowBox[{"xdata", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"xdata", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "ii", ",", "jj", ",", "m", ",", "x", ",", "b", ",", "xfit", ",", 
      "xplot"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.4565665071339903`*^9, 3.4565665116376543`*^9}, {
   3.456566546674162*^9, 3.456566669039926*^9}, {3.46070915492819*^9, 
   3.4607092060603123`*^9}, 3.46070924616236*^9, {3.4607092918636923`*^9, 
   3.460709296245121*^9}, {3.460709376733346*^9, 3.4607094148798018`*^9}, {
   3.4607094651546926`*^9, 3.460709761567069*^9}, {3.4607101199091177`*^9, 
   3.460710129275189*^9}, {3.460710188383668*^9, 3.460710208411293*^9}, {
   3.460710246018693*^9, 3.460710316073655*^9}, {3.460725830734665*^9, 
   3.4607258619611073`*^9}, {3.470823492150427*^9, 3.470823493164073*^9}, {
   3.4715338115908937`*^9, 3.471533812156806*^9}, {3.471533887345933*^9, 
   3.471533896975431*^9}, 3.471534965619843*^9, {3.471682185477099*^9, 
   3.4716821928919697`*^9}, 3.471682601513482*^9, {3.471683021950218*^9, 
   3.4716830223551397`*^9}, {3.4716830575942802`*^9, 3.471683092728168*^9}, 
   3.471689245437503*^9, {3.471689277036293*^9, 3.4716893008245497`*^9}, {
   3.471694473532833*^9, 3.471694492645197*^9}, 3.4716945292826567`*^9, {
   3.471694619181395*^9, 3.471694639115456*^9}, {3.472481305157132*^9, 
   3.4724813097730227`*^9}, {3.472481466997497*^9, 3.472481487808833*^9}, {
   3.472495352250499*^9, 3.472495358329241*^9}, {3.472838838599884*^9, 
   3.472838851759388*^9}, {3.47283913140653*^9, 3.4728391360549717`*^9}, 
   3.4728407822051153`*^9, 3.4728408125147457`*^9, {3.473173685935557*^9, 
   3.473173689665001*^9}, {3.473173736774496*^9, 3.4731737516290894`*^9}, {
   3.473175410520753*^9, 3.473175410741762*^9}, {3.474007744388389*^9, 
   3.474007763170548*^9}, {3.474624736550283*^9, 3.474624737564253*^9}, 
   3.474663868835176*^9, 3.474664592546451*^9, {3.474704698352104*^9, 
   3.474704699310089*^9}, {3.474704812536936*^9, 3.474704814142859*^9}, 
   3.474704882043803*^9, 3.474813592105111*^9, 3.4748144891122713`*^9, 
   3.477915939394462*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"m", "\[Rule]", 
    RowBox[{"-", "0.001244903879310234`"}]}], ",", 
   RowBox[{"b", "\[Rule]", "0.004464940469310246`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.4728391137676077`*^9, 3.472839136452991*^9}, 
   3.4728407351736593`*^9, 3.4728407828953323`*^9, {3.472840813241984*^9, 
   3.472840839286766*^9}, {3.4731736866506367`*^9, 3.473173690180151*^9}, {
   3.473173737367099*^9, 3.473173752187623*^9}, 3.473175411265203*^9, 
   3.473176100002975*^9, 3.474007712778537*^9, {3.474007745117992*^9, 
   3.474007763714903*^9}, {3.474624731371811*^9, 3.474624738038411*^9}, 
   3.4746334455213137`*^9, {3.47466386493231*^9, 3.474663869693486*^9}, {
   3.474664587668227*^9, 3.474664593084227*^9}, 3.474703911018825*^9, 
   3.474704700372231*^9, 3.474704754701357*^9, 3.474704814973263*^9, {
   3.474704882542674*^9, 3.474704908607032*^9}, 3.4748135931374474`*^9, 
   3.47481448977805*^9, 3.477915939929864*^9, 3.483379784442342*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
I/58sOVL51tfBOH0HgvJJHnYdv1qo7cZ8fkjR9Pf9jDvve9ztI7wNtZH0rJu
sL1gjrmKOywcc0a3yRe+dCRS2DoaHrxY/Ko6Hp57eIPPKgte969IaOsd2CHi
8waTSnjkIW1TM+GXugpq/17BHvxH23newQy9c3TzHXDbz4npbd2wS5UKpcMQ
zBeUIdjxEV6l2vHlD2EeGeVbeeOwQnjzyDFek//cE9gircAPD3VmHiwUgt0+
mdiyS8CWFzeI3JaGXRsyXZ7qwS3GDML6ZvDIhTpdH3O4XbnPbp0HvHXzWRYD
T3jdQbY9Vv5w6eN+76Fg+JlrsOezS/Dwcz3jhhi40UIl1S8BzuaykFHMhAO3
8aV3E3530zKv9z6Rj4t5L7blwzTHQo5YE555oRqkXA1PNYZaydfCBbe76iUb
iHhyr29aPwCvxjD+/DRIxEOb4FD3GS5cTvuX8oVY3+wHg+83uN/WPntkGf4S
FhFQRWOK9z+Mip13N/z5s6lFGuHICfpL/aIwA+PfyvYD8JpL62s3JfjcjrKQ
DBVYepdg0kdn+MTreI02N1iqnp4h5wIsGSRWohQN01cYrITEwRlVMVRCKXDc
Rv5DjZmw4pS4aOVd2GxfXIFbNvzmwbumg8WwamXYZvYSONBrz+sdTXC9Vm2/
LOHGyfEjMc1EvGkdN/8QPmb6LTTjJ3yrevKkHLPZf943eOuDPyts5xUz68gL
c+yZ3n1FGl5eUJlq0YX11I7n8jnDN/MG7LWDYJ7pxWr6C/Cupha9GsKudHsS
ei/B5YoxuY7Xif0Ov1LLDIOX1ruW+8XDr2pavCYT4IAa7SaRTNi48nXS0Wz4
k/ryoGQ93FWjYuH4DA7kV7usMwrfElFouzsF68vO2jz4C48nNEa8pDT/z2+p
NsWMb4MZezn6n7PCP5yPfBuRgnkqRq5OKcEG+vo1xuZw/7+AgXjCmT41Q8N2
sJdLjUfROdg7901xZRUsUrd6puUJPLu1h/9lI/w+TU+nqgn+1/uTW7QdFtIp
qW9+D19Lv/6grB9+Z8/b9+YzfFBhJnr9LJweRBe2dx5+YmmZNEl1AvlWz1b1
oIff5pR+ZmGF9XNPP6jggQtbTM++lIZFzekETx2EH/EJOv86BHM/5r7aog6H
zi9HlR6Ft4lwrTtrBg8nj1k8c4Ql/cp5PN1gSjrBRyYecBhPZuD6U3DbUsF2
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

     "]]}, {{}, {}, 
    {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJwVkms0lAkAhl0mKwxtmiO3omySVFaKU3krUk3CKBua0iZ8MwZjBimXitkd
kRJGWxObxXSEsjlYYT+NwuR6sF11sZH7pfmKbmrtj/c85/nz/HrNj4Z7Baqp
qKjsndv/PMN0Yl++rCBvL3iTPeguhIPYNl6cqiB30oyNfOZ8osEiNypeQfbO
eOQ07xXCb4v2K9bPClLjZXV+kZsQ69c9DtCyUpB+pWllIUwhhhiCkNi/mklV
pv2DyR1CuPcVnjz0qIn0SBLNzmwWwiSGftmc0UiOvl92TNNaCDOxWD7qIieF
OXH1FjQh9IK1ddq5deSawGXPel4K8NXy1D5xeCVpkUTz2FQrQPyBi0PJ1aUk
N0DdK0ciwMIijsUFm9/J1wHu+pkRAqxuf38t1nkbeWNFZYCIKUB5cRzhlpKD
m/Cjr7YQwJ8+NSFpLUF/DDMqWEWAvKWxnxNUK8GNPMDLfRKB1tmoFk/jOpin
l5lzKiIwVh03fktTDoaa67qRixE4m5mZHNVxHz4bPrQFhUSgwUM2P8VbgfaU
aavjOyMgWaWby7ZsQ2be94wkswgUrzQdlgk7kaXL8d3xiQ8/G9tpV7suNEt1
2NKHfHjfndRpXNwD5mjr+NgtPnJdS7LHnv+Db35PtnSl8mF3UH+VsvkRaGlq
puXH+KiXsOnfFT+BC4PwZjrxcfVufkAD7xmq6gzdooz4aIiTNBze/xyUZ2f+
xsFwOFr9kp1n/BK9QfNWl+SGozu+uPcj7xWcrMqD0g6Eo+zmsGChfx+c+FfI
QK1wrH8sk3/d+i/yZwwlgfIwHN7teOmp/WvI1LuT2ZFhELXV6jut6MeyWtra
esswsJjk7iiNAahVtLP2vArFPd1LtKsfB5D4Y1dGW0YoXrSMx2T3vkHQVKjn
cWYo3kntJYtrBiH3S6xPUw9FWbnXhpSSIdTu7nSXVvKgf28ivSNtGCYnKn07
w3gwMTnCpyWOwMjmYeIXMx5aeZ7z6UGjSDA/v9LzcQhiOm2ZOTvG4CP/+/SC
iyF4EDukZ+owjq7BlTNNziFoWLrkAt9oAn/utR6RfebiqLZVZrneJNY4BH+O
K+XimyhjKVSmYNFhTJJHuLim4ul1nj+FBBnxzcqQi0VmMTu9R6YQrTZ5KLWF
g2c1/oYa7LfoyaU7LkriwKwP5MmWtygeLGicv5kDhxsplsEuSphVRAmmJwgU
TGbxtlQo8VH+4orWdQLaNenO9lVK6Gi7RysKCQh+PWdkU63Ekn11rOQCAjAV
NZvUKbH9tVRT4w8CT5lCiy/3lDin7hutmkNAT8bqvdMz13fpZn3IIHCSrevm
8E4J1/tNmm8SCPRZai1fN62EL31jf0E8gV3UvE+WH5QI8ZaRAXEEGCmz1w2+
KJE+IIruO0GgrGpMfUadwtN52/t7IwkMLGypqdCnEOZaS3ZzCbi9aMwoZVA4
fd5amsEhcLtIzik0oJDx8Eo0iyBweusdA4kxhaqgEzYdgQSMwoqEkcspqIo3
SB8cIXDGsZDJ+4HCoo7C6LP+BIZoeebHLCmsMGB47TpMoEL6W8c+awrM65Rm
40ECJsFZsj02FA5NHu0X+RFzP0qPd15Lgb+xi3T2JTA8m7p/ky2FxFPbpGo+
BDwVYms7OwpZTWXRd38i8B9eREYE
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox["\"actual\"", TraditionalForm], 
    FormBox["\"reconstruction\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox["\"quality of reconstruction\"", TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.4728391137676077`*^9, 3.472839136452991*^9}, 
   3.4728407351736593`*^9, 3.4728407828953323`*^9, {3.472840813241984*^9, 
   3.472840839286766*^9}, {3.4731736866506367`*^9, 3.473173690180151*^9}, {
   3.473173737367099*^9, 3.473173752187623*^9}, 3.473175411265203*^9, 
   3.473176100002975*^9, 3.474007712778537*^9, {3.474007745117992*^9, 
   3.474007763714903*^9}, {3.474624731371811*^9, 3.474624738038411*^9}, 
   3.4746334455213137`*^9, {3.47466386493231*^9, 3.474663869693486*^9}, {
   3.474664587668227*^9, 3.474664593084227*^9}, 3.474703911018825*^9, 
   3.474704700372231*^9, 3.474704754701357*^9, 3.474704814973263*^9, {
   3.474704882542674*^9, 3.474704908607032*^9}, 3.4748135931374474`*^9, 
   3.47481448977805*^9, 3.477915939929864*^9, 3.483379784685946*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
3GLqgiCQ+BBehB/hSfgS3r2epAPRg+jS6QCf/KSkF9GN6Ed0JJ4SXYm+RGei
N/WDN79Z9gPiJ/GF+EN8In4R34h/0/ykfkD8Jr4T/0kOqDzJBckHyQnJC8kN
tffud0t5IhhIvkjO2m3JT5I/4inJI8kl4XPzzVJeSW5JfkmOCX+Sa5JvknOS
d5J7ohf1A+oP1C+ofxBdf/Yz6jfCMsmsQOUIkKtKB7h4BJD2q7BZF7D3j/Xv
pIojcKZUHLOWwCfWahVHrL3tNomuVnEk2tMqjlirVdyHPyzZS10lqeIuv1yS
f1rFEWunVdx55x1NOo7App5LSfSKslBWkggqSlVQVVQlSQ41QU1Rk9Q0cZa0
LXGWQCMQibME8qc+JTlLqJAGItQIRUKVUCbtTiQgUhBJvvEN2QOIVEQyIh2R
kEhJJCXS3nPPk7Mzdjf6rTKb7b1h7Kjf79W5iLAiZo3sJ66ifElYNTeTypeE
e5bypc4wrXyp01Dn0cqXSD+tfIlFWvlSpyT20YBFnfW881KVLy65RNZJSiCL
8iXJI3ZOK1/qrMTOaeVLSovYOa18v/c9yU5SesROqXxfZAg/f3mLZiv5yal9
QRjpemo/a3nrJM3FpLolDk6rW+IgQUrDhVa3pHa0uiUMCdNpdUsU0cNnQt3+
72P+GS/9vRL2PvqFsboltTitbkl9pqlb4ui0utUcTKpbqn9a3RIHtbrVwycN
D0l1qzk4rW6pQ06rW83BpLolekbyOgbRUy5eplPyrSWDO3Ddh64Q+mU/9l92
Ba51b+cd9Gi2bSQl4qkSZK3eiAzz1VtMynn67Q1v2K7fiJTT+o1ISSp3Wr+R
KJCK1vqNSCnE5Z8e/3846/EvRfEJeyUpk/qNlMZdd23Xb0RKqd+sa5cZuUau
c7jWYzFs82un7dF64YaAnw6rmctm1tnaBvy6mCmV5fUZf7iuaneLaotsyPX6
Q4If4TAUyJgbdtY4q6TztMVFnMk+q4wPu8trJcjp5GjjgDJc51q/uUpo6Au1
0UEQEo8HaNYaZACvYUapuaGX+OW/jf4okFez0MrnaH3c2I2gIfhe6SAK9YIc
EWzIrTm9cI0tydUEuYQkFy7pbhtjS66xpZEnDZlyuy8MnRJTrVaXiw6t/ngN
LZnTge0aqi1axhCzWp7J5oQaCNYmCfKAakneSWTSxrFqWXYNxtowy6p6X0Ve
UVKh47OcZw0dha6qGIfwhOLv0NG3Yg2u56Infrv0321A3Zq1Vr1yK6668faJ
zT73qmtwUFIr855YBifDdW0KSmPsPnNBXOOGo8Tkfu2jOGtHUp54W/1qjnsV
5GPEgHM7Pnfrbdq1Uvz3tVulEuvVL4pYg3PiLNtLz0u0EFCOX1P57mMnxuxr
+5E0icz/CAOvqY/aZt/iulc8HBdhkTxNSQv39SCysu9j3Ve+jvGUKGTFrCW/
H3ho8MHZEgK9IXc/dIlM7QrqwkiwxqTP+43rZOw4E/F9muKfTiKPRuufzyzY
6lO1Lbu39Ku7D5felJX5FM0DbpduKUt6Rbv3/mhdLzE52JSX6o7GbExfef2X
NpWpd+OVVxk7OgMGVubjASKV7wNxPKHJqkId7GilRrz98z97M7cnnqntCRRH
YggnFKVzoF6uCePFjnWIwkp7w0u7Hux4R1WT78xnqZOWz0o9abmebb8dNppp
M2r5ISPLVsiaRtUdrNfvWI8nnYD8bhuNRgONZhteP5xZbKc48Zr1YGLWveZl
t1/aJV3x9s/yb2JmiWcWEd+2uLu8OK++kGtNnnFZ15Luumh1GBd813gudVFT
Oz+Nuhnnk3eabWrjI753WDZlqWsrJ6j+jKdLqovn4uNxp6xhgSf1qtsM3o/i
7fPVmennpx+7njzSl7a6c1xanumLVGe6OW0HMuMFCxrIxes3x6fl4Z9Tl3fO
Xb6xJq8OOEynTLfdHZlhncDKfC9B9oOmJ6bkCdOuL8wmnPsu+jSrMvFcz3nT
dF/itOv0sgF8VlHdQFDM0JtW8hyec8ublU0QMg5KOz2Nqp3oZ11Xlg3AtV4t
sczdJ7OshClJ3OHVEitcNLO9srVeV7JWyDL22fvgIpVlaDZHDNZw0cxaib3q
zUNc2c8Pe8F7RYrvB7IiMj3zGXLxRDytsXm7SEKsyWt+DitHrMl7HXZYRXJE
2WEVSZofhiom2JYEfym2JZcQdkz9SxX1U6vIOoMyB1E5CoyY1MnZ6twtjSmd
nQLBzidWk4dOB91aIurTBl8M4w6Z7DPtLP48LBMqGRyDDsEOx2NEQxd23gTY
mGsCZhe87NOolBOid8qZSrMfLxgGtNixyFKdsoQygLnqRrgWxWjUlyGwJIgM
YTyZsiYvt/oppa13CrUrmU+ByUcHtXTWveTsHjDze2vyfrqsrE2dNJ2Qloe7
8kgIHz29bp3T7fZgvt1sTV7TlVn60uZJJ6TkCeHQvCOOs8a/4+gVK+nJlWdG
Y3SdvOzd9SbqjrpSupNOwKT8LVSAafOh42e9M4Tq1W0U8gUUi2W+HzmicWY+
VEnrbsmxhT+XtIIylZkYNZMALjVqJo3gHY6ah5k4s/j0y3RZaobsD+SrcY9c
N3y/vG74gUyeIyJ3+EWOvkzc7n+xKjB022i7HAZLxQPb5ABWrVoVDRmp4BOT
JVyHF4MnS5CLmPIJqLqhKnERP+T2MF2RRFYdLR3nnNhOjULaOhwlkNglvSYG
Ir8OWTIaURjlXQZ7MQOJ4n3ShNFoTQcAHQx4jneCSdYRmDmOc+zhZmI1G0pS
VA2KFToMI46KKNOG0lNwGN9EMY4iUW5sGpA1UDNDcgFJpEUmbVbZjdmQv1CS
8kJNrn7H7ILqWaIOJ+w3K/GsMi9tPTKcIxkVWr07CaWKtP2onLfvjGQ8Uez3
DnGImAo7exgfQvgNWabVH0t7bo8Qkq6JQcb/BXYRhI4mk695lo5gsi1u58ij
JszmYs6GDohlQlzHwUSDli1FWzCiVOvxFjlfNSO3TFSFyi09YkLI7MchV6rL
WW7QlEByxGuZ1TMW6IDCRRra5WlmK28V4vDAJUO7Y1GwW5w+WZ+Y3T9uH2hy
r4gis++JaaLIS+xQ8OqbhcT0nzn8Wn48AnQwhjcvC1XQlpuO4spxvFXwnkKN
Qr6N0KqYLqci2lXQp3m8MLU5mKWa47uGyzJc6j4Kl6qilzU8PV8ZGhefQs2V
nCPBD+VVMoUaRSYUP11ZNc9sTTAymf3MqRCbYxmKLS+IwLG6fRkJp9QWdJ0T
P/xOlS63QXlFRMtx4nahBMtpbSBg4hZUnHIdm5zLsJ+fLdofJ/Kr8urkRF1Q
YyzQYmFmvqtwSIIDfaEShm5dUnmqPrmqQ3xPIVEcg8swvjqL8RuJcHLaT/u3
0LNzkpzqna1n6Ylq2Z9DVNYNpF/CgHyNVM+YyXgV11yHDouCBpOlWi1hImB5
AiTjOr6FfrOoqo8j0UnunzHJfRVbrdwKMOZA90Kv+T2OPnb3nFDtt15fZVQC
o9wjHVx2LvddMTgEfsBLA2HfR7temSkx06EW5bt4FWnYUbdvxTgbKe7Wq2j5
4UR9hvtxfkmiPTGJVmG+dBfIKeapd4b5BV0t7XaXC0o9nmT0Vhrjtfxz0NR8
gzFWV5tNM942q0dbYoivyS46nmb81iTjJ0JTbzJIB5lwCdl65Db6E6+bxUle
G7IleDfs1bXzK49QlVpH8XcRr2PZifTvmOoSk92pLBbU0Cw2xDg0LS1zFPvv
cIcgFVMxC0RSPRLC29RE4vc49NFq9eRwFIVSVSq3m5lsHnuyf3Mnkgu3RY6Y
HE2FU90w4xLFp9V85tOa3MEjHT0zHsfZ1NJxdkMeMPI1VxZ9CtyaXG09qKNW
mqUwMdwXbfRurk1YFTomNYmO5FkcOjcy58wkRS0xkgfkPkluyT2PVvQFRasc
ZTUyPM+ZNrfrC/VboVxp69ivEVp2SYwCw4n6DPNjEmnmGwqpjmiqEhxWHVMz
/0LFfO5r5G/eJYfq2P7SHU0HME/+HrNipjGyiyBwUaWQ1oU6Q2cYf0gHQD8I
tyV92p1mFwdvkRxoK2pIZ9oSR3CTzD8WPQVTo+fDV+MswRT6bUaDjJdeEMrs
ZyoDQ4VEFTMGHZWuKmTT7dSU4eBBx1mmYd8NPLm+bZVFqkovUHqAtrrWjUKh
6jCnVr6CTq8Lp2AZGWwU5NBKnlzShT+Hm77TR6sqT902ewHu1uWFwFQbHdxx
05QCcePfPUej7ZkQqW/s3TZZH7uB7pP555CJWFVQiqjW7qKt2CrU6DT3dTw3
ep0rVlAVFnil4dPYK6ZNBTQDrdnpdxEtFazRFxzVui5XqKCnfLAM98cHsL9c
Rtu/Te7HWDLOYOvtFeRl1FfVzYQVmy+i3Y8svT1BmqpdjferykqP+s2yMl+f
gYqMS2f+hGGNkhinnaKyRylQelP62BCJdB3cF4TlrKeElmi76Q5Vugu7qNJz
RUHWgUK9iWLJQaNWMaxs+hIDsmdNGWKRsFkjYRdr2uTLDQypfLmGZr3MZa//
bAOFUiPW+X7yd8wPHkPqXdw9Xd9XW6jsballaqaVtuoNmsJscYoF2FUHRWU6
l4URSv57SgIu58fumGOi5U6zCe8uUl8uFxGGmDzaKuenLO+VNjWs1zPHnsNj
JS2n6+NoiTSM73LRbLn0/dzJdr2ZA0QIV+ghoUFPVg0M2sqpz+6ZRdRxGKDn
BoyNaTROE5rH0QO4atQ66v8BChJoTQ==\
\>"]],

Cell[BoxData[
 RowBox[{"-", "0.05238605737943466`"}]], "Output",
 CellChangeTimes->{{3.4728391137676077`*^9, 3.472839136452991*^9}, 
   3.4728407351736593`*^9, 3.4728407828953323`*^9, {3.472840813241984*^9, 
   3.472840839286766*^9}, {3.4731736866506367`*^9, 3.473173690180151*^9}, {
   3.473173737367099*^9, 3.473173752187623*^9}, 3.473175411265203*^9, 
   3.473176100002975*^9, 3.474007712778537*^9, {3.474007745117992*^9, 
   3.474007763714903*^9}, {3.474624731371811*^9, 3.474624738038411*^9}, 
   3.4746334455213137`*^9, {3.47466386493231*^9, 3.474663869693486*^9}, {
   3.474664587668227*^9, 3.474664593084227*^9}, 3.474703911018825*^9, 
   3.474704700372231*^9, 3.474704754701357*^9, 3.474704814973263*^9, {
   3.474704882542674*^9, 3.474704908607032*^9}, 3.4748135931374474`*^9, 
   3.47481448977805*^9, 3.477915939929864*^9, 3.483379784919676*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetupCorAdjA", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xx", ",", "ii", ",", "jj"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xAdjAcor", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"size", "*", 
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}]}], "/.", "pars"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xx", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"ii", "=", "1"}], ",", 
        RowBox[{
         RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
        RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"jj", "=", "1"}], ",", 
           RowBox[{
            RowBox[{"jj", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
           RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
              RowBox[{
               RowBox[{"xAdjAcor", "\[LeftDoubleBracket]", 
                RowBox[{"++", "xx"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{"adjA", "\[LeftDoubleBracket]", 
                RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}]}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4746336632258587`*^9, 3.474633691779566*^9}, {
  3.4746340050932302`*^9, 3.474634077372779*^9}, {3.474634111011898*^9, 
  3.474634190998589*^9}, {3.476085184373933*^9, 3.476085216540477*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FindCorAdjA", "[", "adjAtest_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ii", ",", "jj", ",", 
       RowBox[{"xx", "=", "0"}], ",", "xcorResult"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xcorResult", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"size", "*", 
            RowBox[{"(", 
             RowBox[{"size", "-", "1"}], ")"}]}], "/.", "pars"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"ii", "=", "1"}], ",", 
        RowBox[{
         RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
        RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"jj", "=", "1"}], ",", 
           RowBox[{
            RowBox[{"jj", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
           RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
              RowBox[{
               RowBox[{"xcorResult", "\[LeftDoubleBracket]", 
                RowBox[{"++", "xx"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}]}], 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Correlation", "[", 
       RowBox[{"xAdjAcor", ",", "xcorResult"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.474633458042564*^9, 3.474633502214608*^9}, {
  3.474633542230979*^9, 3.474633554444379*^9}, {3.474633595641219*^9, 
  3.474633631222906*^9}, {3.474634087102886*^9, 3.474634099319516*^9}, {
  3.47463419599844*^9, 3.4746343095139217`*^9}, {3.474649796774885*^9, 
  3.474649797180813*^9}, {3.474649830274938*^9, 3.4746498316268883`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "basedir", " ", "=", " ", 
   "\"\</Users/olav/Desktop/Doktorarbeit/Causality/transferentropy-sim/\
NoiseFPSnew\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.474634702299938*^9, 3.4746347311544733`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tauFs", "=", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "0", ",", "0", ",", "350001", ",", "291667", ",", 
     "250001", ",", "218751", ",", "194445", ",", "175001", ",", "159091", 
     ",", "145834", ",", "134616", ",", "125001", ",", "116667", ",", 
     "109376", ",", "102942", ",", "97223", ",", "92106", ",", "87501", ",", 
     "83334", ",", "79546", ",", "76087", ",", "72917", ",", "70001", ",", 
     "67308", ",", "64815", ",", "62501", ",", "60345", ",", "58334"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qualityA", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "11", "}"}], ",", 
     RowBox[{"{", "11", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "\[LessEqual]", "110"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xtemp", "=", 
      RowBox[{"<<", 
       RowBox[{"(", 
        RowBox[{"\"\<adjA_iteration\>\"", "<>", 
         RowBox[{"ToString", "@", "i"}], "<>", "\"\<.mx\>\""}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"xpars", "=", 
      RowBox[{"<<", 
       RowBox[{"(", 
        RowBox[{"\"\<pars_iteration\>\"", "<>", 
         RowBox[{"ToString", "@", "i"}], "<>", "\"\<.mx\>\""}], ")"}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{
         RowBox[{"ToString", "@", 
          RowBox[{"Round", "@", 
           FractionBox[
            RowBox[{"noise", "/.", "xpars"}], "0.03"]}]}], "<>", 
         "\"\< und \>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"First", "@", 
              RowBox[{"First", "@", 
               RowBox[{"Position", "[", 
                RowBox[{"tauFs", ",", 
                 RowBox[{"samples", "/.", "xpars"}]}], "]"}]}]}], "-", "5"}], 
            ")"}], "/", "2"}], "]"}]}], "]"}], ";"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"qualityA", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"Round", "@", 
          FractionBox[
           RowBox[{"noise", "/.", "xpars"}], "0.03"]}]}], ",", 
        RowBox[{"1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"First", "@", 
             RowBox[{"First", "@", 
              RowBox[{"Position", "[", 
               RowBox[{"tauFs", ",", 
                RowBox[{"samples", "/.", "xpars"}]}], "]"}]}]}], "-", "5"}], 
           ")"}], "/", "2"}]}]}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"FindCorAdjA", "[", "xtemp", "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.474634539030057*^9, 3.4746346676622467`*^9}, {
  3.474634741259531*^9, 3.474634871203823*^9}, {3.474638111155093*^9, 
  3.474638139337385*^9}, {3.474638392691846*^9, 3.474638402754376*^9}, {
  3.474638451591917*^9, 3.474638461082103*^9}, {3.4746392609962482`*^9, 
  3.474639277880331*^9}, {3.474649633425825*^9, 3.4746497300457087`*^9}, {
  3.474649917832234*^9, 3.474649920471068*^9}, {3.474649979142456*^9, 
  3.474649985819112*^9}, {3.474650041562615*^9, 3.474650046464445*^9}, {
  3.4746501149669523`*^9, 3.474650120764518*^9}, {3.474650170938566*^9, 
  3.474650196495709*^9}, {3.474650398276248*^9, 3.474650501679401*^9}, {
  3.474650547459135*^9, 3.474650548793483*^9}, {3.474650590404056*^9, 
  3.4746505927383013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", 
  RowBox[{"qualityA", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<AvocadoColors\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<noise\>\"", ",", "\"\<\[Tau]F\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.47465050982581*^9, 3.474650523379018*^9}, {
  3.474650649825378*^9, 3.4746507471688223`*^9}, {3.474650866065886*^9, 
  3.474650868527341*^9}}],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
   "], {{0, 0}, {11, 11}}, {0, 
   1}],
  Frame->True,
  FrameLabel->{
    FormBox["\"\[Tau]F\"", TraditionalForm], 
    FormBox["\"noise\"", TraditionalForm]},
  FrameTicks->{{{{10.5, 
       FormBox["1", TraditionalForm]}, {9.5, 
       FormBox["2", TraditionalForm]}, {7.5, 
       FormBox["4", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {3.5, 
       FormBox["8", TraditionalForm]}, {1.5, 
       FormBox["10", TraditionalForm]}, {0.5, 
       FormBox["11", TraditionalForm]}}, {{10.5, 
       FormBox["1", TraditionalForm]}, {9.5, 
       FormBox["2", TraditionalForm]}, {7.5, 
       FormBox["4", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {3.5, 
       FormBox["8", TraditionalForm]}, {1.5, 
       FormBox["10", TraditionalForm]}, {0.5, 
       FormBox["11", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {10.5, 
       FormBox["11", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {10.5, 
       FormBox["11", TraditionalForm]}}}}]], "Output",
 CellChangeTimes->{
  3.4746505243001413`*^9, 3.47465061226112*^9, 3.4746506598016777`*^9, {
   3.474650698380516*^9, 3.474650747765926*^9}, 3.474650869232889*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["generate ROC curves (old functions)", "Subsubsection",
 CellChangeTimes->{{3.480934657202586*^9, 3.480934691806017*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateROC", "[", "xadjA_", "]"}], ":=", 
   RowBox[{"GenerateROC", "[", 
    RowBox[{"xadjA", ",", "100"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateROC", "[", 
    RowBox[{"xadjA_", ",", "xsteps_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xdata", ",", "xx", ",", "t", ",", "xmin", ",", "xmax", ",", 
       "xstepsize", ",", "xP", ",", "xTP", ",", "xN", ",", "xFP", ",", 
       "xROCpoints"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xROCpoints", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"xsteps", "+", "1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"compare", " ", "single", " ", "entries"}], ",", " ", 
        RowBox[{"1", "st", " ", "order"}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"xdata", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Sort", "@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"adjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
                  
                  RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"Length", "@", "adjA"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"jj", ",", 
                RowBox[{"Length", "@", "adjA"}]}], "}"}]}], "]"}], ",", "1"}],
            "]"}]}], ",", 
         RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "test", " ", "if", " ", "exactly", " ", "the", " ", "diagonal", " ", 
        "elements", " ", "have", " ", "been", " ", "deleted"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "xdata"}], "!=", 
         RowBox[{
          RowBox[{"Length", "@", "adjA"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "adjA", "]"}], "-", "1"}], ")"}]}]}], ",", 
        
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Warning: length=\>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"Length", "@", "xdata"}]}]}], "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xmin", "=", 
       RowBox[{"Min", "@", 
        RowBox[{"Last", "@", 
         RowBox[{"Transpose", "@", "xdata"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmax", "=", 
       RowBox[{"Max", "@", 
        RowBox[{"Last", "@", 
         RowBox[{"Transpose", "@", "xdata"}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xstepsize", "=", 
       FractionBox[
        RowBox[{"xmax", "-", "xmin"}], "xsteps"]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"xstepsize", "<", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], ",", 
        RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "go", " ", "through", " ", "all", " ", "possible", " ", "threshold", 
        " ", "values", " ", "and", " ", "compute", " ", "the", " ", "ROC", 
        " ", "data", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"t", "=", "0"}], ",", 
        RowBox[{"t", "\[LessEqual]", "xsteps"}], ",", 
        RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"xx", "=", 
          RowBox[{"xmin", "+", 
           RowBox[{"t", "*", "xstepsize"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"ShowStatus", "[", 
            RowBox[{"\"\<xx=\>\"", "<>", 
             RowBox[{"ToString", "@", "xx"}]}], "]"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"xP", "=", 
          RowBox[{"Length", "@", 
           RowBox[{"Cases", "[", 
            RowBox[{"xdata", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xTP", "=", 
          RowBox[{"Length", "@", 
           RowBox[{"Cases", "[", 
            RowBox[{"xdata", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", ">", "xx"}], ")"}], "&"}], ")"}]}]}], "}"}]}],
             "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"xN", "=", 
          RowBox[{"Length", "@", 
           RowBox[{"Cases", "[", 
            RowBox[{"xdata", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"xFP", "=", 
          RowBox[{"Length", "@", 
           RowBox[{"Cases", "[", 
            RowBox[{"xdata", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", ">", "xx"}], ")"}], "&"}], ")"}]}]}], "}"}]}],
             "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"xROCpoints", "\[LeftDoubleBracket]", 
           RowBox[{"t", "+", "1"}], "\[RightDoubleBracket]"}], "=", 
          RowBox[{"N", "@", 
           RowBox[{"{", 
            RowBox[{
             FractionBox["xFP", "xN"], ",", 
             FractionBox["xTP", "xP"]}], "}"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "xROCpoints"}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.4565665071339903`*^9, 3.4565665116376543`*^9}, {
   3.456566546674162*^9, 3.456566669039926*^9}, {3.46070915492819*^9, 
   3.4607092060603123`*^9}, 3.46070924616236*^9, {3.4607092918636923`*^9, 
   3.460709296245121*^9}, {3.460709376733346*^9, 3.4607094148798018`*^9}, {
   3.4607094651546926`*^9, 3.460709761567069*^9}, {3.4607101199091177`*^9, 
   3.460710129275189*^9}, {3.460710188383668*^9, 3.460710208411293*^9}, {
   3.460710246018693*^9, 3.460710316073655*^9}, {3.460725830734665*^9, 
   3.4607258619611073`*^9}, {3.470823492150427*^9, 3.470823493164073*^9}, {
   3.4715338115908937`*^9, 3.471533812156806*^9}, {3.471533887345933*^9, 
   3.471533896975431*^9}, 3.471534965619843*^9, {3.471682185477099*^9, 
   3.4716821928919697`*^9}, 3.471682601513482*^9, {3.471683021950218*^9, 
   3.4716830223551397`*^9}, {3.4716830575942802`*^9, 3.471683092728168*^9}, 
   3.471689245437503*^9, {3.471689277036293*^9, 3.4716893008245497`*^9}, {
   3.471694473532833*^9, 3.471694492645197*^9}, 3.4716945292826567`*^9, {
   3.471694619181395*^9, 3.471694639115456*^9}, {3.472481305157132*^9, 
   3.4724813097730227`*^9}, {3.472481466997497*^9, 3.472481487808833*^9}, {
   3.472495352250499*^9, 3.472495358329241*^9}, {3.472838838599884*^9, 
   3.472838851759388*^9}, {3.47283913140653*^9, 3.4728391360549717`*^9}, 
   3.4728407822051153`*^9, 3.4728408125147457`*^9, {3.473173685935557*^9, 
   3.473173689665001*^9}, {3.473173736774496*^9, 3.4731737516290894`*^9}, {
   3.473175410520753*^9, 3.473175410741762*^9}, {3.474007744388389*^9, 
   3.474007763170548*^9}, {3.474624736550283*^9, 3.474624737564253*^9}, 
   3.474663868835176*^9, 3.474664592546451*^9, {3.474704698352104*^9, 
   3.474704699310089*^9}, {3.474704812536936*^9, 3.474704814142859*^9}, 
   3.474704882043803*^9, {3.474718792723884*^9, 3.474718844739223*^9}, {
   3.474718884920141*^9, 3.474718902936129*^9}, {3.474718938245584*^9, 
   3.474718970971534*^9}, {3.474720337432864*^9, 3.474720347156259*^9}, {
   3.474720594596822*^9, 3.474720612894806*^9}, {3.47472172859192*^9, 
   3.474721732813561*^9}, {3.4747232006097813`*^9, 3.47472320812501*^9}, {
   3.474723249620392*^9, 3.474723284274797*^9}, {3.47472886138914*^9, 
   3.474728864001638*^9}, {3.477647724498213*^9, 3.4776477252662277`*^9}, {
   3.477724480501924*^9, 3.4777245452784967`*^9}, {3.477724587352702*^9, 
   3.477724663028288*^9}, {3.477724696806128*^9, 3.477724706500051*^9}, {
   3.477724763618093*^9, 3.477724763912033*^9}, {3.477724824347715*^9, 
   3.477724883854679*^9}, {3.4777251140340223`*^9, 3.477725289952594*^9}, {
   3.477725378187669*^9, 3.477725391442415*^9}, 3.477725608168006*^9, {
   3.4779161852678127`*^9, 3.47791631735854*^9}, {3.477916810480105*^9, 
   3.47791682983914*^9}, {3.478431245830513*^9, 3.47843124631691*^9}, {
   3.478431276386469*^9, 3.4784312770729513`*^9}, {3.479111948960493*^9, 
   3.479111972150382*^9}, {3.4796444403996773`*^9, 3.479644470961941*^9}, {
   3.4796445017967*^9, 3.47964450185878*^9}, {3.480683562396818*^9, 
   3.480683617128191*^9}, {3.4806838458367977`*^9, 3.480683846393095*^9}, 
   3.480683891296*^9, {3.480760747145092*^9, 3.480760770651704*^9}, {
   3.480767201806839*^9, 3.4807672600893383`*^9}, {3.480849144904065*^9, 
   3.480849159871574*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateROCfn", "[", 
    RowBox[{"xdata_", ",", "fraction_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xx", ",", "xP", ",", "xTP", ",", "xN", ",", "xFP", ",", 
       "xROCpointsLocal", ",", "middle"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{"(*", " ", 
      RowBox[{
      "go", " ", "through", " ", "all", " ", "possible", " ", "threshold", 
       " ", "values", " ", "and", " ", "compute", " ", "the", " ", "ROC", " ",
        "data", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xx", "=", 
       RowBox[{
        RowBox[{"Min", "@", 
         RowBox[{"Flatten", "@", "xdata"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Max", "@", 
            RowBox[{"Flatten", "@", "xdata"}]}], "-", 
           RowBox[{"Min", "@", 
            RowBox[{"Flatten", "@", "xdata"}]}]}], ")"}], "*", 
         "fraction"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xTP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">", "xx"}], ")"}], "&"}], ")"}]}]}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xN", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xFP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">", "xx"}], ")"}], "&"}], ")"}]}]}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"N", "@", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["xFP", "xN"], ",", 
         FractionBox["xTP", "xP"]}], "}"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x2Data", "[", "xadjA_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ii", ",", "jj", ",", "xdata"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xdata", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Sort", "@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"adjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
                  
                  RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"Length", "@", "adjA"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"jj", ",", 
                RowBox[{"Length", "@", "adjA"}]}], "}"}]}], "]"}], ",", "1"}],
            "]"}]}], ",", 
         RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "test", " ", "if", " ", "exactly", " ", "the", " ", "diagonal", " ", 
        "elements", " ", "have", " ", "been", " ", "deleted"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "xdata"}], "!=", 
         RowBox[{
          RowBox[{"Length", "@", "adjA"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "adjA", "]"}], "-", "1"}], ")"}]}]}], ",", 
        
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Warning: length=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"Length", "@", "xdata"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "xdata"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.4808342901008787`*^9, 3.4808343167964*^9}, {
  3.4808343586723747`*^9, 3.4808343888638678`*^9}, {3.4808344233666763`*^9, 
  3.48083453698699*^9}, {3.4808345787597923`*^9, 3.480834605871585*^9}, {
  3.480834727895307*^9, 3.4808347538457108`*^9}, {3.4808347899731483`*^9, 
  3.480834790395411*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xROClist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "0"}], ",", 
     RowBox[{"i", "\[LessEqual]", "3"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xtemp", "=", 
       RowBox[{"<<", 
        RowBox[{"(", 
         RowBox[{"\"\<adjA_iteration\>\"", "<>", 
          RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<.mx\>\""}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"xpars", "=", 
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{"\"\<pars_iteration\>\"", "<>", 
            RowBox[{"ToString", "@", "i"}], "<>", "\"\<.mx\>\""}], ")"}]}]}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ShowStatus", "[", 
       RowBox[{"\"\<i = \>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<...\>\""}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xROClist", ",", 
        RowBox[{"GenerateROC", "@", "xtemp"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Length", "@", "xROClist"}], "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowStatus", "[", "\"\<done.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"i", ",", "xtemp", ",", "xpars"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.474634539030057*^9, 3.4746346676622467`*^9}, {
   3.474634741259531*^9, 3.474634871203823*^9}, {3.474638111155093*^9, 
   3.474638139337385*^9}, {3.474638392691846*^9, 3.474638402754376*^9}, {
   3.474638451591917*^9, 3.474638461082103*^9}, {3.4746392609962482`*^9, 
   3.474639277880331*^9}, {3.474649633425825*^9, 3.4746497300457087`*^9}, {
   3.474649917832234*^9, 3.474649920471068*^9}, {3.474649979142456*^9, 
   3.474649985819112*^9}, {3.474650041562615*^9, 3.474650046464445*^9}, {
   3.4746501149669523`*^9, 3.474650120764518*^9}, {3.474650170938566*^9, 
   3.474650196495709*^9}, {3.474650398276248*^9, 3.474650501679401*^9}, {
   3.474650547459135*^9, 3.474650548793483*^9}, {3.474650590404056*^9, 
   3.4746505927383013`*^9}, {3.474718682321541*^9, 3.474718754607449*^9}, {
   3.474718994980056*^9, 3.474719062454412*^9}, {3.474719438942134*^9, 
   3.474719454766931*^9}, {3.4747195493675413`*^9, 3.4747195631149473`*^9}, {
   3.4747289485991077`*^9, 3.474728969425205*^9}, {3.474740452200508*^9, 
   3.474740472776846*^9}, {3.4747410496458673`*^9, 3.474741114451659*^9}, {
   3.474741194869076*^9, 3.4747412079549417`*^9}, {3.474741252585948*^9, 
   3.4747412564258213`*^9}, {3.474791086494103*^9, 3.474791093122552*^9}, {
   3.4747911696326447`*^9, 3.47479119085953*^9}, {3.474792064722715*^9, 
   3.474792067001637*^9}, {3.474792308444542*^9, 3.474792308526043*^9}, 
   3.474792370037578*^9, {3.474792925111961*^9, 3.4747929324365597`*^9}, {
   3.474792976935145*^9, 3.474792989433237*^9}, {3.474793023804599*^9, 
   3.474793048704287*^9}, {3.474795445090502*^9, 3.474795445168686*^9}, {
   3.474795635544759*^9, 3.47479563956207*^9}, {3.474796342283462*^9, 
   3.474796342409535*^9}, {3.4747969037903833`*^9, 3.474796903933015*^9}, {
   3.474797135603181*^9, 3.474797137664744*^9}, {3.4747973682099237`*^9, 
   3.4747973688957853`*^9}, {3.474800499254033*^9, 3.474800510714903*^9}, {
   3.4748006678907137`*^9, 3.4748006696808243`*^9}, {3.474806302485499*^9, 
   3.474806309585951*^9}, {3.4748071693071423`*^9, 3.474807169953491*^9}, {
   3.477647623869143*^9, 3.47764763789928*^9}, {3.477720018347398*^9, 
   3.477720046063216*^9}, {3.4777236643869457`*^9, 3.477723673577153*^9}, {
   3.477723703799314*^9, 3.477723704599286*^9}, {3.479111934973814*^9, 
   3.479111936708253*^9}, {3.4796442810118437`*^9, 3.4796442810575657`*^9}, {
   3.4806701096338787`*^9, 3.480670109721682*^9}, {3.4806764062115707`*^9, 
   3.480676406778882*^9}, 3.480677600333275*^9, {3.480935663831338*^9, 
   3.480935663907364*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["generate ROC curves (adaptive functions)", "Subsubsection",
 CellChangeTimes->{{3.480934657202586*^9, 3.480934714148313*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"GenerateROCsmart", "[", "xadjA_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xdata", ",", "xmin", ",", "xmax", ",", "xROCpoints", ",", "oldRL"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xROCpoints", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xdata", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Sort", "@", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"adjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
                  
                  RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"Length", "@", "adjA"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"jj", ",", 
                RowBox[{"Length", "@", "adjA"}]}], "}"}]}], "]"}], ",", "1"}],
            "]"}]}], ",", 
         RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xmin", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Min", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "xdata"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmax", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Max", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "xdata"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"xmax", "-", "xmin"}], "<", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], ",", 
        RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"oldRL", "=", "$RecursionLimit"}], ";", "\[IndentingNewLine]", 
      RowBox[{"$RecursionLimit", "=", "1000"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xROCpoints", "=", 
       RowBox[{"GenerateROCrecursive", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "xmax", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", "xmin", ",", "xROCpoints", ",",
          "0.04"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$RecursionLimit", "=", "oldRL"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sort", "@", "xROCpoints"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateROCrecursive", "[", 
    RowBox[{
    "xdata_", ",", "left_", ",", "xmax_", ",", "right_", ",", "xmin_", ",", 
     "xROCpoints_", ",", "minDist2D_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xx", ",", "xP", ",", "xTP", ",", "xN", ",", "xFP", ",", 
       "xROCpointsLocal", ",", "middle"}], "}"}], ",", "\[IndentingNewLine]", 
     
     RowBox[{
      RowBox[{"xROCpointsLocal", "=", "xROCpoints"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "go", " ", "through", " ", "all", " ", "possible", " ", "threshold", 
        " ", "values", " ", "and", " ", "compute", " ", "the", " ", "ROC", 
        " ", "data", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"xx", "=", 
       RowBox[{"N", "@", 
        FractionBox[
         RowBox[{"xmin", "+", "xmax"}], "2"]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"xP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xTP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">", "xx"}], ")"}], "&"}], ")"}]}]}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xN", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xFP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">", "xx"}], ")"}], "&"}], ")"}]}]}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"middle", "=", 
       RowBox[{"N", "@", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["xFP", "xN"], ",", 
          FractionBox["xTP", "xP"]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xROCpointsLocal", ",", "middle"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<New ROC point: \>\"", "<>", 
          RowBox[{"ToString", "@", "middle"}], "<>", "\"\<, xx=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"InputForm", "@", "xx"}]}], "<>", "\"\<, left=\>\"", "<>", 
          
          RowBox[{"ToString", "@", "left"}], "<>", "\"\<, xmin=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"InputForm", "@", "xmin"}]}], "<>", "\"\<, right=\>\"", "<>", 
          RowBox[{"ToString", "@", "right"}], "<>", "\"\<, xmax=\>\"", "<>", 
          RowBox[{"ToString", "@", 
           RowBox[{"InputForm", "@", "xmax"}]}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Pause", "[", "0.1", "]"}], ";"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"Cases", "[", 
           RowBox[{"xdata", ",", 
            RowBox[{"{", 
             RowBox[{"_", ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", ">", "xmin"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"#", "<", "xmax"}], ")"}]}], "&"}], ")"}]}]}], 
             "}"}]}], "]"}]}], ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"middle", "-", "left"}], "]"}], ">", "minDist2D"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"xROCpointsLocal", "=", 
            RowBox[{"GenerateROCrecursive", "[", 
             RowBox[{
             "xdata", ",", "left", ",", "xmax", ",", "middle", ",", "xx", ",",
               "xROCpointsLocal", ",", "minDist2D"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"right", "-", "middle"}], "]"}], ">", "minDist2D"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"xROCpointsLocal", "=", 
            RowBox[{"GenerateROCrecursive", "[", 
             RowBox[{
             "xdata", ",", "middle", ",", "xx", ",", "right", ",", "xmin", 
              ",", "xROCpointsLocal", ",", "minDist2D"}], "]"}]}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "xROCpointsLocal"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateROCsmartVector", "[", 
    RowBox[{"xoriginal_", ",", "xrec_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xdata", ",", "xmin", ",", "xmax", ",", "xROCpoints", ",", "oldRL"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xROCpoints", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xdata", "=", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"xoriginal", ",", "xrec"}], "}"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmin", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Min", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "xdata"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmax", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Max", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "xdata"}]}]}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"xmax", "-", "xmin"}], "<", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]]}], ",", 
        RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"oldRL", "=", "$RecursionLimit"}], ";", "\[IndentingNewLine]", 
      RowBox[{"$RecursionLimit", "=", "1000"}], ";", "\[IndentingNewLine]", 
      RowBox[{"xROCpoints", "=", 
       RowBox[{"GenerateROCrecursive", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"{", 
          RowBox[{"0.", ",", "0"}], "}"}], ",", "xmax", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", "xmin", ",", "xROCpoints", ",",
          "0.04"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"$RecursionLimit", "=", "oldRL"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sort", "@", "xROCpoints"}]}]}], "\[IndentingNewLine]", "]"}]}],
   ";"}]}], "Input",
 CellChangeTimes->{{3.480767279108342*^9, 3.480767280764413*^9}, {
   3.480767315193233*^9, 3.480767437847006*^9}, {3.4807674824079437`*^9, 
   3.4807677886478367`*^9}, {3.4807678556267776`*^9, 3.480768030241831*^9}, {
   3.48076809521441*^9, 3.480768126321455*^9}, {3.480770699356887*^9, 
   3.480770712495242*^9}, {3.480770744043462*^9, 3.48077078513273*^9}, 
   3.48077083622727*^9, {3.480770930612818*^9, 3.4807709344927263`*^9}, {
   3.4807709668638687`*^9, 3.480770994743442*^9}, {3.480771025679805*^9, 
   3.480771051674094*^9}, {3.480771084499555*^9, 3.480771085921994*^9}, {
   3.4807711302147503`*^9, 3.480771136720929*^9}, {3.480771324765935*^9, 
   3.480771342024645*^9}, {3.480831034679968*^9, 3.480831049759921*^9}, {
   3.480831810615596*^9, 3.480831895711688*^9}, {3.4808319402574663`*^9, 
   3.4808319657675667`*^9}, {3.480832004770133*^9, 3.480832109853163*^9}, {
   3.480832286030952*^9, 3.4808323066201067`*^9}, {3.480832337944866*^9, 
   3.480832363341411*^9}, {3.480832474269555*^9, 3.480832492657324*^9}, {
   3.480832539975679*^9, 3.480832574257802*^9}, {3.4808326582357273`*^9, 
   3.480832666663755*^9}, {3.480832729895268*^9, 3.480832744454007*^9}, {
   3.4808327989685698`*^9, 3.4808328091981497`*^9}, {3.480832967174185*^9, 
   3.480832978819231*^9}, {3.48083370272721*^9, 3.480833710134932*^9}, {
   3.480833987403469*^9, 3.480833990593966*^9}, {3.480834033736928*^9, 
   3.480834035318328*^9}, 3.480834078059885*^9, {3.480840839779895*^9, 
   3.4808408420112658`*^9}, {3.480843920660255*^9, 3.480843975260869*^9}, {
   3.480844056211101*^9, 3.480844056409719*^9}, 3.4808441272693768`*^9, {
   3.480844947327795*^9, 3.480844976566415*^9}, {3.48084510419881*^9, 
   3.480845136169456*^9}, {3.480845215071433*^9, 3.480845218125535*^9}, {
   3.4808452644109793`*^9, 3.480845265267057*^9}, {3.48084534622388*^9, 
   3.4808453489308777`*^9}, {3.480845380204666*^9, 3.480845380305511*^9}, {
   3.480845481003648*^9, 3.480845487754582*^9}, {3.480845529869125*^9, 
   3.480845531691133*^9}, {3.480845804697489*^9, 3.4808458674038*^9}, {
   3.4808459156210833`*^9, 3.480845922498361*^9}, 3.480846036318314*^9, {
   3.480846095361952*^9, 3.4808461157502947`*^9}, {3.4808462749714203`*^9, 
   3.480846280440401*^9}, 3.4808463201660967`*^9, {3.480847775446396*^9, 
   3.480847793811833*^9}, {3.480847974347226*^9, 3.480847977414671*^9}, {
   3.480848010247305*^9, 3.480848041792604*^9}, {3.480848344936551*^9, 
   3.480848370445671*^9}, {3.480848682451395*^9, 3.480848686649908*^9}, {
   3.4808525760435762`*^9, 3.480852603614744*^9}, {3.480933840900691*^9, 
   3.480933842401801*^9}, 3.482519728699498*^9, 3.4825197813328753`*^9, {
   3.483078457522393*^9, 3.483078519886224*^9}, 3.4861216598186083`*^9, {
   3.486128352951619*^9, 3.4861283539461184`*^9}, {3.486129033917575*^9, 
   3.486129058745846*^9}, 3.48612983314592*^9, 3.486129863208269*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "basedir", " ", "=", " ", 
   "\"\</Users/olav/Desktop/Doktorarbeit/Causality/transferentropy-sim/Paris/\
SeparatedTest\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}]}], "Input",
 CellChangeTimes->{{3.474634702299938*^9, 3.4746347311544733`*^9}, {
   3.474718670119697*^9, 3.474718671924358*^9}, {3.4747971416678543`*^9, 
   3.474797142475212*^9}, {3.474800489261229*^9, 3.474800489995036*^9}, {
   3.4760844313613997`*^9, 3.476084449688715*^9}, {3.477647614937677*^9, 
   3.4776476200637407`*^9}, {3.477723656894039*^9, 3.477723660341339*^9}, 
   3.4777236916143436`*^9, {3.47843120995232*^9, 3.478431210373921*^9}, {
   3.479111919522838*^9, 3.479111920824479*^9}, {3.479644264887505*^9, 
   3.479644271366432*^9}, {3.480670259483221*^9, 3.480670260083139*^9}, {
   3.480671532791873*^9, 3.4806715353508*^9}, {3.480676420327409*^9, 
   3.480676420953883*^9}, {3.480760456996578*^9, 3.480760457293254*^9}, {
   3.4825188377099543`*^9, 3.482518840498953*^9}, {3.4833794056867733`*^9, 
   3.4833794067172947`*^9}, 3.484301583415799*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "basedir", " ", "=", " ", 
   "\"\</Users/olav/Desktop/Doktorarbeit/Causality/transferentropy-sim/Paris/\
LeogangTopology\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}]}], "Input",
 CellChangeTimes->{{3.474634702299938*^9, 3.4746347311544733`*^9}, {
   3.474718670119697*^9, 3.474718671924358*^9}, {3.4747971416678543`*^9, 
   3.474797142475212*^9}, {3.474800489261229*^9, 3.474800489995036*^9}, {
   3.4760844313613997`*^9, 3.476084449688715*^9}, {3.477647614937677*^9, 
   3.4776476200637407`*^9}, {3.477723656894039*^9, 3.477723660341339*^9}, 
   3.4777236916143436`*^9, {3.47843120995232*^9, 3.478431210373921*^9}, {
   3.479111919522838*^9, 3.479111920824479*^9}, {3.479644264887505*^9, 
   3.479644271366432*^9}, {3.480670259483221*^9, 3.480670260083139*^9}, {
   3.480671532791873*^9, 3.4806715353508*^9}, {3.480676420327409*^9, 
   3.480676420953883*^9}, {3.480760456996578*^9, 3.480760457293254*^9}, {
   3.480936979426446*^9, 3.480936980471068*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"importlist", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"<<", 
       RowBox[{"(", 
        RowBox[{"\"\<adjA_iteration\>\"", "<>", 
         RowBox[{"ToString", "@", "#"}], "<>", "\"\<.mx\>\""}], ")"}]}], 
      "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", "0"}], "]"}]}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.480936282247108*^9, 3.480936291477605*^9}, {
  3.4809410069832582`*^9, 3.480941007077795*^9}, {3.4809449112162657`*^9, 
  3.480944911302415*^9}, {3.4809586482760983`*^9, 3.4809586490577917`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xindex", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"importlist", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"\"\<adjA_iteration\>\"", "<>", 
      RowBox[{"ToString", "@", "xindex"}], "<>", "\"\<.mx\>\""}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parsstring", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"\"\<pars_iteration\>\"", "<>", 
      RowBox[{"ToString", "@", "xindex"}], "<>", "\"\<.mx\>\""}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"importlist2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"importlist", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "ii"}], "\[RightDoubleBracket]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"Last", "@", 
        RowBox[{"Dimensions", "@", "importlist"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"importlist", ",", "xindex"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.482518860339217*^9, 3.482518887127199*^9}, {
   3.482518927781599*^9, 3.482518976289689*^9}, {3.48251928738311*^9, 
   3.4825192874692087`*^9}, {3.482519807243487*^9, 3.4825198074355307`*^9}, {
   3.482520521856956*^9, 3.4825205219802437`*^9}, {3.482521009606185*^9, 
   3.482521009852297*^9}, {3.482521087305114*^9, 3.482521128492928*^9}, {
   3.482591811621202*^9, 3.482591836604169*^9}, {3.482591897951806*^9, 
   3.482591925813521*^9}, {3.4830783930635977`*^9, 3.483078408172967*^9}, {
   3.483078534382813*^9, 3.483078582027897*^9}, {3.483079464619871*^9, 
   3.483079527917728*^9}, {3.483079613544742*^9, 3.48307964568419*^9}, {
   3.483080020712069*^9, 3.483080020797966*^9}, {3.483080102803269*^9, 
   3.483080116380488*^9}, {3.483080777783415*^9, 3.483080778029497*^9}, {
   3.483080824395299*^9, 3.483080842337542*^9}, {3.483081376537126*^9, 
   3.483081377487138*^9}, {3.483081451324416*^9, 3.48308146491362*^9}, {
   3.483081844977442*^9, 3.4830818451852922`*^9}, {3.483081878719532*^9, 
   3.483081894187747*^9}, {3.48317104596185*^9, 3.483171046792253*^9}, {
   3.4831717015661907`*^9, 3.4831717064922657`*^9}, {3.4831721838559923`*^9, 
   3.483172183926015*^9}, {3.4831738184591293`*^9, 3.483173819050809*^9}, {
   3.483174000464547*^9, 3.4831740068064737`*^9}, {3.483200334449707*^9, 
   3.48320033453588*^9}, {3.483210614715152*^9, 3.483210615026452*^9}, {
   3.4843015875271053`*^9, 3.4843015938681517`*^9}, {3.4843016945044193`*^9, 
   3.484301694583069*^9}, {3.484301910853984*^9, 3.484301911084045*^9}, {
   3.4843019434431553`*^9, 3.4843019435373793`*^9}, {3.484982117352229*^9, 
   3.4849821175751762`*^9}, {3.4849821991614637`*^9, 3.484982217197733*^9}, {
   3.484982300148246*^9, 3.4849823002263308`*^9}, {3.484982381621935*^9, 
   3.484982382252204*^9}, {3.484982467536358*^9, 3.484982467598481*^9}, {
   3.4849825232993402`*^9, 3.484982550225775*^9}, {3.484991192262938*^9, 
   3.484991192341744*^9}, {3.4849912331418552`*^9, 3.484991233219174*^9}, {
   3.48499129859193*^9, 3.484991299407591*^9}, {3.484991343108838*^9, 
   3.48499136719466*^9}, {3.485064224639255*^9, 3.4850642249519053`*^9}, {
   3.485064256254374*^9, 3.485064256365059*^9}, 3.485079762766349*^9, 
   3.485080318686667*^9, {3.4850803562875967`*^9, 3.4850803904039307`*^9}, {
   3.4850852912934523`*^9, 3.485085291532357*^9}, {3.486100441576803*^9, 
   3.486100449615489*^9}, {3.486100920456905*^9, 3.486100920664205*^9}, {
   3.486101170920739*^9, 3.4861011710157347`*^9}, {3.486101337925315*^9, 
   3.486101339805039*^9}, {3.4861023744442997`*^9, 3.48610237514513*^9}, {
   3.486184689360248*^9, 3.486184709980935*^9}, {3.4868182777037573`*^9, 
   3.486818279613659*^9}, {3.486818851588491*^9, 3.486818906963969*^9}}],

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"Total", "@", "importlist2"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<AvocadoColors\>\""}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<GTE: bins & globalbins: 15\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.486184588323202*^9, 3.486184680286072*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tstring", "=", "\"\<GTE sep. (Random,HP&IF)\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tstring", "=", 
   RowBox[{
   "tstring", "<>", "\"\<, \!\(\*SubscriptBox[\(\[Tau]\), \(img\)]\) = \>\"", 
    "<>", 
    RowBox[{"ToString", "[", 
     RowBox[{"tauF", "/.", "parsstring"}], "]"}], "<>", "\"\< ms\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tstring", "=", 
    RowBox[{"tstring", "<>", "\"\<, \>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"bins", "/.", "parsstring"}], "]"}], "<>", "\"\<&\>\"", "<>", 
     RowBox[{"ToString", "[", 
      RowBox[{"globalbins", "/.", "parsstring"}], "]"}], "<>", 
     "\"\< bins\>\""}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"GenerateROCsmart", "/@", "importlist2"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.1", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fraction of false positives\>\"", ",", 
      "\"\<fraction of true positives\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "tstring"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "tstring", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.480935983355915*^9, 3.480936067197554*^9}, {
   3.480936137370627*^9, 3.480936232324909*^9}, {3.480936267884006*^9, 
   3.480936324788418*^9}, {3.48093936457963*^9, 3.4809393648911877`*^9}, {
   3.4809410736496363`*^9, 3.4809410780115633`*^9}, {3.4809586793481493`*^9, 
   3.480958679673649*^9}, 3.482518987554878*^9, {3.4825193203907413`*^9, 
   3.482519333723484*^9}, {3.48251943655788*^9, 3.4825194382600183`*^9}, {
   3.482591951070835*^9, 3.4825919696842003`*^9}, {3.48307951435293*^9, 
   3.4830795177998037`*^9}, {3.483079581916297*^9, 3.483079610148509*^9}, {
   3.483080032734662*^9, 3.483080042926606*^9}, {3.483080096754071*^9, 
   3.483080097042079*^9}, {3.4830807870486393`*^9, 3.48308079970193*^9}, {
   3.4830813864324923`*^9, 3.483081393159745*^9}, {3.483081432663106*^9, 
   3.4830814466433697`*^9}, {3.483081529280999*^9, 3.483081551532897*^9}, {
   3.4830818507249537`*^9, 3.483081876224759*^9}, {3.483171058809473*^9, 
   3.483171067903956*^9}, {3.48317110941476*^9, 3.483171109461301*^9}, {
   3.4831721903935347`*^9, 3.483172190719893*^9}, 3.483173815621566*^9, {
   3.483338639431527*^9, 3.4833386585590353`*^9}, {3.4833388217959948`*^9, 
   3.4833388220502567`*^9}, {3.483339438898518*^9, 3.483339439337183*^9}, {
   3.4833395712912083`*^9, 3.483339571873255*^9}, {3.4843019260350943`*^9, 
   3.484301937868167*^9}, {3.484982121596943*^9, 3.484982155292054*^9}, {
   3.484982193220886*^9, 3.484982195114786*^9}, {3.484982368382577*^9, 
   3.484982372694126*^9}, {3.484982430618746*^9, 3.484982431098599*^9}, {
   3.484991209520792*^9, 3.4849912370791388`*^9}, {3.486062061631392*^9, 
   3.48606206675102*^9}, {3.486100407133815*^9, 3.486100439479476*^9}, {
   3.4861009253950653`*^9, 3.486100933936471*^9}, {3.486131441161303*^9, 
   3.486131441357229*^9}, {3.486818748444557*^9, 3.486818842928363*^9}, {
   3.4868189159471703`*^9, 3.4868189838477716`*^9}, {3.486819015750939*^9, 
   3.4868190552299337`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxlk3ss1WEYx5U0l5DcWsqlxdiE6bY0vugiKbms0nYso2Zq5jKlMTYtG06c
aJQQizkSch1JrrlGzHHL5ezg3Jxz+Im0SBfvr99f9d3evXv3PHve5/m839cs
MMzn1nYlJSWHrUX2f+WfeTeYWvHCFVqZyBjL98y1C0XWZmCvbVYZ4q1jtH6M
xqCAt9MhtKAGDhHtUYLVJARYr3dm3GjCyVusdN+uTLwuJWpHhXukxzZ2Hkh0
KwWuNmqehl2FoNOte2H8i4qOzS4Bf4ZoAPYl+g37v5biCcnOGMShN0Oh5k6V
0Ktwm43RG0ZNRFdWwkA1omnxmD7r0OK3wjZvGQHHpbxVVFCP6+ToN4b0S7pF
kZ8aYcXitK9ZTsDNbynkoagZHvFVQkOPSeQcqternGhj+p+GV7GK3bPUDtDh
+Bms7HxXp3qhEz/J+Jt8OKUPx5W3d0EratKZqylAtkFrwPFPPQwfAarFJUZ3
0vpw2Uham+A5iz36R6plff2woxPmIK1ejrPRGASJGknnsH5uqvulZAikemDv
PMby3n887TwMunyUEOOmT3dwNXgYIbh5QgwFR/a7r/JwWznv+FCICGY5FudF
uaM4Q0uMkWTdYuX8cXyzJAOLwU1rcq3PnGA4SdCQP+DbU/yZuU+CFB3S4CQz
jxQHTdO9j52dRij9wFKMsIvuLcfOgMZRJQU/oN7A5RUf6uOF4Y7qC+BPXdT8
oiRgeC3AolPjpk+TAHR4fAFrpnsvaT+YZXjLoNqZYiQ7O8f4Q4buA3FcbZV5
ONAXyiH7oMZLGJxHHcFTK0crS+/w7/tC0M+5IoeOJhV24poIjnQDCnBObXia
qIuRnESkgAn7RUd8nRhbZtlyjALrzpZXp70kTP1FWAVUBQ3OSfCIlGMv4i1X
Jyt23wIU3g3GifJFpJY12tvqyEDcwuIsYXX3456S5zJQS7Rgp1+74eMihwVt
OAocR7bJLokcQTRQCv7ZT1V7yxRIlJOCFFyPNrXMsBYZ3hRODG/wknWXICI4
hRRqv7eFN/tQ+Pv7lv/b/wBok87x
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxdkmtIU2EYx8XCyBphUEkuuyoWpmGmTai/qw9dNGNaaaSVty6atdAisiQr
iTAqtYJpYWJQgjHntXRl07a8Jc7L5lZO15ye7WxOLclIq3NOL33ogcP74bzP
Ob/f/3lWJ5yLTHZ2cnISMA97/l/eHx4HQhKE/R5UdXZEKl5uW3gqIy4FhRK2
biN8Dn/s5NebKDjm+0OZXwyfHmf3DpUE3o0xk7leUijvlNcH+JdAWyre5qqt
Qrqoesbk9gI5tOiVZ04D5jVqy9ZKK5AlG14WlqWAV0OQqDK1Cpu5aoY6vV+q
WVWH5imf2HtNSjw7Wy6wquoR3HV6zpOgFgQGH+xdaH+L9czbKZ8OBGv4FxI/
KnA9ggXuhP/9PRPOkvcISXva4xKihoDa0labp4IqnwXuRrKubnni3hYwsAxx
Dwr56d0zSW2Epw95UaolguQO4qPF3FKLcFNhJ46zusf6UUkJbNGpXTjMfUCP
kNNZARuvqRHJ2NGiz9BVTSvEb7thY3XpAUTKQ72VC3rB4cYOwlU9/utieh+e
sfGUDmGdLH77Yg8NGDnG0IghujcvmtKgJpsVMuLNjrqH06H95P9fUBBX5KOr
0UH4nJehDzVBbfvcJynSg4uny4TvMhbwE7k/jEXX1d9WuQ/APYw1NKO1XN78
e9ZA/M0Iv5l0yGAcBId3bwQugfV+PPEQZhNa/R/NjGBf/hHXGNsQ7rDXc0eh
35rY/u6EEX+3hcLPA92Z/EkjyYMC/7zQ99LVL+DilFG40be0acLFBDeuLMiS
Ru06WmIieVig5E2tKVsxDHkDWxbwzjz69VUyDA43zIp9dwVMwmYyPyuy24VS
Ua0ZnJ4vjfiaHLFcMUL8aRx/KfSbHzFKeGzY+WZ3yrzGUcJjAzOMpEg5Rfrt
UJywoLjVAtY2odUO7+bLBcmDVrJfY4hJW80/V0GT/RpDqtsD654MG+l34OE3
z1tX1tiRwg3QgYbXG+hOg53Mz4ENZo+0lbljMAyw5YBn5lK4dzrAtf9wkBzH
/51/AGLYxNg=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJxdUnsslWEcPi6dlUljzSWLVDaaYq01RA9boZRbWTQtKZfCUtPkkmSRUMKG
zBapNdVc4nRcGgvHJYbjuF/PcS7OlWazE3Oq7zve9UfP9u3d7/1+7/s8v+d9
bCLuBkXqMhgMZ+qj1/+hZhnMcoyT4G8pbXriF4s7mZeHQlNzUMljusZXFuNw
3Ui87elKCFL21noLPoJtYr2Tk/sJXet2YQWdLAwviG0OFDYgccbjw+7EVohe
tvOeZbJA/aQ6OnD2Qk62mt2Gb200ujDYqW5xSOsAzWYp7cbSn3R26fPvSNKi
F85zwxL7W1242e9YshXRDxVf7fpAxAFdOJYMYo/evmulzD4ENVtlKQJHiO4B
lL+mwcXmeU1MWtUgeoquO2xwRvG4reWIYmiI8PPwReqivBI7QvjHsBVm2j4c
yYUykL5wHLV99sLcilEU08eLJhHs/1ZIjQRriq3Zahp1gV9fNP0eQ6YfTTyD
H00MZuO9CWzLncXkG78Kp/1TyLftCFnLm0cDf73mnXoK7gaT1QnuC0hm6B+s
mp4mehYxx03aDKifIf7xcaI9oPbc/Vmij4+ljF5ro4dzxA8BTMoMFRdL5rGW
RxMI8NlF3lNevYBU+nlSlpB/6FjOjrpFmPumN4jMhLAIvtT9NIYPsRm9IYSu
kbox2UBA/BThxsmhqeP1AjKfGNoydIn4KYbc06ncSl+IM1pI8MuNydItFZI8
SFAtoxtEZJ5lXE01H5G2iki/FDoG4yaVAWJox5uRojvDa/K9jgSedOkhI/ol
2E6jHJaRsz4K/2XirxzRcRZTDpplwicHu3CCclgKrdwsBZjs4uiEUzI4aQdS
4rZG1r2LJyPzKeHFXSvwDpcTP5UwjBLmH9VTgAo3lXAVZHQcXimIfhXcHtmF
xNsoiZ4VDLjEUpFTIUqLFWiExtQLqGCsxSoWwtmmnjUroN32TV8FJ3vDJ66M
2p+nsUru+flv/QuBUsSL
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJxdU30s1HEYv9EUk/4xkbpSUUpLarJbfESixMKs5DWlCEnI0kpna+sNQ1nJ
rctLyJKXXtROyuvO653r7vJWjnu/44zJzFnd79dv/dFn++6759nneT7P9/Ps
axebEhxnRKPRXAyHuP9Hoeh5YKlzLg7yEoxZrmy8djePT48sQfvCzoj8tkrk
NW+x4nhUYiuJRiTmfWqQV9dCtt7/VoP0A7IsloUbpI1U/Rd8HoyTLEe8R9jc
A/vW020oeUrgI2KcljoLozuQIX95v+RFC7h7i/Wx3G5kRNfWR278ikuGal5C
L2j68SiHox0gImPWAFhNv5zZ/E4EN9PvaIJ4sHQcF+9K6oZB3DABHzcduksP
gIucQFvlW+YQfLh1AY+0PVR/AXL3GD+r/N0Hsr2xEF4uu3Wz2YP4ZsJIZgtE
iHyccVE3xwM57pwYhaGn5PZeQ9hsUGumD4MtIImofUVgBImmJ6uLaUJYpI94
Vq0dg360PzQsU4RUdzNx+ZVxtAqtQ9rmxdhP4ie8nEvoq8qHce8ugQn0ddmE
m7iOgrTDSQLvQzSjAt4YyHBJgm01m/RRVT/Q30dgEtvf8JLtPSZQFE1UTMHI
YrHpupmE8kMKT5bbWcashNKT4bJjTMO5wUlogwiCDJlpoSJWyxRIerMckoWa
ikU3KfwkWZZ1vgr4nslmpLZJ8Y5JGKjAjhOrPfIPy+BPGqxEwUC4uYojg8Ec
g0NKNKp7OEf85NT8Khy/llx2XixHnS/RUIUVVYepgKmAJZlQQ14Wv9S9TYkb
ZEINDiMtxKdfCcItdzMN4q/2HZsvUlH71CBlX8W8lbcaxDYDbbXwyK0fE6zR
oIuwp1OLJJvvTisKDaU/DTvrgHU5fC2lPw02PyPhdvs0LpCYQS/oTG79DBzI
B+gQ8LD6SUGojuLr8PcXzP67/wBc3YmK
     "]]}},
  AspectRatio->1,
  Frame->True,
  FrameLabel->{
    FormBox["\"fraction of false positives\"", TraditionalForm], 
    FormBox["\"fraction of true positives\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  GridLines->{{0.1}, {}},
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"GTE sep. (Random,HP&IF), \\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(img\\)]\
\\) = 20 ms, 4&4 bins\"", TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.486100449891643*^9, {3.486100896820649*^9, 3.4861009102970753`*^9}, 
   3.4861009438648767`*^9, 3.486102386706822*^9, 3.486102460948414*^9, 
   3.486121737423921*^9, 3.4868182887546053`*^9, 3.48681872232506*^9, 
   3.486818993181074*^9, {3.486819044575962*^9, 3.486819063177845*^9}, 
   3.486819098620116*^9, 3.4869663730255737`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"<<", "\"\<pars_iteration2.mx\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.4830796722326107`*^9, 3.483079686242798*^9}, {
  3.4843019840549393`*^9, 3.484301984134704*^9}, {3.484982172734666*^9, 
  3.484982172950973*^9}, {3.484991247593631*^9, 3.484991247664734*^9}, {
  3.4850642292457123`*^9, 3.485064229500051*^9}, {3.48506427431455*^9, 
  3.4850642743815413`*^9}, {3.485080361657846*^9, 3.485080361777384*^9}, {
  3.485080408147875*^9, 3.485080408259987*^9}, {3.485086288121562*^9, 
  3.4850862883437433`*^9}, {3.486100483525758*^9, 3.486100488195477*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"executable", "\[Rule]", "teglobalsim"}], ",", 
   RowBox[{"iteration", "\[Rule]", "3"}], ",", 
   RowBox[{"size", "\[Rule]", "100"}], ",", 
   RowBox[{"rawdatabins", "\[Rule]", "255"}], ",", 
   RowBox[{"bins", "\[Rule]", "2"}], ",", 
   RowBox[{"cutoff", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"globalbins", "\[Rule]", "5"}], ",", 
   RowBox[{"samples", "\[Rule]", "359951"}], ",", 
   RowBox[{"p", "\[Rule]", "1"}], ",", 
   RowBox[{"noise", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"tauF", "\[Rule]", "20"}], ",", 
   RowBox[{"OverrideRescalingQ", "\[Rule]", "0"}], ",", 
   RowBox[{"HighPassFilterQ", "\[Rule]", "1"}], ",", 
   RowBox[{"InstantFeedbackTermQ", "\[Rule]", "1"}], ",", 
   RowBox[{"AdaptiveBinningQ", "\[Rule]", "1"}], ",", 
   RowBox[{
   "inputfile", 
    "\[Rule]", \
"\<\"../../Simulationen/NEST/calciumbursts2/Paris/RandomTopology/noisefree_\
rawCalcium_uchar_20ms.dat\"\>"}], ",", 
   RowBox[{
   "outputfile", 
    "\[Rule]", "\<\"Paris/SeparatedTest/adjA_iteration2.mx\"\>"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{
  3.485584935863344*^9, 3.485606524821539*^9, 3.485607953372072*^9, 
   3.486062074487575*^9, 3.486099927178383*^9, {3.486100477815926*^9, 
   3.48610048869162*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["examine which connections the reconstruction captures well", \
"Subsubsection",
 CellChangeTimes->{{3.484302087429489*^9, 3.484302107311686*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Length", "@", "importlist2"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjAtest", "=", 
   RowBox[{
   "importlist2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjAtest", "/=", 
   RowBox[{"Max", "@", "adjAtest"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.4843021442982693`*^9, 3.484302149349174*^9}, {
  3.48430220303413*^9, 3.484302203811096*^9}, {3.484305739038876*^9, 
  3.484305739117375*^9}, {3.486062763240059*^9, 3.486062769382258*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{
  3.484302149795293*^9, 3.484302204239983*^9, {3.4843057348242083`*^9, 
   3.484305739706233*^9}, 3.484308401364203*^9, 3.484894031608481*^9, 
   3.484895379539769*^9, 3.484991266861476*^9, 3.484991302526929*^9, {
   3.4849913470251303`*^9, 3.484991373492601*^9}, 3.48506429973627*^9, 
   3.48508041601239*^9, 3.485085085913865*^9, 3.485085314466899*^9, 
   3.485086321099224*^9, 3.485585084965952*^9, {3.48560650419162*^9, 
   3.4856065265417643`*^9}, 3.4856079562110453`*^9, 3.48568196704245*^9, 
   3.486062080149098*^9, 3.486062770078219*^9, 3.4860997729114437`*^9, 
   3.486102461061029*^9, 3.486121737550521*^9, 3.486184140684585*^9, 
   3.486818269172759*^9, 3.4868191087286463`*^9, 3.486966418244955*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ReduceForInterpolation", "[", "xdata_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"xdata2", "=", 
        RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"ii", "=", "1"}], ",", 
        RowBox[{"ii", "\[LessEqual]", 
         RowBox[{"Length", "@", "xdata"}]}], ",", 
        RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{"xdata2", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"xdata", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                "_"}], "}"}]}], "]"}]}], "\[Equal]", "0"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"xdata2", ",", 
            RowBox[{
            "xdata", "\[LeftDoubleBracket]", "ii", 
             "\[RightDoubleBracket]"}]}], "]"}]}], "\[IndentingNewLine]", 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", "xdata2"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.486130379463045*^9, 3.486130578619874*^9}}],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GenerateROCsmartVector", "[", 
      RowBox[{
       RowBox[{"adjA", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}]}], "]"}], "&"}], 
    "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.1", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fraction of false positives\>\"", ",", 
      "\"\<fraction of true positives\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<SGTE for 1 node, (1st in-shell)\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GenerateROCsmartVector", "[", 
      RowBox[{
       RowBox[{"adjA", "\[LeftDoubleBracket]", 
        RowBox[{"#", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
        RowBox[{"#", ",", "All"}], "\[RightDoubleBracket]"}]}], "]"}], "&"}], 
    "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", "100"}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.1", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fraction of false positives\>\"", ",", 
      "\"\<fraction of true positives\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<SGTE for 1 node, (1st out-shell)\>\""}], ",", 
   
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.486128115455358*^9, 3.486128154623191*^9}, {
  3.4861282049890423`*^9, 3.4861282424820623`*^9}, {3.48612838958563*^9, 
  3.4861284908238773`*^9}, {3.486128536375235*^9, 3.4861285669122267`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"AUCin", "[", 
    RowBox[{"adjAtest_", ",", "index_"}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Interpolation", "[", 
       RowBox[{"ReduceForInterpolation", "@", 
        RowBox[{"GenerateROCsmartVector", "[", 
         RowBox[{
          RowBox[{"adjA", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "index"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "index"}], "\[RightDoubleBracket]"}]}], 
         "]"}]}], "]"}], "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AUCout", "[", 
   RowBox[{"adjAtest_", ",", "index_"}], "]"}], ":=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"ReduceForInterpolation", "@", 
       RowBox[{"GenerateROCsmartVector", "[", 
        RowBox[{
         RowBox[{"adjA", "\[LeftDoubleBracket]", 
          RowBox[{"index", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
          RowBox[{"index", ",", "All"}], "\[RightDoubleBracket]"}]}], "]"}]}],
       "]"}], "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.486121760662052*^9, 3.486121786844576*^9}, {
  3.4861218473864727`*^9, 3.486121861920068*^9}, {3.486127913806163*^9, 
  3.4861279501610823`*^9}, {3.4861280601224413`*^9, 3.486128070697689*^9}, {
  3.4861297534294853`*^9, 3.486129825385277*^9}, {3.48612987611757*^9, 
  3.486129882013352*^9}, {3.486130567656351*^9, 3.4861305686476*^9}, {
  3.486130618156576*^9, 3.486130666050737*^9}, {3.4861308399206057`*^9, 
  3.486130842095131*^9}}],

Cell[BoxData[{
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"AUCin", "[", 
         RowBox[{"adjAtest", ",", "#"}], "]"}], "-", "0.5"}], ")"}]}], "&"}], 
    "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"size", "/.", "pars"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<predictive power\>\"", ",", "\"\<#\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<reconstruction of 1st in-shell\>\""}],
    ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"AUCout", "[", 
         RowBox[{"adjAtest", ",", "#"}], "]"}], "-", "0.5"}], ")"}]}], "&"}], 
    "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"size", "/.", "pars"}]}], "]"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<predictive power\>\"", ",", "\"\<#\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<reconstruction of 1st out-shell\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.4861306897570553`*^9, 3.486130816768992*^9}, {
  3.4861308483110113`*^9, 3.48613086388794*^9}, {3.486130904315164*^9, 
  3.486130915788558*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"correlation", " ", "of", " ", "predictive", " ", "power"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"Transpose", "@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"AUCin", "[", 
             RowBox[{"adjAtest", ",", "#"}], "]"}], "-", "0.5"}], ")"}]}], 
         "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"size", "/.", "pars"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"AUCout", "[", 
             RowBox[{"adjAtest", ",", "#"}], "]"}], "-", "0.5"}], ")"}]}], 
         "&"}], "/@", 
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"size", "/.", "pars"}]}], "]"}]}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<1st in-shell\>\"", ",", "\"\<1st out-shell\>\""}], "}"}]}],
     ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<correlation of predictive power\>\""}], ",", 
    
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.486131466855981*^9, 3.486131678610058*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
Vw==
    "]]},
  AspectRatio->1,
  Frame->True,
  FrameLabel->{
    FormBox["\"1st in-shell\"", TraditionalForm], 
    FormBox["\"1st out-shell\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox["\"correlation of predictive power\"", TraditionalForm],
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.486131580074202*^9, 3.486131607029119*^9}, {
  3.4861316636675367`*^9, 3.486131687610373*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Test", ",", " ", 
    RowBox[{
    "ob", " ", "man", " ", "einfach", " ", "k\[UDoubleDot]nstlich", " ", 
     "\"\<asymmetrisieren\>\"", " ", "kann"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"adjAtest2", "=", 
     RowBox[{"adjAtest", "/", 
      RowBox[{"Max", "@", "adjAtest"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{
       RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xtempNoDiag", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"{", "ii", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"Min", "@", "xtempNoDiag"}], "]"}], ";"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], "=", 
        RowBox[{"Insert", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"xtempNoDiag", "-", 
            RowBox[{"Min", "@", "xtempNoDiag"}]}], 
           RowBox[{
            RowBox[{"Max", "@", "xtempNoDiag"}], "-", 
            RowBox[{"Min", "@", "xtempNoDiag"}]}]], 
          RowBox[{"(*", 
           RowBox[{"*", 
            RowBox[{"Max", "@", "xtempNoDiag"}]}], "*)"}], ",", "0", ",", 
          "ii"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], "=", 
        RowBox[{
         RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], "*", 
         RowBox[{"UnitStep", "[", 
          RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], "]"}]}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "xtempNoDiag", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.4860620913246593`*^9, 3.486062252058157*^9}, {
  3.48606231593451*^9, 3.486062338863305*^9}, {3.486062410234414*^9, 
  3.486062468366762*^9}, {3.486062537481491*^9, 3.486062587344215*^9}, {
  3.486062618133689*^9, 3.4860626291956463`*^9}, {3.486062748787973*^9, 
  3.486062754914825*^9}, {3.4860628196579723`*^9, 3.486062822471651*^9}, {
  3.4860628763816137`*^9, 3.486062939393478*^9}, {3.486063028419465*^9, 
  3.486063085726713*^9}, {3.486102483022745*^9, 3.4861025051411743`*^9}, {
  3.486906471891447*^9, 3.4869064722278833`*^9}, {3.486906547630828*^9, 
  3.4869066140326967`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", 
   RowBox[{"1", ";;", "10"}]}], 
  "\[RightDoubleBracket]"}], "\[IndentingNewLine]", 
 RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
  RowBox[{"1", ",", 
   RowBox[{"1", ";;", "10"}]}], "\[RightDoubleBracket]"}]}], "Input",
 CellChangeTimes->{{3.486062360723781*^9, 3.48606238009548*^9}, {
  3.486906487523741*^9, 3.486906489065982*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.14388302282954896`", ",", "0.11024054653601302`", ",", 
   "0.23318393298503493`", ",", "0.10875380078187512`", ",", 
   "0.08812152921798334`", ",", "0.24216827552370862`", ",", 
   "0.1692462449418166`", ",", "0.31634480453666114`", ",", 
   "0.26831932410222803`"}], "}"}]], "Output",
 CellChangeTimes->{{3.48606236990584*^9, 3.486062380731681*^9}, 
   3.486062772170064*^9, 3.486062829587657*^9, {3.486062928099077*^9, 
   3.48606293447493*^9}, 3.4860630343474913`*^9, {3.486906622588689*^9, 
   3.4869066274869747`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0.26824928296332184`", ",", "0.6721722162774596`", ",", 
   "0.4757207637805104`", ",", "0.20417856119877573`", ",", 
   "0.3380658770079507`", ",", "0.27222316065631225`", ",", 
   "0.3475116305068951`", ",", "0.4102653624503003`", ",", 
   "0.3270085248753939`"}], "}"}]], "Output",
 CellChangeTimes->{{3.48606236990584*^9, 3.486062380731681*^9}, 
   3.486062772170064*^9, 3.486062829587657*^9, {3.486062928099077*^9, 
   3.48606293447493*^9}, 3.4860630343474913`*^9, {3.486906622588689*^9, 
   3.486906627490102*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", "4", "]"}]}]], "Input",
 CellChangeTimes->{{3.486906640085474*^9, 3.4869066796468897`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0, 0}, {
             Rational[1, 5], 37}]},
          ImageSizeCache->{{21.0625, 47.5625}, {-49.25, 36.}}],
         StatusArea[#, 37]& ,
         TagBoxNote->"37"],
        StyleBox["37", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[37, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 5], 0}, {
             Rational[2, 5], 27}]},
          ImageSizeCache->{{45.5625, 72.0625}, {-26.75, 36.}}],
         StatusArea[#, 27]& ,
         TagBoxNote->"27"],
        StyleBox["27", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[27, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[2, 5], 0}, {
             Rational[3, 5], 24}]},
          ImageSizeCache->{{70.0625, 96.5625}, {-20., 36.}}],
         StatusArea[#, 24]& ,
         TagBoxNote->"24"],
        StyleBox["24", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[24, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[3, 5], 0}, {
             Rational[4, 5], 9}]},
          ImageSizeCache->{{94.5, 121.}, {13.75, 36.}}],
         StatusArea[#, 9]& ,
         TagBoxNote->"9"],
        StyleBox["9", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[9, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[4, 5], 0}, {1, 2}]},
          ImageSizeCache->{{119., 145.5}, {29.5, 36.}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1, 0}, {
             Rational[6, 5], 1}]},
          ImageSizeCache->{{143.5, 170.}, {31.75, 36.}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesOrigin->{0, 0},
    Frame->True,
    FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
    PlotRange->NCache[{{0, 
        Rational[6, 5]}, {All, All}}, {{0, 1.2}, {All, All}}],
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0, 0}, {
             Rational[1, 10], 12}]},
          ImageSizeCache->{{21.1875, 37.125}, {-0.75, 34.9375}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 10], 0}, {
             Rational[1, 5], 30}]},
          ImageSizeCache->{{35.125, 51.0625}, {-51.25, 34.9375}}],
         StatusArea[#, 30]& ,
         TagBoxNote->"30"],
        StyleBox["30", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[30, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 5], 0}, {
             Rational[3, 10], 31}]},
          ImageSizeCache->{{49.125, 65.0625}, {-54., 34.9375}}],
         StatusArea[#, 31]& ,
         TagBoxNote->"31"],
        StyleBox["31", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[31, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[3, 10], 0}, {
             Rational[2, 5], 12}]},
          ImageSizeCache->{{63.0625, 79.}, {-0.75, 34.9375}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[2, 5], 0}, {
             Rational[1, 2], 7}]},
          ImageSizeCache->{{77., 92.9375}, {13.3125, 34.9375}}],
         StatusArea[#, 7]& ,
         TagBoxNote->"7"],
        StyleBox["7", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[7, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 2], 0}, {
             Rational[3, 5], 4}]},
          ImageSizeCache->{{91., 106.9375}, {21.6875, 34.9375}}],
         StatusArea[#, 4]& ,
         TagBoxNote->"4"],
        StyleBox["4", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[4, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[3, 5], 0}, {
             Rational[7, 10], 2}]},
          ImageSizeCache->{{104.9375, 120.875}, {27.3125, 34.9375}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[7, 10], 0}, {
             Rational[4, 5], 1}]},
          ImageSizeCache->{{118.875, 134.8125}, {30.125, 34.9375}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ], {}, {}, 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1, 0}, {
             Rational[11, 10], 1}]},
          ImageSizeCache->{{160.75, 176.6875}, {30.125, 34.9375}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesOrigin->{0, 0},
    Frame->True,
    FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
    PlotRange->NCache[{{0, 
        Rational[11, 10]}, {All, All}}, {{0, 1.1}, {All, All}}],
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0, 0}, {
             Rational[1, 10], 8}]},
          ImageSizeCache->{{21.1875, 37.125}, {-0.1875, 34.9375}}],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 10], 0}, {
             Rational[1, 5], 15}]},
          ImageSizeCache->{{35.125, 51.0625}, {-29.1875, 34.9375}}],
         StatusArea[#, 15]& ,
         TagBoxNote->"15"],
        StyleBox["15", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[15, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 5], 0}, {
             Rational[3, 10], 21}]},
          ImageSizeCache->{{49.125, 65.0625}, {-54., 34.9375}}],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[3, 10], 0}, {
             Rational[2, 5], 20}]},
          ImageSizeCache->{{63.0625, 79.}, {-49.875, 34.9375}}],
         StatusArea[#, 20]& ,
         TagBoxNote->"20"],
        StyleBox["20", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[20, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[2, 5], 0}, {
             Rational[1, 2], 14}]},
          ImageSizeCache->{{77., 92.9375}, {-25.0625, 34.9375}}],
         StatusArea[#, 14]& ,
         TagBoxNote->"14"],
        StyleBox["14", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[14, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 2], 0}, {
             Rational[3, 5], 13}]},
          ImageSizeCache->{{91., 106.9375}, {-20.875, 34.9375}}],
         StatusArea[#, 13]& ,
         TagBoxNote->"13"],
        StyleBox["13", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[13, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[3, 5], 0}, {
             Rational[7, 10], 5}]},
          ImageSizeCache->{{104.9375, 120.875}, {12.25, 34.9375}}],
         StatusArea[#, 5]& ,
         TagBoxNote->"5"],
        StyleBox["5", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[5, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[7, 10], 0}, {
             Rational[4, 5], 2}]},
          ImageSizeCache->{{118.875, 134.8125}, {24.625, 34.9375}}],
         StatusArea[#, 2]& ,
         TagBoxNote->"2"],
        StyleBox["2", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[2, {
          GrayLevel[0]}], "Tooltip"]& ], {}, 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[9, 10], 0}, {1, 1}]},
          ImageSizeCache->{{146.8125, 162.75}, {28.8125, 34.9375}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1, 0}, {
             Rational[11, 10], 1}]},
          ImageSizeCache->{{160.75, 176.6875}, {28.8125, 34.9375}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesOrigin->{0, 0},
    Frame->True,
    FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
    PlotRange->NCache[{{0, 
        Rational[11, 10]}, {All, All}}, {{0, 1.1}, {All, All}}],
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.7]], {}, 
     {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
      EdgeForm[Opacity[0.7]], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{0, 0}, {
             Rational[1, 10], 11}]},
          ImageSizeCache->{{21.1875, 37.125}, {2., 38.1875}}],
         StatusArea[#, 11]& ,
         TagBoxNote->"11"],
        StyleBox["11", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[11, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 10], 0}, {
             Rational[1, 5], 11}]},
          ImageSizeCache->{{35.125, 51.0625}, {2., 38.1875}}],
         StatusArea[#, 11]& ,
         TagBoxNote->"11"],
        StyleBox["11", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[11, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 5], 0}, {
             Rational[3, 10], 23}]},
          ImageSizeCache->{{49.125, 65.0625}, {-35.25, 38.1875}}],
         StatusArea[#, 23]& ,
         TagBoxNote->"23"],
        StyleBox["23", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[23, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[3, 10], 0}, {
             Rational[2, 5], 28}]},
          ImageSizeCache->{{63.0625, 79.}, {-50.75, 38.1875}}],
         StatusArea[#, 28]& ,
         TagBoxNote->"28"],
        StyleBox["28", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[28, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[2, 5], 0}, {
             Rational[1, 2], 15}]},
          ImageSizeCache->{{77., 92.9375}, {-10.375, 38.1875}}],
         StatusArea[#, 15]& ,
         TagBoxNote->"15"],
        StyleBox["15", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[15, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[1, 2], 0}, {
             Rational[3, 5], 8}]},
          ImageSizeCache->{{91., 106.9375}, {11.3125, 38.1875}}],
         StatusArea[#, 8]& ,
         TagBoxNote->"8"],
        StyleBox["8", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[8, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[3, 5], 0}, {
             Rational[7, 10], 1}]},
          ImageSizeCache->{{104.9375, 120.875}, {33.0625, 38.1875}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[7, 10], 0}, {
             Rational[4, 5], 1}]},
          ImageSizeCache->{{118.875, 134.8125}, {33.0625, 38.1875}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{
             Rational[4, 5], 0}, {
             Rational[9, 10], 1}]},
          ImageSizeCache->{{132.8125, 148.75}, {33.0625, 38.1875}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ], {}, 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           RectangleBox[{1, 0}, {
             Rational[11, 10], 1}]},
          ImageSizeCache->{{160.75, 176.6875}, {33.0625, 38.1875}}],
         StatusArea[#, 1]& ,
         TagBoxNote->"1"],
        StyleBox["1", {
          GrayLevel[0]}, StripOnInput -> False]],
       Annotation[#, 
        Style[1, {
          GrayLevel[0]}], "Tooltip"]& ]}, {}, {}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->{False, False},
    AxesOrigin->{0, 0},
    Frame->True,
    FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
    PlotRange->NCache[{{0, 
        Rational[11, 10]}, {All, All}}, {{0, 1.1}, {All, All}}],
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.1]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.486906663842203*^9, 3.486906681014271*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Test", ",", " ", 
    RowBox[{
    "die", " ", "Asymmetrie", " ", "pro", " ", "Verbindung", " ", "zu", " ", 
     "verst\[ADoubleDot]rken"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xadjAlist", "=", 
     RowBox[{"{", "adjAtest", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"amount", "=", "0.1"}], ",", 
      RowBox[{"amount", "\[LessEqual]", "0.8"}], ",", 
      RowBox[{"amount", "+=", "0.1"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"adjAtemp", "=", "adjAtest"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"ii", "=", "1"}], ",", 
          RowBox[{
           RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
          RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"jj", "=", 
             RowBox[{"ii", "+", "1"}]}], ",", 
            RowBox[{
             RowBox[{"jj", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
            RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"adjAtemp", "\[LeftDoubleBracket]", 
                RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ">", 
               RowBox[{"adjAtemp", "\[LeftDoubleBracket]", 
                RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"adjAtemp", "\[LeftDoubleBracket]", 
                RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{
                RowBox[{"adjAtemp", "\[LeftDoubleBracket]", 
                 RowBox[{"jj", ",", "ii"}], "\[RightDoubleBracket]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "amount"}], ")"}]}]}], ",", 
              RowBox[{
               RowBox[{"adjAtemp", "\[LeftDoubleBracket]", 
                RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{
                RowBox[{"adjAtemp", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "*", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "amount"}], ")"}]}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
         "]"}], "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"xadjAlist", ",", 
          RowBox[{"Evaluate", "@", "adjAtemp"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"ii", ",", "jj", ",", "amount", ",", "adjAtemp"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.486102527278564*^9, 3.486102634873106*^9}, {
  3.486103233425847*^9, 3.486103397850761*^9}, {3.4861034343866043`*^9, 
  3.4861034958619432`*^9}, {3.486103562545558*^9, 3.4861035631787167`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"GenerateROCsmart", "/@", 
    RowBox[{"{", 
     RowBox[{"adjAtest", ",", "adjAtest2"}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.1", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fraction of false positives\>\"", ",", 
      "\"\<fraction of true positives\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<SGTE (Random,HP&IF), \!\(\*SubscriptBox[\(\[Tau]\), \(img\)]\) = 20 \
ms, 4&5 bins\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.486103406212195*^9, 3.486103420708745*^9}, {
  3.4861035064487753`*^9, 3.486103513271262*^9}, {3.486906481894896*^9, 
  3.486906507379356*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxlk3ss1WEYx5U0l5DcWsqlxdiE6bY0vugiKbms0nYso2Zq5jKlMTYtG06c
aJQQizkSch1JrrlGzHHL5ezg3Jxz+Im0SBfvr99f9d3evXv3PHve5/m839cs
MMzn1nYlJSWHrUX2f+WfeTeYWvHCFVqZyBjL98y1C0XWZmCvbVYZ4q1jtH6M
xqCAt9MhtKAGDhHtUYLVJARYr3dm3GjCyVusdN+uTLwuJWpHhXukxzZ2Hkh0
KwWuNmqehl2FoNOte2H8i4qOzS4Bf4ZoAPYl+g37v5biCcnOGMShN0Oh5k6V
0Ktwm43RG0ZNRFdWwkA1omnxmD7r0OK3wjZvGQHHpbxVVFCP6+ToN4b0S7pF
kZ8aYcXitK9ZTsDNbynkoagZHvFVQkOPSeQcqternGhj+p+GV7GK3bPUDtDh
+Bms7HxXp3qhEz/J+Jt8OKUPx5W3d0EratKZqylAtkFrwPFPPQwfAarFJUZ3
0vpw2Uham+A5iz36R6plff2woxPmIK1ejrPRGASJGknnsH5uqvulZAikemDv
PMby3n887TwMunyUEOOmT3dwNXgYIbh5QgwFR/a7r/JwWznv+FCICGY5FudF
uaM4Q0uMkWTdYuX8cXyzJAOLwU1rcq3PnGA4SdCQP+DbU/yZuU+CFB3S4CQz
jxQHTdO9j52dRij9wFKMsIvuLcfOgMZRJQU/oN7A5RUf6uOF4Y7qC+BPXdT8
oiRgeC3AolPjpk+TAHR4fAFrpnsvaT+YZXjLoNqZYiQ7O8f4Q4buA3FcbZV5
ONAXyiH7oMZLGJxHHcFTK0crS+/w7/tC0M+5IoeOJhV24poIjnQDCnBObXia
qIuRnESkgAn7RUd8nRhbZtlyjALrzpZXp70kTP1FWAVUBQ3OSfCIlGMv4i1X
Jyt23wIU3g3GifJFpJY12tvqyEDcwuIsYXX3456S5zJQS7Rgp1+74eMihwVt
OAocR7bJLokcQTRQCv7ZT1V7yxRIlJOCFFyPNrXMsBYZ3hRODG/wknWXICI4
hRRqv7eFN/tQ+Pv7lv/b/wBok87x
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxdUw0s1HEYFq0t7ayMtHxUFn0pllgpPUSFM4sltFtGUSmRJF+1zuhDrStt
omSKdekDLXSjj3GE6nRKnXwfx338z93VUm6h7v/3W22923+/vb/93+d9nud9
f8uiE0JijI2MjDwNH33+H44tRRtQmAKX/MnoNud7+Flj2tO84NTfvLUslRuY
+y/vDSpuGJOlwVRSmuhpyoduQjiLh0w46ZvzIp3KsS57mJVyhAv2mScyK3YF
qT+PUCZqYJY6KT3bwkMOFSywy6lHEnvWJduMfHgygI2wdPOpf1Z4E4pqbpC1
ogkJrm5NJktLsL/NmWYA9tShzDucUoIngktRZSfvNR8ZFhU7peli7AjZPPEi
6DHh+wHPXwRevl/wBDNqO6EOO3KVnfUUftJ0Q8UnFJjuPV1eUoNFDGEJfL3s
S+NyBQSvC1FbuAH6HfWIZaIble/Y2Qf2vIRZcrcXn9WLBUw0gM+iL/rw4G7s
oZ/uQnB4jeMrOQOEZzPxYxAWq/okq4+2YCqaFjQI9/au9VURb0i9FAcpcUKt
mQhMOW8IS+ZsqFvHEsMjvuTjHI9hrPnK3fVI0AFrxiAZzK2asiT8D2Dk5stw
cW6HbjrlI9EzgjVx51ISXD9BfNjktrt4BF1OU3LXTZ8R8e2Sw6vwUXy2Oblf
FCxBWSI9gVFkD1Cd18K6iC45RmyntacyvhD/5XgZZJuWc6yH9FfgQnasvKK9
l+hTwLU641b5sn4Ymhk6KnCllrf9fdQATJgLJXAjR3siYpDgKaHyaYibJx1E
DY1WrYTV9rew40rJvFTY7a893rpiCIz8eBXW/k6d7SgcAu1+crcKCwU23xfH
DMObMZCCMQ82uolhXI+kN5LCeb3f0QKeDMx66ikUmhe/4liMIMSwfVSwGqwk
/8Q6l1EwqUANpaeZ3jdATuajRlT9xqGscAXhOwZf4a8eUagSQno8jWPICw0b
ddimgi8TGkScjNlnv5wieBr8CvF+6Gypxg/693ENvOy4bVX9asJXi454h63z
c8fAyCvRolReFfnYW4OZddfCy4Z+YVqo6edCaYkvur/nH80B0Kc=
     "]]}},
  AspectRatio->1,
  Frame->True,
  FrameLabel->{
    FormBox["\"fraction of false positives\"", TraditionalForm], 
    FormBox["\"fraction of true positives\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  GridLines->{{0.1}, {}},
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"SGTE (Random,HP&IF), \\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(img\\)]\\) \
= 20 ms, 4&5 bins\"", TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.486103427021688*^9, {3.4861034809573393`*^9, 3.4861035080349083`*^9}, 
   3.486103583232173*^9, {3.486906495074752*^9, 3.486906511749309*^9}, {
   3.48690655865106*^9, 3.486906606857375*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmean", "=", 
   RowBox[{"N", "@", 
    RowBox[{"Mean", "@", 
     RowBox[{"Flatten", "@", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
              "\"\<nix\>\""}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"Length", "@", "adjA"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"jj", ",", 
              RowBox[{"Length", "@", "adjA"}]}], "}"}]}], "]"}], ",", "1"}], 
         "]"}], ",", "\"\<nix\>\""}], "]"}]}]}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"separationA", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"ii", "=", "1"}], ",", 
    RowBox[{
     RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
    RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xin", "=", 
      RowBox[{"inDegree", "@", "ii"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xout", "=", 
      RowBox[{"outDegree", "@", "ii"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"jj", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"jj", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
       RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"ii", "\[NotEqual]", "jj"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"separationA", ",", 
             RowBox[{"{", 
              RowBox[{"xin", ",", "xout", ",", 
               RowBox[{
                RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], "/", 
                "xmean"}]}], "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ii", ",", "jj", ",", "xin", ",", "xout", ",", "xmean"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.484302216061736*^9, 3.484302337309827*^9}, 
   3.4843024422739677`*^9, {3.48430248422262*^9, 3.4843027828277473`*^9}, {
   3.484303400892158*^9, 3.484303403393958*^9}}],

Cell[BoxData["0.00023869857434343435`"], "Output",
 CellChangeTimes->{3.484303404099646*^9, 3.4843057420219393`*^9, 
  3.4843084035572147`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"neues", " ", "Ma\[SZ]"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"separationA", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{
       RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xin", "=", 
        RowBox[{"inDegree", "@", "ii"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"xout", "=", 
        RowBox[{"outDegree", "@", "ii"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"originalV", "=", 
        RowBox[{"reconstructedV", "=", 
         RowBox[{"{", "}"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"jj", "=", "1"}], ",", 
         RowBox[{
          RowBox[{"jj", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
         RowBox[{"jj", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ii", "\[NotEqual]", "jj"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"originalV", ",", 
               RowBox[{"adjA", "\[LeftDoubleBracket]", 
                RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], "]"}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"reconstructedV", ",", 
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}]}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"separationA", ",", 
         RowBox[{"{", 
          RowBox[{"xin", ",", "xout", ",", 
           RowBox[{"Correlation", "[", 
            RowBox[{"originalV", ",", "reconstructedV"}], "]"}]}], "}"}]}], 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.484894486197164*^9, 3.484894511914019*^9}, {
  3.4848945593193607`*^9, 3.4848947260454807`*^9}, {3.485064467195849*^9, 
  3.485064537629986*^9}}],

Cell[BoxData[{
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"inDegree", "[", "ii", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<distribution of in-degrees\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"outDegree", "[", "ii", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ii", ",", 
       RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<distribution of out-degrees\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.4843028007442408`*^9, 3.4843028868953457`*^9}, {
  3.484305841915948*^9, 3.48430586036904*^9}}],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "#"}], ">", "0"}], ",", 
        RowBox[{"Mean", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "#"}]}]}], ",", "1"}], "]"}], "&"}], 
     ")"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{"separationA", ",", 
        RowBox[{"{", 
         RowBox[{"xx", ",", "_", ",", "_"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"xx", ",", "0", ",", "25"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Filling", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(k\), \(in\)]\)\>\"", ",", 
      "\"\<avg. contrast\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "#"}], ">", "0"}], ",", 
        RowBox[{"Mean", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "#"}]}]}], ",", "1"}], "]"}], "&"}], 
     ")"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{"separationA", ",", 
        RowBox[{"{", 
         RowBox[{"_", ",", "xx", ",", "_"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"xx", ",", "0", ",", "25"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Filling", "\[Rule]", "1"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(k\), \(out\)]\)\>\"", ",", 
      "\"\<avg. contrast\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.48430306467712*^9, 3.484303345153998*^9}, {
  3.4843034241128387`*^9, 3.484303447221126*^9}, {3.4843034839757338`*^9, 
  3.484303500489765*^9}, {3.484305763466062*^9, 3.484305768931157*^9}, {
  3.484305874538855*^9, 3.484305876041811*^9}, {3.4843081220446577`*^9, 
  3.484308229958502*^9}, {3.4848947382774553`*^9, 3.4848947746529922`*^9}}],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "#"}], ">", "0"}], ",", 
        RowBox[{"Mean", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "#"}]}]}], ",", "0"}], "]"}], "&"}], 
     ")"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{"separationA", ",", 
        RowBox[{"{", 
         RowBox[{"xx", ",", "_", ",", "_"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"xx", ",", "0", ",", "25"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Filling", "\[Rule]", "0"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(k\), \(in\)]\)\>\"", ",", 
      "\"\<avg. correlation\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", "#"}], ">", "0"}], ",", 
        RowBox[{"Mean", "@", 
         RowBox[{"Last", "@", 
          RowBox[{"Transpose", "@", "#"}]}]}], ",", "0"}], "]"}], "&"}], 
     ")"}], "/@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Cases", "[", 
       RowBox[{"separationA", ",", 
        RowBox[{"{", 
         RowBox[{"_", ",", "xx", ",", "_"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"xx", ",", "0", ",", "25"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Filling", "\[Rule]", "0"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(k\), \(out\)]\)\>\"", ",", 
      "\"\<avg. correlation\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"<<", "\"\<pars_iteration0.mx\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.48430306467712*^9, 3.484303345153998*^9}, {
  3.4843034241128387`*^9, 3.484303447221126*^9}, {3.4843034839757338`*^9, 
  3.484303500489765*^9}, {3.484305763466062*^9, 3.484305768931157*^9}, {
  3.484305874538855*^9, 3.484305876041811*^9}, {3.4843081220446577`*^9, 
  3.484308229958502*^9}, {3.4848947382774553`*^9, 3.484894813072657*^9}, {
  3.484894868942967*^9, 3.484894908651353*^9}, {3.4849912794304237`*^9, 
  3.48499127950379*^9}, {3.484991310573661*^9, 3.48499131065202*^9}, {
  3.484991361313349*^9, 3.48499136142474*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"outDegree", "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{"size", "/.", "pars"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.484991766345139*^9, 3.4849917980453787`*^9}, {
  3.484991836356963*^9, 3.4849918371791363`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", "11", ",", 
   "12", ",", "13", ",", "14", ",", "15", ",", "16", ",", "17", ",", "18", 
   ",", "19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{{3.484991781000572*^9, 3.484991798870809*^9}, 
   3.484991837795681*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "scatter", " ", "plot", " ", "\[AGrave]", " ", "la", " ", "Demian"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xthresh", " ", "=", " ", "0.35"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "-=", 
     RowBox[{"Min", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "/=", 
     RowBox[{"Max", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scatterAin", "=", 
     RowBox[{"scatterAout", "=", 
      RowBox[{"{", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{
       RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAin", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inDegree", "@", "ii"}], ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}]}], 
          "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAout", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outDegree", "@", "ii"}], ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}]}], 
          "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"scatterAin", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(in\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(k\), \(in\)], \
\(reconstr\)]\) | xthresh\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"\"\<xthresh = \>\"", "<>", 
        RowBox[{"ToString", "@", "xthresh"}]}], Cell[""]}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"scatterAout", ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(out\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(k\), \(out\)], \(reconstr\)]\
\) | xthresh\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"Clear", "[", "ii", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.48506430583132*^9, 3.485064451016493*^9}, {
  3.4850645272873077`*^9, 3.485064795320882*^9}, {3.485065272724938*^9, 
  3.485065350548873*^9}, {3.485080430876397*^9, 3.485080499462368*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJyVlDEKwkAQRRcrS4sUFik0SAghhAS0NmfwCKK1V/cIKtkn+GAILsjnMzP7
/8xs3F8fl/sqpXR7/z44n26acZOxyZgyVlP6OW3mz/OMB+XXQX7leMZeuvhx
HYd86kvFd+L/9jfK50Fx9IugflA9+qU4Pnx/G/B1xq3inncTcOoGIf2yT+/3
KN+d4qG+dLhnya/jSxy/3DOK45c69lcKIz/eTyXues8Hf7wXv3/vEz3qrbfk
j/7QsT/nF+JfvYytEH389UHeafqNey/U+/vwu4RH+n4PnmeVOd8P/W/EOeae
H3roR37cH77Ix08vTj4+rM9c7D/qpxPnO2Suzud+/1/Uwuf5BXgeSoE=
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(in\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(k\\), \\(in\\)], \
\\(reconstr\\)]\\) | xthresh\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
    RowBox[{
      InterpretationBox[
       Cell[""], 
       TextCell[""]], " ", "\"xthresh = 0.35\""}], TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.486184147566103*^9}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1:eJyFlM0KglAQhaVVSxctWrgwERERyX7W+Qw9QtS6V+8RKpyv4KNLAzIcZ5xz
Zu4dN5f7+bbIsuz6et5+tn6a/Sp8Ez4zDqsCP06zb5VfKx/Md2Uinzro6YQx
85WKH4TRn7ueeJ3fJOLoXYYvFEdPrfha76lLn+ZnvoP4xoSeFIYHfvB2+s1X
CFOPubWKW/8Hi4dzcb7PN1kvzP1bVye8C0+fVXj6RF+KLxf2fH3/+J75UJ/9
GhVHH7ZT3Pv3D9O37zE2CHue3q9Onnmjb6/3+GN45kwe/L5v9szBvMzf9zM1
L/phf3ph5/u8K2H377j/P+hn/7gv8FfC/l9aH9+jsxN2vu8zOryXGLw+B+p+
+38Cf9xLUw==
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(out\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(k\\), \\(out\\)], \
\\(reconstr\\)]\\) | xthresh\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4861841475873623`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "scatter", " ", "plot", " ", "\[AGrave]", " ", "la", " ", "Demian"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xthresh", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "-=", 
     RowBox[{"Min", "@", "adjAtest"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"nonsense", ",", " ", 
     RowBox[{
     "because", " ", "it", " ", "includes", " ", "diagonal", " ", 
      "elements"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "/=", 
     RowBox[{"Max", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scatterA", "=", 
     RowBox[{"scatterArec", "=", 
      RowBox[{"{", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{
       RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterArec", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}], 
           ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}]}], 
          "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterA", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outDegree", "@", "ii"}], ",", 
           RowBox[{"inDegree", "@", "ii"}]}], "}"}]}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scatterA", ",", "scatterArec"}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(out\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(k\), \(in\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<RandomTopo: original / reconstructed | xthresh = \>\"", "<>", 
       RowBox[{"ToString", "@", "xthresh"}]}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"AbsolutePointSize", "[", "5", "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "ii", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.48506430583132*^9, 3.485064451016493*^9}, {
  3.4850645272873077`*^9, 3.485064795320882*^9}, {3.485065272724938*^9, 
  3.485065350548873*^9}, {3.485080430876397*^9, 3.485080499462368*^9}, {
  3.485606362703845*^9, 3.48560639955811*^9}, {3.485606430577292*^9, 
  3.4856064962544518`*^9}, {3.485606593725705*^9, 3.485606763449445*^9}, {
  3.485606849271052*^9, 3.48560692831063*^9}, {3.4856069979411182`*^9, 
  3.4856070679256783`*^9}, {3.48560714307627*^9, 3.4856071497916*^9}, {
  3.4856078417165728`*^9, 3.485607845106311*^9}, {3.486062672357417*^9, 
  3.486062686986578*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[5], PointBox[CompressedData["
1:eJx11EsKwkAQBNDgCVy4yMKFDhJCkOAnB/AMHkF07f13KqYQH0wgFD39qeru
TLa35/WxaJrm/n4/+H32l3/sZuyxCzgQtwM77MRvKv4RHWJ4e+JTbz3jVOGx
Xg8W4o/47S/84U1+eA/4w7vDHjjvOB+xo6ut5MW2PzH67Dd61ZW5Jl/96pbn
UIl3H7V66jR/ABN3Iq7MmLm6J/UvZ3T/qeP3l/zw2bf6o6/Fdq8F2/vp3kf8
a84THz0r8sPnXN3XmbruQ95gj3+P7dxi26dzCrbEFXhq98Z9J0+d7iU8E37n
tiE++e5FnvAnP3ur/T/876Ze5jKB9uv9yfx/ul4B81Ls
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], AbsolutePointSize[5], 
    PointBox[CompressedData["
1:eJx1lEtKQ0EQRRtHDh04cOBAg4iIhEQQ8YN5xsSYqNG4BNGxW+ilvSW5BD/v
noK6aEM4vE5/6t6q6t3Xj5f3tVLK2/fvh914bH5RHzqWK3EkrmfW+ybtKxfi
ubidWZ86ts+an4g3IvNaVxRH5XzO62l+lhnx7dj6Q/FWnOfvyvyGcWXxnoiD
rCfiU1xlT/Pa17B/qXmxuH+n4lDr8AWdirveWZzo3bc4BsaF3au4yDf5jPPx
Rd91ZcR3/NwU8X1iOtDP/UdiXzw2ogd9Q9NzYESP2Lr/+LzM85EPhtcR3BLR
9znKZOg7fMSfqYiv9MuZnVcUF75d271QdRY+ef+RV/qZ89HXM3r8uheGv/Qn
Omb2v3x2/6NfIOeOc5wRr70HdWGcZoZu+sj0RP1cal+TGXVEnqln+swH9Qt5
Z/rN3//TR/NM6oN3iLqJuvynPuPd4d1WvYSvqqPIJ++t8tVav0SdS7e/C631
Sx1r/aj5AtYphb8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(out\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(k\\), \\(in\\)]\\)\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"RandomTopo: original / reconstructed | xthresh = 0.1\"", 
    TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.485607121705379*^9, 3.485607845956318*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "scatter", " ", "plot", " ", "\[AGrave]", " ", "la", " ", "Demian"}], " ",
     "+", " ", 
    RowBox[{"3", "D", " ", "feature"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"xthresh", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "-=", 
     RowBox[{"Min", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "/=", 
     RowBox[{"Max", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scatterAin", "=", 
     RowBox[{"scatterAout", "=", 
      RowBox[{"{", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{
       RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAin", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inDegree", "@", "ii"}], ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}], 
           ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", ">", "xthresh"}], ",", "1", ",", "0"}], "]"}], 
                "&"}], ")"}], "/@", 
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}]}], ")"}],
             ".", 
            RowBox[{"adjA", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}]}]}], 
          "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAout", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outDegree", "@", "ii"}], ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}], 
           ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"#", ">", "xthresh"}], ",", "1", ",", "0"}], "]"}], 
                "&"}], ")"}], "/@", 
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}]}], ")"}],
             ".", 
            RowBox[{"adjA", "\[LeftDoubleBracket]", 
             RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}]}]}], 
          "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{"scatterAin", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<xthresh = \>\"", "<>", 
       RowBox[{"ToString", "@", "xthresh"}]}]}], ",", 
     RowBox[{"ContourLabels", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(in\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(k\), \(in\)], \
\(reconstr\)]\) | xthresh\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{"scatterAout", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ContourLabels", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(out\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(k\), \(out\)], \(reconstr\)]\
\) | xthresh\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "ii", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.48506430583132*^9, 3.485064451016493*^9}, {
  3.4850645272873077`*^9, 3.485064795320882*^9}, {3.485065272724938*^9, 
  3.485065350548873*^9}, {3.485080430876397*^9, 3.485080499462368*^9}, {
  3.485084476749887*^9, 3.4850844809384327`*^9}, {3.48508451407211*^9, 
  3.485084545039503*^9}, {3.48508457719967*^9, 3.48508462105651*^9}, {
  3.485084653406671*^9, 3.485084661661797*^9}, {3.485084761698956*^9, 
  3.48508479145577*^9}, {3.4850848564113398`*^9, 3.485084860788052*^9}, {
  3.485084916869475*^9, 3.485084939057681*^9}, {3.4850851097093363`*^9, 
  3.485085143553816*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "scatter", " ", "plot", " ", "\[AGrave]", " ", "la", " ", "Demian"}], " ",
     "+", " ", 
    RowBox[{"3", "D", " ", "feature", " ", "normiert"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xthresh", " ", "=", " ", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "-=", 
     RowBox[{"Min", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "/=", 
     RowBox[{"Max", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scatterAin", "=", 
     RowBox[{"scatterAout", "=", 
      RowBox[{"{", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{
       RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAin", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"inDegree", "@", "ii"}], ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}], 
           ",", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", ">", "xthresh"}], ",", "1", ",", "0"}], "]"}],
                  "&"}], ")"}], "/@", 
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}]}], 
              ")"}], ".", 
             RowBox[{"adjA", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}]}], 
            RowBox[{"Length", "@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{"GetConnections", "@", "adjA"}], ",", 
               RowBox[{"{", 
                RowBox[{"_", ",", "ii"}], "}"}]}], "]"}]}]]}], "}"}]}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAout", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"outDegree", "@", "ii"}], ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}], 
           ",", 
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"#", ">", "xthresh"}], ",", "1", ",", "0"}], "]"}],
                  "&"}], ")"}], "/@", 
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}]}], 
              ")"}], ".", 
             RowBox[{"adjA", "\[LeftDoubleBracket]", 
              RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}]}], 
            RowBox[{"Length", "@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{"GetConnections", "@", "adjA"}], ",", 
               RowBox[{"{", 
                RowBox[{"ii", ",", "_"}], "}"}]}], "]"}]}]]}], "}"}]}], "]"}],
        ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{"scatterAin", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<fraction of true positives, xthresh = \>\"", "<>", 
       RowBox[{"ToString", "@", "xthresh"}]}]}], ",", 
     RowBox[{"ContourLabels", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(in\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(k\), \(in\)], \
\(reconstr\)]\) | xthresh\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ListContourPlot", "[", 
    RowBox[{"scatterAout", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"ContourLabels", "\[Rule]", "All"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(k\), \(out\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(k\), \(out\)], \(reconstr\)]\
\) | xthresh\>\""}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "ii", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.48506430583132*^9, 3.485064451016493*^9}, {
  3.4850645272873077`*^9, 3.485064795320882*^9}, {3.485065272724938*^9, 
  3.485065350548873*^9}, {3.485080430876397*^9, 3.485080499462368*^9}, {
  3.485084476749887*^9, 3.4850844809384327`*^9}, {3.48508451407211*^9, 
  3.485084545039503*^9}, {3.48508457719967*^9, 3.48508462105651*^9}, {
  3.485084653406671*^9, 3.485084661661797*^9}, {3.485084761698956*^9, 
  3.48508479145577*^9}, {3.4850848564113398`*^9, 3.485084860788052*^9}, {
  3.485084916869475*^9, 3.485084939057681*^9}, {3.4850851097093363`*^9, 
  3.485085143553816*^9}, {3.485085981995296*^9, 3.4850859873358507`*^9}, {
  3.4850860186149406`*^9, 3.485086123641119*^9}, {3.485086178224333*^9, 
  3.485086187397603*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["plot original time series in comparison to reconstruction", \
"Subsubsection",
 CellChangeTimes->{{3.485682022384021*^9, 3.485682037424425*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"load", " ", "original", " ", "time", " ", "series"}], ",", " ", 
    RowBox[{
    "take", " ", "input", " ", "file", " ", "from", " ", "reconstuction", " ",
      "output"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
    "basedir", " ", "=", " ", 
     "\"\</Users/olav/Desktop/Doktorarbeit/Causality/transferentropy-sim/\
Paris/SeparatedTest\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "@", "basedir"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "inputfile", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"xpars", "=", 
      RowBox[{"<<", "\"\<pars_iteration0.mx\>\""}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", "\"\<../..\>\"", "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xinput", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"inputfile", "/.", "xpars"}], ",", 
       "\"\<UnsignedInteger8\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"Length", "@", "xinput"}], ",", 
         RowBox[{"size", "/.", "pars"}]}], "]"}], "\[NotEqual]", "0"}], ",", 
      RowBox[{"Abert", "[", "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xinput", "=", 
     RowBox[{"Partition", "[", 
      RowBox[{"xinput", ",", 
       RowBox[{
        RowBox[{"Length", "@", "xinput"}], "/", 
        RowBox[{"(", 
         RowBox[{"size", "/.", "pars"}], ")"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.4830796722326107`*^9, 3.483079686242798*^9}, {
  3.4843019840549393`*^9, 3.484301984134704*^9}, {3.484982172734666*^9, 
  3.484982172950973*^9}, {3.484991247593631*^9, 3.484991247664734*^9}, {
  3.4850642292457123`*^9, 3.485064229500051*^9}, {3.48506427431455*^9, 
  3.4850642743815413`*^9}, {3.485080361657846*^9, 3.485080361777384*^9}, {
  3.485080408147875*^9, 3.485080408259987*^9}, {3.485086288121562*^9, 
  3.4850862883437433`*^9}, {3.4856821258519917`*^9, 3.4856823692918*^9}, {
  3.485682415271529*^9, 3.485682450660309*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"executable", "\[Rule]", "teglobalsim"}], ",", 
   RowBox[{"iteration", "\[Rule]", "1"}], ",", 
   RowBox[{"size", "\[Rule]", "100"}], ",", 
   RowBox[{"rawdatabins", "\[Rule]", "255"}], ",", 
   RowBox[{"bins", "\[Rule]", "2"}], ",", 
   RowBox[{"cutoff", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"globalbins", "\[Rule]", "2"}], ",", 
   RowBox[{"samples", "\[Rule]", "359951"}], ",", 
   RowBox[{"p", "\[Rule]", "1"}], ",", 
   RowBox[{"noise", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"tauF", "\[Rule]", "20"}], ",", 
   RowBox[{"OverrideRescalingQ", "\[Rule]", "0"}], ",", 
   RowBox[{"HighPassFilterQ", "\[Rule]", "1"}], ",", 
   RowBox[{"InstantFeedbackTermQ", "\[Rule]", "1"}], ",", 
   RowBox[{"AdaptiveBinningQ", "\[Rule]", "0"}], ",", 
   RowBox[{
   "inputfile", 
    "\[Rule]", \
"\<\"../../Simulationen/NEST/calciumbursts2/Paris/RandomTopology/noisefree_\
rawCalcium_uchar_20ms.dat\"\>"}], ",", 
   RowBox[{
   "outputfile", 
    "\[Rule]", "\<\"Paris/SeparatedTest/adjA_iteration0.mx\"\>"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.4856822526298027`*^9, 3.485682370519058*^9, 
  3.485682424713591*^9, 3.485694115384762*^9, 3.486818133728813*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinput", "\[LeftDoubleBracket]", 
    RowBox[{
     RowBox[{"1", ";;", "3"}], ",", 
     RowBox[{"1", ";;", "400"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4856823730602083`*^9, 3.4856824018249617`*^9}, {
  3.485694122511252*^9, 3.485694129796048*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxd2EnS20QchnHBiqUXLFiwECmKoiiKMvNMmg8CYUhiwjwlSiAMARIzw66P
4CPoCD5CH8FH0BF8BIry86hK77fp+vltSf5arf6r/dDNu1dv3dt13e6ervu/
Pf0dz3fLv7LkfeFV+P7wA+EHw334XPjh8CPhR8OPhR8PPxFeh58MPxV+OvxM
+Nnwc+Hnwy+EXwy/FH45/EpZ9nu1LM/zWvh8WV63LF213/P1pav2/zpbuoa7
N2gZlxru3qR9mxzXt/j8Ai2uF5ZtF/08rsZ5vU4NdxeX36tejO/9zvL/quHu
XVpzPI/Te0tXPI/r+3zOuFfcXVq2fl4vLY/rLsd1Li+/R3dl+T3rleX/0W1o
ccGOQzXHzdxx/IAWFzzfh3Czv/ftKjn3r+D5fppzv5q59+/DpQue76fm/272
d1w+ImfcCnZcq2bcm/0d/49pccHe52qOm7n35xNaXPA8z8xxM3eefkqLC/b+
VHPczB3/z2hxwfNzZo5buPucfo4/np83zbxp9nf8v6DFBc/z2Bw37XPwJf0c
fz3Q4naXFg+4+4rP73A87nHF9Rf64elnjv+a8+GC208chwtueLzN8de4Hi54
/JHjzXEz/4Hjr5PjgsfvOd4cN9y+43jGqeAet1t8jgc84A7P4/wt18U9bp7v
m1M7eT7c3eDzmxyHKy644MH+9ot2vLE8T7Md4jj/D6/r98aOm9d1nAe/17Xl
95zvq7nzwPM5bzwf7hgH52nvuOCCfS4ct/k5MsejOc+p4+5zPZm7LnCfXDe8
b64rBbsODeauQ+asa6Pnw815wLo5mbuuMo9ch3vnFet0McfOQ+tAdZ7i0f7Y
eWzdmexvHfI5wD227vlcWBcH+1sH7c/6NWrXK/vjydz1i+fS9czndF7PNPVj
sL/1xZz64XNvPWnm1I/J3PrPumE9cR2Z64k59WMwt76YUz/GcLM/nsytH6xr
1hPXubmemOMhXO1PvXfd9P2tmZ9xfXPc3V7addj3tWKOh3C1P+9v87qOW3jS
vodTF3xP78PWDd/rh3DV7APGsHXIfcMU7qxj7B/6cNHsH4Zw1ewfxnDT7B+m
cEdddb/Qh4tmvzCEa3jU7MtaeNLu4+4s3YeLZh84hGt41OwjW3gKd76HsA/t
wyU8v7ewj63hMex7j/vgKdxtl16Fe82+eh0u4U140OzTt+Ea3oVHzb5/H27h
Q3gKH7W/K/y69Crch9fhos+d2k14CG/DNbwLj5rfSfbhFj6Ep/Ax3P229Erz
O00fXodLeBMewttw1fxOtAuP4X24hQ+a9XXS1NMjnvfhv9PiFbae9uZ4be5+
2RxvzKmfgznemls/zfHO3Hpqjvfm7sfM8cGc+jiFj/Z3//wHOfVyha2fvfnZ
qV2Hi/3xxtx6Gd7a3/ppTn3chUf7473m/rbwQVM/p/BR+zvZn7TUy1W419TL
dbho6uUmPGjq5TZcNfVyFx419XIfbpp6eQhPmvp4DHd/Lb3S1Ms+vNbWx/Am
PGjq4zZcwztNfRzD+3DT1MdDeMLz/Dd3/v9N7vwP99jnYW1+dmqLOd6EB/s7
/82d/+Gd/Z3/5s7/cNPOf+38Dx+18/+fpVfa+R9ea+e/dv6HB+38D1ft/A+P
4b12/ocP2vkfPmrn/7+z/wOGSZnE
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxd2EmOI0UYhuGAFUsvWLBgkSCEEELIzEMDHRTz2KYZmrHJbmigoaHNDLs4
go+QR/AR4gg+Qh7BR0Co3tdSfrUJPf7CLldmxP9H1n3Xb1++cWcpZXdHKf+P
5z/Hi2X5U5e8K7wK3x2+J3xveAjfH34g/GD4ofDD4UfCj4bX4cfCj4efCD8Z
fir8dPiZ8LPh58LPhy+EXwi/GH6pLj/nYl3+nrp0036vl5du2r/jbOmm/btf
WbqFy6uMXLcWLq8xcp1buLweufY+vbF0097XN5du4fIWI+uihcvbkWvX1TtL
t3B5l5F12cLlvfOxbshxweV9Xr/EiMulGHNefk7+Hr5HM8fd3L/jA0Zcsdeh
aa5bd77X8TI5171i70sLd+d7Hz9kxBW7Dpo57uauo48YccWuwxbuznedfkzO
uq7Ydd/Mz3h/uHzCiCt2n7Vwd7778Ao5+7aGm+Z79yvLv7N8yutcl4q9bg17
nbvzvS+f8T5c8em+YtdBd77r4HNeZ11V7Lpr2HXZ8WndfsHIdan6Gu/H48+8
H/dbzPuS9+GKp594Px5wx+1H3v8VI6643WQ0x938B16/yogrbt8zmuOOp+94
/Wu+H6643+D9uOKO5295/3g+jnjABVc8fcM8XHHD83Xm4YY7HvCMO/fH+zQy
DvF6vbb8HOf5PZrz/Z7ed6+D7+e6zX6u15Xv5X3ye3pfqzn3fTR3HWDX3YRd
p90ce53cB4Xr6L4ZsPvM6+y+HM3d1+bY+2Sd6OZ4xqe6w322Tg2uC1zNqReu
k1OdxNaPyfnWCz8Pu+5O9YN1af0YsPXDdWv9GJ1vX3FdUw8m51svnI9nP9/6
4T6iL7qP7KPVHI/m9Mum6Y+nfWm/NKc/zub2T/c5/XLAniuqOf1yNMenOkF/
nMztl+b0x9nc/kndsV8O1iVczemPY/hUx/Bkbr80x7O558CbSw/Y/lnNz/j9
5riFJ+fbL83xHLZu2y8H67r9NDxqztGnPsA5ewp3zbl8Dhf6iud4+4zn/Boe
Nef5FrZveZ7v4Vl7vr+19KA5z9fwGG6a8/wUPvVZzvNzuNCXPb8P4Rq2j5/O
8+Ep3DXn+TlcfmHk/D6Ea3jUnufDU7iHZ+35/vbSQ7hqnmNH7H5p5tY/c+pZ
19Sv2fk+J2zJqWcr7PPAYE49W5vjqqlnG+dTv0ZzvDW3fpnjnbn1zBzvzalf
3RwfzKlfc/jofJ8TfyWnfq2w9Wwwp36tzXENb5zP/RnN8db8jDG8cz6ezKlX
e3PrW/jgfOrVbI6P4fIbI/VsFR409WytqV9Ve/+x/X/EPpdt8ek5zvl45+fh
yfn0+72f5/OE8/HB+fZ75+Oj8+3/v/P72S8rfDoPaPbL2vk+L5vjjTn7YzTH
W3OuV9Psj53z8WTO/tib+zxtzv44mOPZnP1xDJc/GPEKn84D5nht7vOyOd6Y
sx9Gc7wNN+ezP3bmeDI/Ox/34e58fDC335vjY7j8yXz2wwq7P4bwWrM/anij
2S+jZr9sw03T/3fhSdP/9+Gu6f+H8Kzp/8dw+YuR/r8KD5p+vw5XTb/fhEdN
v9+GW3in6fdTeK/t7+FDeNb0+2O4/L30SnseCK/DVdPfN+ExvNX+vy+8C0+a
/r8P9/AhPGP319Hc8/c/5Gfn4wq7n4bw2vnsn2qON+HR+eyfrbn/nwrvNPtp
0uynfbhr9tMhPGv20zFc/mW8UP8DgYmmXw==
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJxd2EnO3EQchvGCFctesGDBwkQIIYRQAwkJYUgR5rkJ8xiTgRnSzLCrI/QR
fIQ+Qh2hj+Aj9BEQ+p6nJb/fpvT73rLbLrv8t+uBG3eu3b67lLK7q5T/27O/
45Wy/KtnzWXae2ifpl2F76W9RHtf+H7ai7RD+BztU7QPhh8KP0x7gfaR8KO0
52kfC6/Dj9M+SftEOP9/Pnwh7HG634vhS2HH0eO6HH4m/Cyt5/Vc+PnwlXCl
ZZxauLwQuXacry7dwuXFyLXX7aWlW7i8HHm4vELLfdHC5dXIw+U1Wu6zFi6v
Rx4ub0QeLm/SniMPl7ciD5e3I9fOm3eWbuHybuThslm6hptm3vZweW/pGm7h
Hi7XYvtw0zxHeri8v3QNt3APlw9i+3ALd+1z7sOla7iFe7h8FNuHW7iHy8ex
fbhpntM9XD5ZuoZbuIfLp7F9uIV7uHwW24dbuIfL57TUpaqZZw0PI9vjdp1+
X9DiiutX9DO/wfZ4+pr/f0l/XHHBDU/+vv1x4XfKuPzdyvE03KM9bWe/L5fb
eVwtzqtjx+H0uzFOzf+Py/+Pnsf1ZT+Pw/M8HXec96wdP9qRdojWcXU/9vM4
mv2x18XzPv0Ont2v43djeXwDPl1X7H0wmuOGHb/J/XGfdnM8u73jdnN5vAP2
Oteby+Md7e/1vbk83snc622OZ/fn9b+1PN7h1vJ4qznzdjTHzZznwmSOuznP
ndnc59Btcp5rA/Y5WLHPyRH7XG3meDLnOd3dH579PevAN/THA7auVGzdGbF1
qtkfT+6POtftj2f3Zx39lv54wNbhiq3To6aON7en7k/muJvz3jBr3zO+o8UD
9j2lmuPRnPecZo4nc96TujmezX3P+p4WD9j3tGqOR3Pe85pmfCf7O/7Y8Z61
dfQHfsf7D1unK/Z+G7H3WzPn/prcn/ef++N+ms29/36k9f7DvvdU7P02Yt+j
mv09f/t7/vb3/O3v/fcT/b3/sO+JFTseo7nnj0/zz9zzd//OP/fn+f9M7vnj
0/zDjsdof+cfdjwm+3v+9nf+2d/z/4X+nj8+zT9zxmPEp/ln7vwzd/5p55/9
nX93aJ1/+DT/zJ1/5s4/c+efufPP3Pln7vzb0uIVdv4N5nhtzvyr5nhjznfa
aI634WZ/vvt25ngy57txb457+GD/q2ftbI6P5n7H/rr0CvvdO5jzXbwOV/vj
jeY7ewxvNd/lLbzTfMdP4b3mu79r1gUO4VmzjnAMl99oWXdYhQfNOsU6XDXr
GpvwqFkH2YZbeKdZR5nCe826Sw8fwrNm3eYYLr/Tsl6zCg/htWa9poY34VGz
XrMNt/BOsz4zhffhHj5o1mvm8DFc/lh6pVmvGcLrcNWsx2zCY3gbbuGdZn1m
Cu/DPXwIz5r1mGO4/Ln0KjyE1/rcWVvDm/AY3oZbeKd5/kzY583eHPfwQfO8
mTXPl2O4/MX+qS8rTT0ZsPVlbU49qeZ4Y049Gc3x1px60sI7++PJnPqyN8fd
nHpyMMezOfXkaO46499Lr7TvA9j6vzb3/UhT7zf2p96P5nhrTr1v5nhnzvWY
zPHenOvRNeN/sL/13pzxP5pb//9ZeoVP9d/c+m9u/Te3/ptb/82t/+aMdzO3
/ocn+1v/za3/5lfP2kN4tj8+mlv//z35P7dbplM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, Automatic},
  Frame->True,
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.4856941180718822`*^9, 3.485694130293523*^9}, 
   3.486818137970181*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"inDegree", "/@", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "13"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4856824620217953`*^9, 3.485682470940015*^9}, 
   3.4856825761420193`*^9, {3.485694188546192*^9, 3.485694205967502*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14", ",", "12", ",", "9", ",", "13", ",", "10", ",", "11", ",", "13", ",", 
   "11", ",", "15", ",", "14", ",", "9", ",", "15", ",", "7"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.4856824718036222`*^9, 3.48568257934695*^9, {3.485694183559003*^9, 
   3.485694206489093*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinput", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", 
     RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Max", "@", 
       RowBox[{
       "xinput", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ")"}], "/", "5"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<cell with 8 inputs (Leogang, fill: lowest local bin)\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinput", "\[LeftDoubleBracket]", 
    RowBox[{"7", ",", 
     RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Max", "@", 
       RowBox[{
       "xinput", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}], 
      ")"}], "/", "5"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<cell with 17 inputs (Leogang, fill: lowest local bin)\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Mean", "@", 
    RowBox[{"xinput", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Max", "@", 
       RowBox[{"Mean", "@", "xinput"}]}], ")"}], "/", "4"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<avg. activity (Leogang, fill: lowest global bin)\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.485682493835227*^9, 3.485682531056034*^9}, {
  3.485682760089768*^9, 3.485682766993819*^9}, {3.4856828509583063`*^9, 
  3.485682867315425*^9}, {3.4856829929968767`*^9, 3.485683157067782*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd3VFspGtdx/GRNLEmvRhiLxrTi2FtTDWNjlK1SPG8rAv2SPUMUD1VKw7r
AoNWzwgVqhYYpEqFggMWKFA8Y1xNL3oxMRtTzGrGZC9KXONcbGITN2ES96Ix
ezHBJtZkY+TQ73eO89ubN5/z+/d5Z9533vd53ud9Z87rbr/0jve8plQq/c93
l0qvLK//DZ8rjf8rxjkZLoenwzPh2XAlfCM8F/6B8Hz4h8IL4R8OV8M/Gv6x
8OvDi+EfD/9E+CfDS+E3hH8q/MbwcvhN4Z8uxtt5rhhfTzHulvZ1vXncLe37
uDnulvZ9/8y4W+HSLZZst1a49BaWbOdWuPTWyLX76WfH3dLu15Vxt8Kl51ny
uWiFSz8XufZz9bZxt8KlVZZ8Llvh0s9fL4saOS7h0i/w319giUsvxDLrsp1c
D6+jZY575r6Pt7PEBXY7tDTbrWe92/Ed5Gz3ArtfWuGe9e7Hd7LEBfZz0DLH
PXM/R2sscYH9HLbCPev9nP4iOZ/rAvu5b5nf5O/DpV9iiQvscdYK96z3OHyR
nOO2CLc0r7v34vj7LK3z39kuBXa7tbDbuWe9++WX+Ttc4NF+xX4Oetb7OfgV
/jufqwL7uWthP5c9PPrc/ipLtkuh383f4/pv8/e4t0ndBn+HC9z5Lf4eV3AP
t36Tv/81lrjArfezNMc98wb//V0scYFb72Npjnu4817++6/z+nCBe+/h73GB
e3hwh7+vXy/ruIJLuMCd36AOF7iFB7epwy3cwxU8wD32j/upzrIS/71493g7
1vk6Wtb7Ot3vbgf/nu02sF23K6/L/eTrdL8W5uz3urmfA+znroP9nPbMsdvJ
46DEdvS4qWCPM7ezx2Xd3OPaHLufPE/0zPEAj8477GfPUxU/F7gw53zh52R0
nsSePzrWe76wPeznbnT+4HPp+aOCPX/4ufX8UbfefsXPNeeDjvWeL6zHA9v3
/OFxRL/ocWQ/Wpjjujn9ZUvTP46OS/tLc/rHgbn9p8c5/WUFO64ozOkv6+Z4
dJ6gf+yY21+a0z8OzO0/Oe/YX1Y8L+HCnP6xHh6dx3DH3P7SHA/MHQe+f9wV
bP9ZmN9k/ea4Fe5Yb39pjgdhz9v2lxXP6/an4bpmHD3qBxhnd8I9zbh8EC7R
rziOt59xnF+E65rxfCtsv+V4vhceaMf3m+OuaMbzRbgebmnG853wqJ9lPD8I
l+iXHb9XwkXYfnw0ng93wj3NeH4QLv0OS8bvlXARrmvH8+FOuBceaMf3L427
Ei4017F17PHSMvf8Z875rKc5fw2s9zqhSc75rIy9HqiYcz6rmuNCcz6rWc/5
q26Om+aev8xx29zzmTnumnP+6pnjvjnnr0F4aL3Xib9LzvmrjD2fVcw5f1XN
cRGuWc/+qZvjpvlNluG29bhjzvmqa+75Ldy3nvPVwBwPw6UPsOR8Vg5XNOez
qub8VWj3P7b/r2Ovy5p4dB1nPW7bHu5YT3/ftT2vJ6zHfevt763HQ+vt/z/I
+jleyng0HtAcL1XrvV42xzVzjo+6OW6as71amuOjbT3umHN8dM29njbn+Oib
44E5x8cwXNpiict4NB4wx1Vzr5fNcc2c46FujpvhlvUcH21z3DG/eb3shnvW
4765/b05HoZLv0c9x0MZe3xUwlXN8VGEa5rjpa45Xprhlqb/b4c7mv6/G+5p
+v9+eKDp/4fh0odY0v+XwxVNf18NF5r+vhaua/r7ZrgVbmv6+064q+3fw/3w
QNPfD8OlD4+7rB0PhKvhQtO/18L1cFM73xduhzua/r8b7oX74QH2+BqaO/7e
Jr95vSxjj6dKuGo9x09hjmvhuvUcP01z56fCbc3x1NEcT91wT3M89cMDzfE0
DJd+nyXHUzlc0RxPVc3xU4RrmuOnHm6GW5rjqR3uaI6nbrinOX764UF4qJ0/
/4NxlzXHTyVcDRea46cWroeb2vnycDvc0Rw/3XAv3NccP4PwMFz6Q5YcL+Vw
JVwNF5r7TrVwPdwMtzT3sdrhTrgb7mnui/XDg/AwXNoZd1lz360SroaLcC1c
1zeul81wS3O+aIc7mvFVFzu+6pnjvrnzLeZ4aO59mo+wxGXseKtijqvm3q8w
xzVzxlN1c9w09/6EOW6bO59ijrvhnvWMp/rmzreYe/439/z/0XGXsf1BxRxX
zT3/h2vWe/439/wfblnv+V97/g93tef/cF97/tee/8Olj/E63P/Yz0PF3P1v
jgtz9785rpu7/81xy9z9b4475u5/c/e/ufs/PLAeD83d/y2WeBKPxgPhGetx
xZz9PR+uWo+XzJ1fC69Yj2ua/b8ermv2fyPc1HwetjX7vxXe0/T/7fChdr4t
fKwZD3TDp5r+vxc+0/T//fC5pv8fhC/CQ03/fxUufZwl/f9kuIy9DzKjmcet
YOeZ581x1Zx57yXsPHqBnZdfwc7r13w9eB17n6Fue6yvYXu034z1bdue8/Kx
vj3sfYi2r5/1Hfr+cMf1cV/l2PZw1/bwqe3dZunrw2e+Ptz3/XLf6tz144Hr
5/7XhfV4aD2+cv3cHyv9ETmexN53LGPvU86Ye78Me1903vZw1Zz7Y0vmuLA9
7o+tuD5cM+f+2Lo5rptzf6xhjpvm3B/bNvf+ma+P+2F7vj7cNud+2KE57tge
PnZ93B/rmuNT2/P+mO3hM+tx3/aYDzu3Hg9sj/mvC+vx0PbwlfXOf32CejyJ
nR8rmzMfNmPu/Jg582PzmvFa1Xq8ZO78sTleMXc+0Ryvmzu/bI4b5vTPTXO8
be78oznew27PtvX40HrcsZ7tdRzbsxvb8zS2Zy+251lsz35sz/PYnoPYnhex
PYexPa9ie5Z2ydl+k3g0HjZn+82YOz42Z7wzb46r5ox3lsx9Xsec8c6KOa6Z
M95ZN/d+pDnjm0a4aT3eNvf+iTneM795vWyHD63HHXPGN8fhrvX41JzxTS98
Zj3ua8Y75+GBZrxzoRnvDMNX2vHvH497UjsfEp7RjHcq4XnNeKcaXtKMd4rw
ima8Uwuva+cXww3tfGN4O9zSjHf2wm3NfMdhuBM+1sx3dMOn4Z5mvuMs3A+f
a+8nhi/CQ818x1W49CfjngyXNfMdM+FKeF4zv1ENL4WL8IpmfqMWXg/Xww3N
fEYzvB1uhffCbc18xmG4Ez4Od8On+sb1shc+097PC5/j0f09c3wRHmrOF1fh
0idZcv6Y1JwvyuEZ7fMK4XnN+aIaXtKcL4rwinY+NbyunV8NNzTni2Z4W/s8
cnhPez8ifBjuYPuv43DXenxq7vW7OT4z93reHJ+HB9bTf12YO99jfvN6eRUu
7WHGG5PY67cy9npqBns9VTHnemne9nAVez21hL1+K1wfXrE9rpdqrg+vY5+b
q9ve7etlw/Zw0/a4Xtq23ucErcd71nO91Pb94EPrfd4Qez11bI67/j3XT6e+
ftyznuupM9vj+qlvjs9tj+unge3hC3Oun4bm+Mrc5w//lCWexF5Plc3xjDnX
TxVzPG/O9VMVez21hL2eKszxijnXSzXbw+uuz+cRzbleatiezxvYHuP7besd
/9ue43/rHf9b7/jfesf/1jv+t97xv/WO/80d/5s7/teO/613/G/u+N/c8b+5
439zx//mjv8/Re74H4/G/9rxv/WM7yvheesd/5s7/jd3/G/O9lzBPt9Rw27f
detx3XrcMGd7Nl0f3jb3+xDmeM+c7dvWbM9D633e05zteWyOu7F9T2P79szZ
vmexvfuxfc9j+w5i+17E9h2a0/9cmfv806fJ6X8msf1ROTxjPf1PxRzPm9P/
VM3xUriw/ub1cgX7HHgN+9zlOva5zjr2OdGGOfOTTdvnucdt7HOYrWh/z5z2
2ub40Jz2O+b42Jz+s2uOT83pP3u+Pnzm9sF9c/rPc7cPHvh+6T8v3B546Pro
L69sz+fA92kPT2LnJ8vY+ckZ7PxkBdufzmP70yq2P12y3u8RWI9XXD/9Z80c
r2P707qvBzfM6U+btkf/uW17Pr9vTv+5Z47btkf/eej6cMec/vPYHHfN6T9P
zf0ejTn955k57vv66D/PfX0+z29O/3lhjoe2h69cn9//+QxLPImdnyx/Zvz9
zVjv9xXMeT/z5rhqe7yfJez3FQpz3s+KOa6Z8/rXzXHd9eGGr4f304z3tx3v
r2V7eM963LY9xgeH1vt8ou3RXx1b7/OK1uNT6/1+gvX4zHrcN6f/Ovf14YE5
/deFOR5q+rMr6/2e4WdZ4klsf1Y2xzPm3h81x/Pm3i81x0vm3j83xyvm9F81
c7xuTv9VN8cNc/qrpjneDresp//aM8dtc/qrQ3OfTwwfW3/zetk1x6fmPr8b
PrPe639zrufPwwPrvf7XXN8Pw1fa7wX/2bgntdf/muv7mXBFc30/H65qru+X
woXm+n4lXNNc36+H65rr+0a4qbm+3w63wnva6//wofb5xPBxuKuZHzwN9zTz
gWfhfvhcMx84CF+Eh5r5wKtwqT3uCe18YHgqXA5Pa+cLw7Phimb+by48H14I
VzXzf4vhpfByuAjf0sz/rYRXw7Xwmma+bz28Ea6H74Qb4U1943rZDG+Ft8M7
4Zbmdxh2w3vh/XA7fBA+DB9pfgeiE74bPg6fhLvhe+HT8H3N71L0wg8058uz
8EPt80bhR5rz57nmfPk4PMD2p0/M8YU5/edTczw0p/+8NMdX5vSfz8x9/v9z
5PSfE9j+dNKc/nLK3OtDc/rLac34ZQZ7PTSL/Z5cxfbwnH/P9da8OV4w53qr
ao4XzVnfEvZ7lcuu3+dPzPEt7PdGV7DfQ131/XB9VXN9eM3Xg9ddH9dXG7bn
/KXt3b5e3rE93PD14U1fH9dXTez3ordcv/Od1nN9tWO935+2fbzr+rne2vPv
ub7a9/XjtjnXWweuHx/aHtdbR+Z+z972uN66a3tcXx2b4xNzr6/M8T1zr7fM
8X1zrj965viBOdcfZ+b4oa8f931/XH88Msfntsf1x2PbwwNzrjee2B6+sD38
1HquP4a2hy+tx1e2x/XHM+v9/YXPs8QTePQ8CPZ6ZMp6nw/RXI9M+/dcf8yY
41lzv19ojuc01yPz1nP9sWCOq+acLxfN8ZI558tlc5/fNOd8ecvc6xFzzper
5l6fmHO+XDPH6+acLzfCdevxndj+jdj+m7H9m7H9t2L7b8f234nt34rtvxvb
fy+2/35s/3Zs/4PY/oex/Y9i+3di+9+N7X8c2/8ktn83tv+92P6n4fux/Xux
/R+Y05+dmeOH5lzv9cOPrMfn5jevl4/N8SD8xHqu/y7M8dPYf0Ps/N4ldn70
ys8Pfmbu9/L/nBxPYJ/nnMR+z30K21+XzWl/Gjs/OoOdH531731+1L9nfXPm
Pk9qTv+8gO2vq9jffVj0/Xi/0fdDf7zs6/H+o+vDt2yP7bni+vCq7d2+XtZs
D6/ZHl63nv54w3p/x8R6fMf10x83rMeb1uOm24f+esv10T9vuz3wjvX+Do3t
4V3r6Z/3bI/+ed/c+VFz+ucDc+dLzemfj8xxx5z++a45Pjanfz4xx11z+uN7
5vjUnP74vu8f93z/+IE5/fOZ7eGHtufzmeb4ke3hc9ujP35svc9vWo+fWO/z
nNbjp67f7zNbjy/N2X9XmuP1mZ8nfwfhgNfB7zJMYH/3YRL7uxJT2N+pKJvT
/jT2/DCDPT/MmuOKOeeDOXM8b875YMH1+3y56+d8sGju8+bY8fyy78/fhfH9
e/y7Pp9H8PXgVdfn8wm2h9ds7/b1ct328IavD9d9fR7/2PNDw3q8ab3Hv/V4
y3q87fo5P+z49/7OlK8f75pzPtjz/eN92+Pz1TbHB7bH+eHQ9jgfHJl7/8Sc
88Fdc++nmHM+ODHHXXPOB/fM8ak554P75v4+kq8fP/D9cT44M8cPbY/zQd/2
8CNzj3/bw49tz99Dst7j3/bwhfX4qe35fLf1+NJ6n/e2nvPDM+t9/vsLLPGE
Zjw5iR1PTpnjsjnjkWlzPKMZT85az/ixYo7nzL2fYI4XzL2/YI4XzRk/Lpnj
ZXOfPzDHt8x9Htkcr4Zr1jN+XDP3eWVzxo8b5v4+gjnjxTvhhvV40/zm9bJp
jrfC29Yzftwx9/cFw7vWcz9hzxzvh9ua+bEDzXzYYfhIMz/WCd/VzI8dh0+0
v4eguZ9wL3yquZ9wP9zT3E94ED7T3E94GO6HH2nuJ5yHH2u/nx1+orl/cBF+
Gh5q7idchq/Cz7S/f/DFcU9o7h9MhqfCZc39g+nwTHg2XNHcP5gLz4cXtN/H
Di+Gl8LL2uePw7fCK+FV7fPJ4bXwenhDc7+gHr4TboQ3w03N/YGt8HZ4J9wK
7+ob18u98H64HT4IH4aPNPcDOuG74ePwSbgbvoftn0+xz9vcxz6/2vPv8QPs
8zZn2OdtHmKfX+1jn7d55PoYD57bHn5se3jg6719vXzi68MXvj781PUzHhy6
fnzp+v2+n/X4mfW49CXWz/hwAo++D4h93mYK+7xN2XrGh9O2x3hwxhzPmjM+
rNgennN9jA/nzfGCOePDqjleNGd8uGSOl819/sQc3zL3eRRfP1719TMerJnj
NXOfV7U9vOH6fH7VesaDd2zP51nNGf9t2h5uWo+3rGf8t2093nH9/n6m9Yz/
dq3He9bjfXPGh21zfGDO+PBQMx48sh53zBkf3jXHx+aMD0/Mfb7SnPHhPXOf
tzRnfHjf3N/PMmd8+MAcn5kzPnxo7u/NmTMefGSOz80ZDz42xwNzxoNPwhfW
46fmPt9vji/Nb14vr8LPrMelQ3LGfxPhSez4cMrc38sKT1uPZzTjw9lwRTM+
nAvPa8aHC5rxYDW8qP2+SXhZ+/xJ+Jb2eZTwqmZ8WAuvab+vFt7Qfn8tfCfc
0IwPN8NNzXhwK7ytGf/thFvhXc14cC+8H25rxoMH4cPwkWb81wnfDR9rxn8n
4W74XvhUM/677+eV46Vnjh+Ez6y/eb18aI774Udx/JzH8fM4jpdB+EkcPxfh
p3H8DON4uQxfxfHzLFz6MkuOnwnN8TIZntIcL+XwtOZ4mQnPan9fLjynOV7m
wwvhquZ4WQwvaY6X5XChOV5uhVfCq5rjpRZe0xwf6+GNcF1zfNwJN8Kb2t+T
C2+FtzXHw064Fd4N72mOn/1wO3wQPtRcPx2FO+G74WPN9dNJuBu+Fz7VXC/d
D/fCD8Jn4Yea66V++FH4PPw4PNA3rpdPwhfhp+Fh+DJ8pbk+ehYufWXcE+HJ
8FS4rHm+ajo8E54NV8Jz4fnwQriqeX5rMbwUXg4X4VvhlfBquBZe09PXy/Xw
RrgevhNuhDfDzfBWeDu8E27p8vVyN7wX3g+3wwfhw/BRuBO+Gz4On4S74Xvh
U83/t+p+uBd+ED4LPwz3w4/C5+HH4UH4Sfgi/FT7e2bY+0+X5sxnXGHvjz/D
o//Pwlevl94fn8DeH5/EzmdMYeczytj5jGnbu329nLE9PItH3x/CzmfMYecz
5q3HC9Yzf1G1Hi9a7/eNzJnPWPb1MX9RWI9v+f6Yz1ixnvmLVdvDNXPmL9bM
8bo58xcbrg/XXR/zF3fMccOc+YtNc3/fyJz5iy3X7+8duX7mL3bMccuc+Ytd
c7zn+vC+62P+om2OD2yP+YtD28NH1uOO7TF/cdd6fGx7zFecWO/3a6zH96z3
+7bx/u/H++/5erz/Z/ve/4v3/zDef9/2vP8X7//ceu//xfsfWO/9v3j/F9Z7
/y/e/zDe/2W8/yvrvf9nvff/jsiZv5nAo/t/5t7/M/f+n7n3/zTzNzPWe//P
3Pt/5t7/M/f+n7n3/8y9/2fu/T9z7/+Ze//P3Pt/5t7/M/f+n7n3/8z9vfPw
mvXe/zP3/p+59//Mvf8Xbljv/T/zm9fLpjneCm9b7/0/c+//mXN9uRves977
f7F/27F/D2L/Hsb+PYr92Yn9eTf253Hsz5PYn93Yn/fCp7F/78f+7cX+fRD7
8yz258PYn/3Yn4/C57E/H8f+HMT+fBK+iP35NPbnMHwZ+/cq9uezcOlrLPGE
Zn5hMjylmV8oa+YTpsMzmvHKbLiimV+YC89r5hcWwlXN/MJieEkzv7AcLjTz
CbfCK5r5hNVwTTOfsBZeD29o5hPq4Tua+YRGeDPc1MwnbIW3wzva398O74b3
NPMJ++F2+EAzf3AYPsKO9zqa57nuYp/vOsb+fugJ9v/L1TVnPHsP+/8JO3X9
+D4e/X/LXB9+YHuMZ89sDz/EPt/Vtz38yNeHz63n/T623t/vdP34iev39zyt
x0+t9/c9zRnfXvp+8ZWvh/HtM9v3/0v4F+R4Avt81yT2+a4pc8a3ZXM8bXuM
b2ewz3fNmvv9cXPGs3Pmfp/cnPHsgjmuun686Ovz92bM8bK5vz9je/iW62M8
t2KOV23P36exPcZza+Z43fYYv23YHq5bj+9Yz3iuYT3etB43XT/juS3r8bb1
eMd6/z+wmvHcrvX+Hoo547t9c38fxdz+X9v/W2//b27/b47vmtv/m+MTc/t/
c3zP3P7f3P7f3P4//MB6fGZu/+/+8fv5sf0fxfY/xz4v8Nh6no8duD78BPt7
IxfY5+mfmuOhf48vbZ/z55U5fmbu/4fw5eulz8tOYOcLJrHPy05h5wvK2PmC
aezzsjO2x/lz1vXhiu3dvl7O2R6etz28YL2/L2I9XrQeL7l+zpfL1vv7I9bX
i3/973f+x1//+2rx3u/8e774l4ff/rf/9pFfuFP5h+defHHk7yze+r6Rv/Gh
f3z5+156aeTXv/Lvg82R//kv3/J3//WmD4znf/XBcX91Z9zf+5GR3/jNFz7z
pf/96Hj+/R8b+eXL51++/J6Pj/yVL3/73/s/MfKtV/41PzGev3Z33M8+Of7+
pz41nr8h/E+fGn//b/70eP6Dnx35O9v3m+3x9i9e9eu6H2h87rWfG8+XPj/y
h1/59+7Pj+eHr/pvvvqg0v3PyBe+MPJ3ff3fNlb+9ovj+emXRl79+sHbvv70
K/H3RyO/6++fn3rNp4/G886r/taNH/nWjS9/bTz/9vns/3v1G6/6+nM3fG7M
3/486v8DGnmNjQ==
   "], {{
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[{{2015, 2014, 622}}], 
        PolygonBox[{{2019, 2018, 834, 835, 836, 837, 838, 839}}], 
        PolygonBox[{{2039, 2038, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 
         1969, 1970}}], 
        PolygonBox[{{2025, 2024, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 
         1090, 1091, 1092}, {2027, 2026, 1167, 1168, 1169, 1170, 1171, 1172, 
         1173, 1174, 1175, 1176}}], 
        PolygonBox[{{2021, 2020, 857, 858, 859, 860, 861, 862, 863, 864, 865, 
         866, 867, 868, 869, 870, 871, 872}}], 
        PolygonBox[{{2029, 2028, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 
         1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 
         1209, 1210}}], 
        PolygonBox[{{2003, 2002, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
         82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93}, {2035, 2034, 1804, 
         1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 
         1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826}}], 
        PolygonBox[{{2007, 2006, 264, 265, 266, 267, 268, 269, 270, 271, 272, 
         273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286,
          287, 288, 289, 290, 291}}], 
        PolygonBox[{{2011, 2010, 466, 467, 468, 469, 470, 471, 472, 473, 474, 
         475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
          489, 490, 491, 492, 493, 494, 495}}], 
        PolygonBox[{{2013, 2012, 499, 500, 501, 502, 503, 504, 505, 506, 507, 
         508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521,
          522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 
         535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545}}], 
        PolygonBox[{{2001, 2040, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
         14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
         31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
         48, 49, 50, 51, 52, 53, 54, 55, 56, 57}}], 
        PolygonBox[{{2037, 2036, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 
         1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 
         1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 
         1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 
         1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 
         1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894}}], 
        PolygonBox[{{2005, 2004, 187, 188, 189, 190, 191, 192, 193, 194, 195, 
         196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
          210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 
         223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
          237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 
         250, 251}}], PolygonBox[CompressedData["
1:eJwNwwVOAlAAANCvm/Mc3sdExC5AxQIDuzuwMbE7zyZX4L3tVcUzkXR5CKHM
hMXKEP6trgihxlrrrLfBiI1GbTJmsy222ma7HXbaZbc99ho3YdI++x0w5aBD
DjviqGkzjjnuhJNmnXLaGWedc94FF11y2RVXXXPdDTfdctsdd91z35wHHnrk
sSeeembecy+89Mprbyx46533Pvjok8+++Oqb73746Zff/vjrnyUVVzTl
         "]], 
        PolygonBox[CompressedData["
1:eJwNz1NCRAEAAMBXu7XZ9mYb9+gIHaB+OmO27Tbbbj7mABMdGhkcjg+CII5R
ziJBEGMsFATjTDDJFNPMMMsc8yywyBLLrLDKGutssMkW2+ywyx77HHDIEcec
cEqMM8654JIrrrnhljvueeCRJ5554ZU33vngky+++eGXP4KwO/GECJNAIhGS
SCaFVNJIJ4NMssgmh1zyyKeAQooopoRSyiingkqqiFJNDbXUUU8DjTTRTAut
tNFOB5100U0PvfTRzwD/CNc+6A==
         "]], PolygonBox[CompressedData["
1:eJwNyNcilgEAANCPG8/hlTyCB+ARXNiyZaVkyxYyK5RR9h5Zv73KSiLCuTg3
JzI6NiomPAiCMOLYjgiCEPEygUSSSCaFVNJ4QToZZJJFNjnkksdL8imgkCKK
eUUJr3lDKW8po5wKKqmimhpqeUcd9TTQSBPNtNDKe9pop4MPdNJFNz300sdH
PvGZfgYY5AtfGWKYEUb5xnfGGGeCSaaYZoZZ5phngUWWWGaFVX6wxjobbLJF
iG122GWPfQ445IhjTjjlJ78445wLLrniN9f84Ya/3HLHP+554D+PPPEM3t5j
Ow==
         "]], PolygonBox[CompressedData["
1:eJwNyNciUAEAANCrF9/hO0TDyEgyMkpmJSNCKrsdKjPKyJaVIplFMqI/yN84
D+flhBVWplacCYIghG5OQoPgP+HiLBFEco7zXOAiUUQTQyyXiCOeBBK5TBJX
SOYqKaSSRjrXyCCTLLK5zg1yuEkueeRTQCFF3OI2dyjmLiWUUkY596igkvtU
UU0ND6jlIY94TB31NNBIE8208ISnPOM5L3jJK17TShvtvOEt7+igky666aGX
9/TRzwc+MsAgQwzziRFGGWOcCSaZYprPzDDLHPMs8IVFvvKNJZb5zgo/WGWN
dTbYZIuf/GKbHX6zyx/22OeAQ/5yxDH/OAWsjE0z
         "]], 
        PolygonBox[CompressedData["
1:eJwNzGdbjgEAgNFHVLbMbLJnRgihjISyQlZW9npfskdkZkbIHlkheyZ+hJ9C
VmacD+e6v91xOeHMUEQQBDX4QGV0EHziY6RSyWe+8JVvfKeKH/zkF7/5w1+q
+UcQ5UsENalFJFFEU5s61KUe9WlAQxoRQ2Oa0JRmNKcFsbSkFa1pQ1va0Z4O
dCSOTnSmC13pRnd60JNe9KYPfYmnH/0ZwEASGMRghpDIUIYxnCRGMJJRJJPC
aMYwlnGkMp40JjCRSaSTwWSmMJVpTCeTGcxkFlnMZg5zmcd8slnAQhaxmCXk
sJRlLGcFK1nFatawlnWsJ0SYDWwkl01sZgtb2cZ2drCTXewmjz3sJZ997OcA
BznEYQo4wlGOcZwTnKSQU5ymiDOc5RzFnOcCF7nEZa5wlWtc5wYl3OQWt7nD
XUq5x30eUMZDHvGYJzzlGc95wUte8Zo3lPOWCt7xnv8YRl5C
         "]]}]}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{2011, 2012, 498, 497, 496}, {2023, 2024, 1082, 1081, 
         1080}}], 
        PolygonBox[{{2035, 2036, 1832, 1831, 1830, 1829, 1828, 1827}}], 
        PolygonBox[{{2009, 2010, 465, 464, 463, 462, 461, 460, 459, 458}}], 
        PolygonBox[{{2005, 2006, 263, 262, 261, 260, 259, 258, 257, 256, 255, 
         254, 253, 252}}], 
        PolygonBox[{{2001, 2002, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 
         59, 58}}], 
        PolygonBox[{{2027, 2028, 1190, 1189, 1188, 1187, 1186, 1185, 1184, 
         1183, 1182, 1181, 1180, 1179, 1178, 1177}}], 
        PolygonBox[{{2019, 2020, 856, 855, 854, 853, 852, 851, 850, 849, 848, 
         847, 846, 845, 844, 843, 842, 841, 840}}], 
        PolygonBox[{{2015, 2016, 642, 641, 640, 639, 638, 637, 636, 635, 634, 
         633, 632, 631, 630, 629, 628, 627, 626, 625, 624, 623}}], 
        PolygonBox[{{2007, 2008, 314, 313, 312, 311, 310, 309, 308, 307, 306, 
         305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 
         292}}], PolygonBox[{{2039, 2041, 2000, 1999, 1998, 1997, 1996, 1995, 
         1994, 1993, 1992, 1991, 1990, 1989, 1988, 1987, 1986, 1985, 1984, 
         1983, 1982, 1981, 1980, 1979, 1978, 1977, 1976, 1975, 1974, 1973, 
         1972, 1971}}], PolygonBox[CompressedData["
1:eJwV0Gk2FWAAANCv9zxzylCkIpmpDEkpGc6xAkuwAFZmnodSEYpKIYrIiwZJ
luD6cTdwi7p6OrsjIYRzHewnhRCnPRpCG6208JRmnvCYJh7xkEYe0MB96qmj
lhrucZc7VFNFJRWUU0YpJRRzmyJuUUgBN7nBdfK5Rh65XOUKOWSTRSaXuUQG
F0knjVRSSCaJRGIkECXCBQL/XZxyEgvhH8f85Yg//OYXPznkgB/E2ec7e+zy
jR22+coXttjkMxuss8YnPrLKB97zjhWWecsbllhkgdfMM8crXvKCWZ7zjBmm
mWKSCcYZY5QRhhlikAH66aOXMwmVRSU=
         "]], 
        PolygonBox[{{2037, 2038, 1961, 1960, 1959, 1958, 1957, 1956, 1955, 
         1954, 1953, 1952, 1951, 1950, 1949, 1948, 1947, 1946, 1945, 1944, 
         1943, 1942, 1941, 1940, 1939, 1938, 1937, 1936, 1935, 1934, 1933, 
         1932, 1931, 1930, 1929, 1928, 1927, 1926, 1925, 1924, 1923, 1922, 
         1921, 1920, 1919, 1918, 1917, 1916, 1915, 1914, 1913, 1912, 1911, 
         1910, 1909, 1908, 1907, 1906, 1905, 1904, 1903, 1902, 1901, 1900, 
         1899, 1898, 1897, 1896, 1895}}], PolygonBox[CompressedData["
1:eJwNwwkyAlAAANCvacY5HKaypCiyRBFaaKNUFJI1yT1zit6beWulVqYZCSGs
mHSxGsK/f9EQ5v4688ep33756Yfvvjnx1bEvPvvkyKGPPjiwb897u3a889a2
LZs2rHvjtTWrVix75aUXljz3zKIFTz0x77FHHnpgzn33zJpx1x3Tptw26Zab
brhuwrgxl0+2I4o=
         "]], PolygonBox[CompressedData["
1:eJwNyFkiQlEAANDLT+tApgqhpJA0mAsvQyTDM1ey4qyl83F+zkz8F42mQwhT
tBgnQvjnVw4Z0OeHb7745IN33oh55YVnnujxSJcH7ulwxy03XNMm4opLLmjR
5JwzTjnhmCMOaVCnRpUDKuxTZo9ddihRZJsCW+TJsckG62RZY5UVMqRJscwS
iywwT5I5ZpkAFOcZnw==
         "]], PolygonBox[CompressedData["
1:eJwNwwk2gmEAAMDvrxQ5hSt1BAfIBS1FFEJla0FElrIVQhEz783C4lImGwsh
RGYcpEIYOm/aOWdNmXTGhHFjRgb/kiFM/fXHiWO//fLTkR++++bQga+++OyT
j/bt+eC9d97a9cZrO155adsLzz2zZdOGdU898dgjD61ZteKB++5Zdtcdty1Z
dMtNC264bt6ca6664rL/C1dA/Q==
         "]], PolygonBox[CompressedData["
1:eJwt0sVRQwEARdE/sKAOWqIA3CXBCRrcXUOABHd3dyqAFqAODjMsTgP3vfTc
cEYoJQiCP1l8pwXBDx+pQfDOG6+88MwTjzxwzx233HDNFZdccM4Zp5xwzBGH
HLDPHrvssM0Wm2ywzhqrrLBMkgRLLLJAnHlizDHLDNNMMckE44wxygjDDDHI
AP300UsP3XTRSQftRGmjlRaaaaKRCA3UU0ctNVRTRSVhQlRQThmllPCp+xe3
drjhmisuueCcM0454ZgjDjlgnz122WGbLTbZYJ01VllhmSQJllhkgTjzxJhj
lhmmmWKSCcYZY5QRhhlikAH66aOXHrrpopMO2onSRistNNNEIxEaqKeOWmqo
popKwoSooJwySimhmCIKKSCfPHLJIfv/85n8AvwjcHI=
         "]], 
        PolygonBox[CompressedData["
1:eJwNw+c2EGAAANDP3rIjspJoKDSsMhLhn0foAXiYHqehJURZqTQR0kBmRcm9
59ySW/29fZEhhAhvuxoXwpo9MSF02+VNO+3whu1et81WW2z2mldtstEG663z
ipe95EVrrbHaC563ynOe9YynrbTCU5Z70jJPWGqJxRZZ6HELzPeYeeZ61Byz
zTLTDNNN84ippphskokmGG+cscYYbZSRRhj8Hx3Cgf/86757/vG3v9x1x223
3HTDn6675qo//O43v7riF5ddctHPLjjvnJ/86Aff+863zvrG175yxpdOO+Wk
E477wueOOeozRxx2yKcO+sTHPvKhDxzwvve86x0PAf54TXU=
         
         "]]}]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
xSxhKct47dzlcgUrWcVq1rCWdaxnAxvZxGa2sJVtbGcHO9nFm0CPQe5hL/vY
zwEOcojDHOEoxzjOCU5yitOc4SznOM8FLnKJy/zFFa5yjevc4Ca3uM0d7nKP
+zzgIY94zBOe8oznvAjUPlDTQG0Cz8Jb3vGeD3zkE5/5wle+8Z0f/OQXf/MP
//IfgQZjEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxCAmsYhNHOISj/gk
ICGJSEwSkpKM5KQgJalITRrSko70ZCAjmchMFrKSjezkICe5yE0e8vI7+chP
AQpSiML8QRGKUozilKAkpShNGd76HJWV5ShPBSpSicpUoSrVqE4NalKL2tSh
LvWoTwMa0ojGNKEpzWhOC1ryJ61oTRva0o72dKAjnehMF7rSje70oCe96E0f
+tKP/gxgIIMYzBCGMozhjGAkoxjNGMYyjvFMYCKTmMwUpjKN6cxgJrOYzRzm
Mo/5LGAhi1jMEpayjOWsYCWrWM0a3pmHtXId69nARjaxmS1sZRvb2cFOdrGb
PexlH/s5wEEOcZgjHOUYxznBSU5xmjOc5RznucBFLnGZv7jCVa5xnRvc5Ba3
ucNd7nGfBzzkEY95wlOe8ZwXvOQVr3nDW96rxbtA8oGPfOIzX/jKN77zg5/8
4m/+4V/+I7DREISgBCM4IQhJKEIThrCEIzwRiEgkIhOFqEQjOjGISSxiE4e4
xCM+CUhIIhKThKQkIzkpSEkqUpOGtKQjPRnISCYyk4WsZCM7OchJLnKTh7z8
Tj7yU4CCFKIwf1CEohSjOCUoSSlKU4aylKM8FahIJSpThapUozo1qEktalOH
utSjPg1oSCMa04SmNKM5LWjJn7SiNW1oSzva04GOdKIzXehKN7rTg570ojd9
6Es/+jOAgQxiMEMYyjCGM4KRjGI0YxjLOMYzgYlMYjJTmMo0pjODmcxiNnOY
yzzms4CFLGIxS1jKMpazgpWsYjVrWMs61rOBjWxiM1vYyja2s4Od7GI3H3xv
9si97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zjPBe4yCUu8xdXuMo1rnODm9zi
Nne4yz3u84CHPOIxT3jKM57zgpe84jVveMs73geei4984jNf+Mo3vvODn/zi
b/7hX/4jsNEYhKAEIzghCEmowF4DYQhLOD4SnghEJBKRiUJUohGdGMQkFrGJ
Q1ziEZ8EJCQRiUkS6CkG+qIkC+w3kIKUpCI1n0lDWtKRngxkJBOZyUJWspGd
HOQkV2DNQJ7AXmRgvUA+8lOAghSicKCPQBGKBtYKFA/sQwZ6CJSiNGUC/wso
R3kqUJFKVKYKValGdWpQM9A/oDZ1qEs96tOAhjSiMU1oSjOa84UWtAz0D2hF
a9rQlna0pwMd6URnutCVbnSnBz3pRW/60Jd+9GcAAxnEYIYwlGEMZwQjGcVo
xjCWcYxnAhOZxGSmMJVpTGcGM5nFbOYwl3nMZwELWcRilrCUZSxnBSv5yipW
s4a1rGM9G9jIplD/32PfzBa2so3t7GAnu9jNHvayj/0c4CCHOMwRjnKM45zg
JKc4zRnOco7zXOB/bNES2g==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->True,
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"cell with 8 inputs (Leogang, fill: lowest local bin)\"", 
    TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.485682506155023*^9, 3.485682531477954*^9}, 
   3.485682767636197*^9, 3.485682868140678*^9, {3.485683018527216*^9, 
   3.485683058638195*^9}, 3.485683096235635*^9, 3.4856831577185497`*^9, 
   3.485694138134117*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"xinput", "\[LeftDoubleBracket]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], "\[RightDoubleBracket]"}], "]"}]], "Input",\

 CellChangeTimes->{{3.485682542420936*^9, 3.485682559046439*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Min", "/@", 
  RowBox[{"xinput", "\[LeftDoubleBracket]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Max", "/@", 
  RowBox[{"xinput", "\[LeftDoubleBracket]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], 
   "\[RightDoubleBracket]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"(", 
    RowBox[{"Max", "/@", 
     RowBox[{"xinput", "\[LeftDoubleBracket]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "7"}], "}"}], "\[RightDoubleBracket]"}]}], ")"}]}], 
  "/", "5"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"N", "@", 
     RowBox[{"Sqrt", "@", 
      RowBox[{"Variance", "@", "#"}]}]}], "&"}], ")"}], "/@", 
  RowBox[{"xinput", "\[LeftDoubleBracket]", 
   RowBox[{"{", 
    RowBox[{"2", ",", "7"}], "}"}], "\[RightDoubleBracket]"}]}]}], "Input",
 CellChangeTimes->{{3.48568259136959*^9, 3.4856826397683897`*^9}, {
  3.4856827122768583`*^9, 3.485682719796247*^9}, {3.485684138679174*^9, 
  3.485684181787568*^9}, {3.485684219241527*^9, 3.4856842229761744`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4856829741730833`*^9, {3.485684154532658*^9, 3.4856841827415667`*^9}, 
   3.4856842244187*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"208", ",", "254"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4856829741730833`*^9, {3.485684154532658*^9, 3.4856841827415667`*^9}, 
   3.485684224421796*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"41.6`", ",", "50.800000000000004`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.4856829741730833`*^9, {3.485684154532658*^9, 3.4856841827415667`*^9}, 
   3.485684224423973*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"27.10297637769029`", ",", "46.91729925237665`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.4856829741730833`*^9, {3.485684154532658*^9, 3.4856841827415667`*^9}, 
   3.4856842268425417`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "@", 
  RowBox[{"Max", "@", 
   RowBox[{"Mean", "@", "xinput"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"%", "/", "4"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Sqrt", "@", 
   RowBox[{"Variance", "@", 
    RowBox[{"Mean", "@", "xinput"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.485682789600445*^9, 3.485682827754702*^9}, {
  3.4856865736977797`*^9, 3.485686592745564*^9}}],

Cell[BoxData["182.37`"], "Output",
 CellChangeTimes->{{3.48568260576322*^9, 3.485682640398761*^9}, {
  3.485682715748062*^9, 3.485682720381505*^9}, {3.4856827965134993`*^9, 
  3.485682828891878*^9}, {3.485686584480257*^9, 3.485686594085438*^9}}],

Cell[BoxData["45.5925`"], "Output",
 CellChangeTimes->{{3.48568260576322*^9, 3.485682640398761*^9}, {
  3.485682715748062*^9, 3.485682720381505*^9}, {3.4856827965134993`*^9, 
  3.485682828891878*^9}, {3.485686584480257*^9, 3.485686594088049*^9}}],

Cell[BoxData["30.961420956282186`"], "Output",
 CellChangeTimes->{{3.48568260576322*^9, 3.485682640398761*^9}, {
  3.485682715748062*^9, 3.485682720381505*^9}, {3.4856827965134993`*^9, 
  3.485682828891878*^9}, {3.485686584480257*^9, 3.485686596559379*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xinputDelta", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"size", "/.", "pars"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"samples", "/.", "xpars"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"ii", "=", "1"}], ",", 
    RowBox[{
     RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
    RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ShowStatus", "[", 
      RowBox[{"\"\<ii = \>\"", "<>", 
       RowBox[{"ToString", "@", "ii"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"tt", "=", "2"}], ",", 
       RowBox[{
        RowBox[{"tt", "\[LessEqual]", "samples"}], "/.", "xpars"}], ",", 
       RowBox[{"tt", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"xinputDelta", "\[LeftDoubleBracket]", 
          RowBox[{"ii", ",", "tt"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"xinput", "\[LeftDoubleBracket]", 
            RowBox[{"ii", ",", "tt"}], "\[RightDoubleBracket]"}], "-", 
           RowBox[{"xinput", "\[LeftDoubleBracket]", 
            RowBox[{"ii", ",", 
             RowBox[{"tt", "-", "1"}]}], "\[RightDoubleBracket]"}]}], "]"}]}],
         ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"ii", ",", "tt"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.485694270875864*^9, 3.485694405709303*^9}, {
  3.4856944361986113`*^9, 3.485694438828442*^9}, {3.485694637935774*^9, 
  3.485694655270697*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.485694834971622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinput", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", 
     RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"Sqrt", "@", 
     RowBox[{"Variance", "@", 
      RowBox[{
      "xinput", "\[LeftDoubleBracket]", "13", "\[RightDoubleBracket]"}]}]}]}],
    ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<cell with 8 inputs (Random, fill: std)\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinput", "\[LeftDoubleBracket]", 
    RowBox[{"7", ",", 
     RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"Sqrt", "@", 
     RowBox[{"Variance", "@", 
      RowBox[{
      "xinput", "\[LeftDoubleBracket]", "12", "\[RightDoubleBracket]"}]}]}]}],
    ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<cell with 17 inputs (Random, fill: std)\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinputDelta", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", 
     RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"Sqrt", "@", 
     RowBox[{"Variance", "@", 
      RowBox[{
      "xinputDelta", "\[LeftDoubleBracket]", "13", 
       "\[RightDoubleBracket]"}]}]}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<cell with 8 inputs (Random, fill: std)\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinputDelta", "\[LeftDoubleBracket]", 
    RowBox[{"7", ",", 
     RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"Sqrt", "@", 
     RowBox[{"Variance", "@", 
      RowBox[{
      "xinputDelta", "\[LeftDoubleBracket]", "12", 
       "\[RightDoubleBracket]"}]}]}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<cell with 17 inputs (Random, fill: std)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.485682493835227*^9, 3.485682531056034*^9}, {
   3.485682760089768*^9, 3.485682766993819*^9}, {3.4856828509583063`*^9, 
   3.485682867315425*^9}, {3.4856829929968767`*^9, 3.485683157067782*^9}, {
   3.485683336722377*^9, 3.485683366643545*^9}, 3.485684101455845*^9, {
   3.485694800269013*^9, 3.485694831637089*^9}, {3.4856954084041653`*^9, 
   3.485695460638361*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd3WFsZGtdx/GJNFCTvhixJFX7YrxUbLCaUYtWKd7jsl6Lt8KARQquMKwL
9kKRAasU6YW5UqVAweFSoEAvzotG+2JJBrMkjaw6LzaxiZs4MRvSkDXOi2oa
s5LRrFjJvhDT73du5nffnHzu79/nzJwz5zzPec6Z2R+9/t43vOP7SqXSf7+o
VPr/5eV/g8dLo/8VoxwPl8OT4anwdLgSfiw8E35ZeDb88vBc+KfC1fBPh38m
/LPh+fArwj8X/vnwQvgXwr8YfmV4Mfyq8C8Vo+08Xoyupxh1U/u6fnnUTe37
uDLqpvZ9v3rUzXDpKku2WzNc+hWWbOdmuPRE5Nr99Kujbmr369Kom+HSa1jy
uWiGS78WufZz9eSom+HSMks+l81w6dcvl0WNHJdw6bX8/9exxKXXxTLrsp1c
D6+jaY675r6P17PEBXY7NDXbrWu92/EN5Gz3ArtfmuGu9e7H32CJC+znoGmO
u+Z+jlZY4gL7OWyGu9b7OX0jOZ/rAvu5b5pf4e/Dpd9kiQvscdYMd633OHwT
OcdtEW5qXnf3TaPvs7TK/2e7FNjt1sRu56717pc383e4wMP9iv0cdK33c/AW
/j+fqwL7uWtiP5ddPPzc/hZLtkuh387f4/p7+HvcXafuGn+HC9x+N3+PK7iL
m+/i73+bJS5w8ymW5rhrvsb/fytLXODm77I0x13cfif//228Plzg7jv4e1zg
Lu7f4O/rl8s6ruASLnD7d6jDBW7i/nXqcBN3cQX3cZf9436qs6zE/y/ePtqO
db6OpvW+Tve728G/Z7v1bdftyutyP/k63a+FOfu9bu7nAPu5a2M/p11z7Hby
OCixHT1uKtjjzO3scVk397g2x+4nzxNdc9zHw/MO+9nzVMXPBS7MOV/4ORme
J7Hnj7b1ni9sD/u5G54/+Fx6/qhgzx9+bj1/1K23X/Fzzfmgbb3nC+tx3/Y9
f3gc0S96HNmPFua4bk5/2dT0j8Pj0v7SnP6xb27/6XFOf1nBjisKc/rLujke
nifoH9vm9pfm9I99c/tPzjv2lxXPS7gwp3+sh4fnMdw2t780x31zx4FPjbqC
7T8L8yus3xw3w23r7S/NcT/sedv+suJ53f40XNeMo4f9AOPsdrirGZf3wyX6
Fcfx9jOO84twXTOeb4bttxzPd8N97fh+fdQVzXi+CNfDTc14vh0e9rOM5/vh
Ev2y4/dKuAjbjw/H8+F2uKsZz/fDpd9jyfi9Ei7Cde14PtwOd8N97fj+vaOu
hAvNdWwde7w0zT3/mXM+62rOX33rvU5okHM+K2OvByrmnM+q5rjQnM9q1nP+
qpvjhrnnL3PcMvd8Zo475py/uua4Z875qx8eWO914vvIOX+Vseezijnnr6o5
LsI169k/dXPcML/CMtyyHrfNOV91zD2/hXvWc77qm+NBuPR+lpzPyuGK5nxW
1Zy/Cu3+x/b/dex1WQMPr+Osxy3bw23r6e87tuf1hPW4Z739vfV4YL39/++z
fo6XMh6OBzTHS9V6r5fNcc2c46NujhvmbK+m5vhoWY/b5hwfHXOvp805Pnrm
uG/O8TEIlzZY4jIejgfMcdXc62VzXDPneKib40a4aT3HR8sct82vXC474a71
uGduf2+OB+HSH1DP8VDGHh+VcFVzfBThmuZ4qWuOl0a4qen/W+G2pv/vhLua
/r8X7mv6/0G49Ics6f/L4Yqmv6+GC01/XwvXNf19I9wMtzT9fTvc0fbv4V64
r+nvB+HSB0Zd1o4HwtVwoenfa+F6uKGd7wu3wm1N/98Jd8O9cB97fA3MHX9v
kl+5XJaxx1MlXLWe46cwx7Vw3XqOn4a581PhluZ4amuOp064qzmeeuG+5nga
hEsfZMnxVA5XNMdTVXP8FOGa5viphxvhpuZ4aoXbmuOpE+5qjp9euB8eaOfP
/2jUZc3xUwlXw4Xm+KmF6+GGdr483Aq3NcdPJ9wN9zTHTz88CJc+xJLjpRyu
hKvhQnPfqRauhxvhpuY+VivcDnfCXc19sV64Hx6ES1ujLmvuu1XC1XARroXr
+rHLZSPc1JwvWuG2ZnzVwY6vuua4Z+58izkemHuf5mmWuIwdb1XMcdXc+xXm
uGbOeKpujhvm3p8wxy1z51PMcSfctZ7xVM/c+RZzz//mnv8/POoytj+omOOq
uef/cM16z//mnv/DTes9/2vP/+GO9vwf7mnP/9rzf7j0EV6H+x/7eaiYu//N
cWHu/jfHdXP3vzlumrv/zXHb3P1v7v43d/+H+9bjgbn7v8kSj+PheCA8ZT2u
mLO/Z8NV6/GCufNr4SXrcU2z/1fDdc3+Xws3NJ+HTc3+b4Z3NP1/K7yvnW8L
H2nGA53wsab/74ZPNP1/L3yq6f/74fPwQNP/X4RLz7Ck/x8Pl7H3QaY087gV
7DzzrDmumjPvvYCdRy+w8/JL2Hn9mq8Hr2LvM9Rtj/Wt2R7tN2J9m7bnvHys
bwd7H6Ll62d9+74/3HZ93Fc5sj3csT18bHvXWfr68ImvD/d8v9y3OnX9uO/6
uf91bj0eWI8vXD/3x0p/TI7Hsfcdy9j7lFPm3i/D3hedtT1cNef+2II5LmyP
+2NLrg/XzLk/tmqO6+bcH1szxw1z7o9tmnv/zNfH/bAdXx9umXM/bN8ct20P
H7k+7o91zPGx7Xl/zPbwifW4Z3vMh51aj/u2x/zXufV4YHv4wnrnvz5KPR7H
zo+VzZkPmzJ3fsyc+bFZzXitaj1eMHf+2BwvmTufaI5XzZ1fNsdr5vTPDXO8
ae78oznewW7PlvV433rctp7tdRTbsxPb8zi2Zze250lsz15sz9PYnv3Ynuex
PQexPS9ie5a2ydl+43g4HjZn+02ZOz42Z7wza46r5ox3Fsx9Xsec8c6SOa6Z
M95ZNfd+pDnjm7Vww3q8ae79E3O8Y37lctkK71uP2+aMb47CHevxsTnjm274
xHrc04x3TsN9zXjnXDPeGYQvtOPfPxn1uHY+JDylGe9UwrOa8U41vKAZ7xTh
Jc14pxZe1c4vhte0843hzXBTM97ZCbc08x374Xb4SDPf0Qkfh7ua+Y6TcC98
qr2fGD4PDzTzHRfh0p+Oejxc1sx3TIUr4VnN/EY1vBAuwkua+Y1aeDVcD69p
5jMa4c1wM7wTbmnmM/bD7fBRuBM+1o9dLrvhE+39vPApHt7fM8fn4YHmfHER
Ln2MJeePcc35ohye0j6vEJ7VnC+q4QXN+aIIL2nnU8Or2vnV8JrmfNEIb2qf
Rw7vaO9HhPfDbWz/dRTuWI+Pzb1+N8cn5l7Pm+PTcN96+q9zc+d7zK9cLi/C
pR3MeGMce/1Wxl5PTWGvpyrmXC/N2h6uYq+nFrDXb4Xrw0u2x/VSzfXhVexz
c3Xbu365XLM93LA9rpc2rfc5QevxjvVcL7V8P3jfep83xF5PHZnjjn/P9dOx
rx93red66sT2uH7qmeNT2+P6qW97+Nyc66eBOb4w9/nDj7PE49jrqbI5njLn
+qlijmfNuX6qYq+nFrDXU4U5XjLneqlme3jV9fk8ojnXS2u25/MGtsf4ftN6
x/+25/jfesf/1jv+t97xv/WO/613/G+9439zx//mjv+143/rHf+bO/43d/xv
7vjf3PG/ueP/T5A7/sfD8b92/G894/tKeNZ6x//mjv/NHf+bsz2XsM931LDb
d9V6XLcer5mzPRuuD2+a+30Ic7xjzvZtabbnvvU+72nO9jwyx53Yvsexfbvm
bN+T2N692L6nsX37sX3PY/sOzOl/Lsx9/umT5PQ/49j+qByesp7+p2KOZ83p
f6rmeCFcWH/lcrmEfQ68hn3uchX7XGcd+5zomjnzkw3b57nHTexzmM1of8ec
9lrmeN+c9tvm+Mic/rNjjo/N6T+7vj584vbBPXP6z1O3D+77fuk/z90eeOD6
6C8vbM/nwHdpD49j5yfL2PnJKez8ZAXbn85i+9Mqtj9dsN7vEViPl1w//WfN
HK9i+9O6rwevmdOfNmyP/nPT9nx+35z+c8cct2yP/nPf9eG2Of3nkTnumNN/
Hpv7PRpz+s8Tc9zz9dF/nvr6fJ7fnP7z3BwPbA9fuD6///MplngcOz9Z/tTo
+5uy3u8rmPN+Zs1x1fZ4PwvY7ysU5ryfJXNcM+f1r5rjuuvDa74e3k8j3t9m
vL+m7eEd63HL9hgf7Fvv84m2R391ZL3PK1qPj633+wnW4xPrcc+c/uvU14f7
5vRf5+Z4oOnPLqz3e4afZonHsf1Z2RxPmXt/1BzPmnu/1BwvmHv/3BwvmdN/
1czxqjn9V90cr5nTXzXM8Wa4aT391445bpnTX+2b+3xi+Mj6K5fLjjk+Nvf5
3fCJ9V7/m3M9fxruW+/1v+b6fhC+0H4v+M9GPa69/tdc30+FK5rr+9lwVXN9
vxAuNNf3S+Ga5vp+NVzXXN+vhRua6/vNcDO8o73+D+9rn08MH4U7mvnB43BX
Mx94Eu6FTzXzgf3weXigmQ+8CJdaox7TzgeGJ8Ll8KR2vjA8Ha5o5v9mwrPh
uXBVM/83H14IL4aL8FXN/N9SeDlcC69o5vtWw9fC9fCN8Fp4XT92uWyEN8Kb
4a1wU/M7DNvhnfBuuBXeC++HDzS/A9EOH4aPwjfDnfCt8HH4tuZ3KbrhO5rz
5Un4rvZ5o/A9zfnzVHO+vB/uY/vTM3N8bk7/+cAcD8zpPx+a4wtz+s9H5j7/
/xly+s8xbH86bk5/OWHu9aE5/eWkZvwyhb0emsZ+T65ie3jGv+d6a9Ycz5lz
vVU1x/PmrG8B+73KRdfv8yfm+Cr2e6NL2O+hLvt+uL6quT684uvBq66P66tr
tuf8pe1dv1zesD285uvD674+rq8a2O9Fb7h+5zut5/pqy3q/P237eNv1c721
499zfbXr68ctc6639lw/3rc9rrcOzP2eve1xvXVoe1xfHZnjm+ZeX5njW+Ze
b5nj2+Zcf3TN8R1zrj9OzPFdXz/u+f64/rhnjk9tj+uP+7aH++Zcb5zZHj63
PfzAeq4/BraHH1qPL2yP649H1vv7C8+yxGN4+DwI9npkwnqfD9Fcj0z691x/
TJnjaXO/X2iOZzTXI7PWc/0xZ46r5pwv583xgjnny0Vzn98053x51dzrEXPO
l8vmXp+Yc75cMcer5pwvr4Xr1uMbsf3XYvuvx/ZvxPbfiO2/Gdt/K7Z/M7b/
dmz/ndj+u7H9W7H992L778f2P4jt347tfxjb/yi2/83Y/p3Y/rdi+x+Hb8f2
78b2v2NOf3Ziju+ac73XC9+zHp+aX7lc3jfH/fCZ9Vz/nZvjB7H/Btj5vYfY
+dELPz/4kbnfy/8sOR7DPs85jv2e+wS2vy6b0/4kdn50Cjs/Ou3f+/yof8/6
Zsx9ntSc/nkO219Xsb/7MO/78X6j74f+eNHX4/1H14ev2h7bc8n14WXbu365
rNkeXrE9vGo9/fE16/0dE+vxDddPf7xmPV63HjfcPvTXG66P/nnT7YG3rPd3
aGwPb1tP/7xje/TPu+bOj5rTP++ZO19qTv98YI7b5vTPh+b4yJz++aY57pjT
H98yx8fm9Me3ff+46/vHd8zpn09sD9+1PZ/PNMf3bA+f2h798X3rfX7Tenxm
vc9zWo8fuH6/z2w9fmjO/rvQHK+P/Dz5Owh7vA5+l2EM+7sP49jflZjA/k5F
2Zz2J7Hnhyns+WHaHFfMOR/MmONZc84Hc67f58tdP+eDeXOfN8eO5xd9f/4u
jO/f49/1+TyCrwcvuz6fT7A9vGJ71y+Xq7aHr/n6cN3X5/GPPT+sWY/Xrff4
tx5vWI83XT/nhy3/3t+Z8vXjbXPOBzu+f7xre3y+WuZ4z/Y4P+zbHueDA3Pv
n5hzPjg0936KOeeDm+a4Y8754JY5PjbnfHDb3N9H8vXjO74/zgcn5viu7XE+
6Nkevmfu8W97+L7t+XtI1nv82x4+tx4/sD2f77YeP7Te572t5/zwyHqf//4c
SzymGU+OY8eTE+a4bM54ZNIcT2nGk9PWM36smOMZc+8nmOM5c+8vmON5c8aP
C+Z40dznD8zxVXOfRzbHy+Ga9YwfV8x9Xtmc8eM1c38fwZzx4o3wmvV43fzK
5bJhjjfCm9Yzftwy9/cFw9vWcz9hxxzvhlua+bE9zXzYfvhAMz/WDh9q5seO
wje1v4eguZ9wK3ysuZ9wO9zV3E+4Ez7R3E+4G+6F72nuJ5yG72u/nx0+09w/
OA8/CA809xMehi/Cj7S/f/D5UY9p7h+MhyfCZc39g8nwVHg6XNHcP5gJz4bn
tN/HDs+HF8KL2uePw1fDS+Fl7fPJ4ZXwavia5n5BPXwjvBZeDzc09wc2wpvh
rXAzvK0fu1zuhHfDrfBeeD98oLkf0A4fho/CN8Od8C1s/3yMfd7mNvb51a5/
j+9gn7c5wT5vcxf7/GoP+7zNPdfHePDU9vB928N9X+/1y+WZrw+f+/rwA9fP
eHDg+vFD1+/3/azHj6zHpS+wfsaHY3j4fUDs8zYT2OdtytYzPpy0PcaDU+Z4
2pzxYcX28IzrY3w4a47nzBkfVs3xvDnjwwVzvGju8yfm+Kq5z6P4+vGyr5/x
YM0cr5j7vKrt4Wuuz+dXrWc8eMP2fJ7VnPHfuu3hhvV4w3rGf5vW4y3X7+9n
Ws/4b9t6vGM93jVnfNgyx3vmjA/3NePBA+tx25zx4aE5PjJnfHjT3OcrzRkf
3jL3eUtzxoe3zf39LHPGh3fM8Yk548O75v7enDnjwXvm+NSc8eB9c9w3Zzx4
Fj63Hj8w9/l+c/zQ/Mrl8iL8yHpc2idn/DcWHseODyfM/b2s8KT1eEozPpwO
VzTjw5nwrGZ8OKcZD1bD89rvm4QXtc+fhK9qn0cJL2vGh7Xwivb7auFr2u+v
hW+E1zTjw/VwQzMe3AhvasZ/W+FmeFszHtwJ74ZbmvHgXng/fKAZ/7XDh+Ej
zfjvZrgTvhU+1oz/bvt55XjpmuM74RPrr1wu75rjXvheHD+ncfzcj+OlHz6L
4+c8/CCOn0EcLw/DF3H8PAqXvsiS42dMc7yMhyc0x0s5PKk5XqbC09rflwvP
aI6X2fBcuKo5XubDC5rjZTFcaI6Xq+Gl8LLmeKmFVzTHx2r4WriuOT5uhNfC
69rfkwtvhDc1x8NWuBneDu9ojp/dcCu8F97XXD8dhNvhw/CR5vrpZrgTvhU+
1lwv3Q53w3fCJ+G7muulXvhe+DR8P9zXj10uz8Ln4QfhQfhh+EJzffQoXPrS
qMfC4+GJcFnzfNVkeCo8Ha6EZ8Kz4blwVfP81nx4IbwYLsJXw0vh5XAtvKIn
L5er4WvhevhGeC28Hm6EN8Kb4a1wU5cvl9vhnfBuuBXeC++HD8Lt8GH4KHwz
3AnfCh9r/t2q2+Fu+E74JHw33AvfC5+G74f74bPwefiB9vfMsPefHpozn3GB
vT/+CA//nYUvXy69Pz6GvT8+jp3PmMDOZ5Sx8xmTtnf9cjlle3gaD78/hJ3P
mMHOZ8xaj+esZ/6iaj2et97vG5kzn7Ho62P+orAeX/X9MZ+xZD3zF8u2h2vm
zF+smONVc+Yvrrk+XHd9zF/cMMdr5sxfrJv7+0bmzF9suH5/78j1M3+xZY6b
5sxfbJvjHdeHd10f8xctc7xne8xf7NsePrAet22P+YtD6/GR7TFfcdN6v19j
Pb5lvd+3jfd/O95/19fj/T/b9/5fvP+78f57tuf9v3j/p9Z7/y/ef9967//F
+z+33vt/8f4H8f4fxvu/sN77f9Z7/++AnPmbMTy8/2fu/T9z7/+Ze/9PM38z
Zb33/8y9/2fu/T9z7/+Ze//P3Pt/5t7/M/f+n7n3/8y9/2fu/T9z7/+Ze//P
3N87D69Y7/0/c+//mXv/z9z7f+E1673/Z37lctkwxxvhTeu9/2fu/T9zri+3
wzvWe/8v9m8r9u9e7N/92L8HsT/bsT8PY38exf68GfuzE/vzVvg49u/t2L/d
2L93Yn+exP68G/uzF/vzXvg09uf92J/92J9n4fPYnw9ifw7CD2P/XsT+fBQu
PccSj2nmF8bDE5r5hbJmPmEyPKUZr0yHK5r5hZnwrGZ+YS5c1cwvzIcXNPML
i+FCM59wNbykmU9YDtc08wkr4dXwNc18Qj18QzOfsBZeDzc08wkb4c3wlvb3
t8Pb4R3NfMJuuBXe08wf7IcPsOO9tuZ5rkPs811H2N8PvYn9d7k65oxnb2H/
nbBj149v4+G/W+b68B3bYzx7Ynv4Lvb5rp7t4Xu+PnxqPe/3vvX+fqfrx2eu
39/ztB4/sN7f9zRnfPvQ94svfD2Mbx/Zvv8u4VfI8Rj2+a5x7PNdE+aMb8vm
eNL2GN9OYZ/vmjb3++PmjGdnzP0+uTnj2TlzXHX9eN7X5+/NmONFc39/xvbw
VdfHeG7JHC/bnr9PY3uM51bM8artMX67Znu4bj2+YT3juTXr8br1uOH6Gc9t
WI83rcdb1vvvwGrGc9vW+3so5ozvds39fRRz+39t/2+9/b+5/b85PjS3/zfH
N83t/83xLXP7f3P7f3P7//Ad6/GJuf2/+8fv58f2vxfb/xT7vMB963k+tu/6
8Bn290bOsc/TPzDHA/8eP7R9zp8X5viRuf8O4Z9fLn1edgw7XzCOfV52Ajtf
UMbOF0xin5edsj3On9OuD1ds7/rlcsb28Kzt4Tnr/X0R6/G89XjB9XO+XLTe
3x+xvl48+YaX7v7dN5aLL7/439761E+8uvir7+zWnnz5G4f+r3+YeNX/PvGm
od/8oSeOfuwlTw39opmXbfz429479Fdf9dJ7z77lfUO/a/ODle++4v2j+Sc2
hn7Bi3/wrz/7Lx8Yzf/9ef/Qzod3z57divzpob/19Y/+z3Pf+fBo/t2PDL1y
9sxLXv79zwz9za/8wLte8/T20Ne/uPflv3/uY6P5vz7viauPP/H+i8h/8pND
P/efY+/5keKTo/nnPj30B/6j//Rf/nNr6Hf/4/jXD//p2aFf+5nXf+Nr58+O
5u/83NCf/voLX/mVr31+NP/2F4Z+5s72t8++sT+a/+3zftnXOi9cefClaP9g
6Bd2vvkXL/j4wWj+red994ef/OrffG88oy8/N4PHR/y9z5P+P7cva7o=
   "], {{
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{2019, 2018, 765, 766, 767}, {2021, 2020, 870, 871, 
         872}}], PolygonBox[{{2025, 2024, 1205, 1206, 1207, 1208, 1209, 
         1210}}], 
        PolygonBox[{{2033, 2032, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 
         1825, 1826}, {2003, 2002, 85, 86, 87, 88, 89, 90, 91, 92, 93}}], 
        PolygonBox[{{2007, 2006, 278, 279, 280, 281, 282, 283, 284, 285, 286, 
         287, 288, 289, 290, 291}}], 
        PolygonBox[{{2013, 2012, 479, 480, 481, 482, 483, 484, 485, 486, 487, 
         488, 489, 490, 491, 492, 493, 494, 495}}], 
        PolygonBox[{{2015, 2014, 512, 513, 514, 515, 516, 517, 518, 519, 520, 
         521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534,
          535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545}}], 
        PolygonBox[{{2035, 2034, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 
         1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 
         1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 
         1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 
         1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894}}], 
        PolygonBox[{{2005, 2004, 201, 202, 203, 204, 205, 206, 207, 208, 209, 
         210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
          224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 
         237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 
         250}}], PolygonBox[{{2029, 2028, 1532, 1533, 1534, 1535, 1536, 1537, 
         1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 
         1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 
         1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 
         1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 
         1582}}], 
        PolygonBox[{{2009, 2008, 329, 330, 331, 332, 333, 334, 335, 336, 337, 
         338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
          352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 
         365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378,
          379, 380, 381}}], 
        PolygonBox[{{2001, 2036, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 
         14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
         31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 
         48, 49, 50, 51, 52, 53, 54, 55, 56, 57}}], PolygonBox[CompressedData["
1:eJwNyEkiAlAAANCvjXM4kE1H6AA6gqmoDIkya84UKZnLlBRXyGW8xdu8mVg8
OhcJIUwxy990CBPmxQKLLLFMgiQrrJIiTYY11tlgkyxb5NhmhzwFdtljnwMO
OeKYE4qUKFOhSo06DU4545wLLmlyxTUtbmjT4ZYud9zzwCNPPPNCjz6vvPHO
B58M+GLINyPG/PDLPzDlNB0=
         "]], PolygonBox[CompressedData["
1:eJwNw2kyAmAAANAvM8Y5XMmMP0lIIVH2JVsquyhJsoTscbJcwnszbzCRG8r2
hRAiDvs3EELPaH8II8YcNe6Y406YcNKkKaecdsa0s2acc96sORdcdMllV1x1
zXU33DTvltvuuOueBfctWrLsgYceeeyJp555bsULL61a88q61za8semtLe+8
98FH2z757IsdX33z3Q8//fLbrj/++g9WOTAG
         "]], PolygonBox[CompressedData["

1:eJwNyMVBAlAAANCvF+dwJUfw4FFXsQO7EwvsbsXAADvA7lzAd3iXl19YUlCc
G0LIoYhsXggZSmUZ5VRQSRXV1FBLHRHqaaCRJpppoZU22umgky666aGXPvoZ
IMogQwwzwigx4owxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBptskWCbHXbZI8k+
BxxyRIo0x5xwyhnnXHDJFdfckCHLLXfc88AjTzzzwitvvPPBJ19888Mvf/wD
hI5QSQ==
         "]], PolygonBox[CompressedData["
1:eJwNz9ciAlAAANCrIlv2liKyN//hE7x442ORkT3K3nufh/MBJ7W0urgSCSGU
sEwxHkKBtWgI62yQY5Mtttkhzy577HPAIUccc8IpZxQocs4Fl1xxzQ233HHP
A4888cwLr7zxzgeffPHND7/8EWIeRIgSo5Qy4pRTQSVVVFNDLXUkqKeBRppo
poVW2ming0666KaHJL2kSNNHPxkGGCTLEMOMMMoY40wwyRTTzDDLHPMs8A9n
hTRY
         "]], PolygonBox[CompressedData["
1:eJwNw+c2kAEAANBPP/IcvUHKyGghimyRskVUyFYqIykje2VFMkJCQryTXqF7
z7mXyuuz6y4EQRDisP9Cg+DcyxeDIMwrXjXcCCON8prRxhhrnNe94U1vedt4
E0z0jkkme9d7ppjqfdNMN8NMs8w2x1wfmGe+Dy3wkY8ttMhiSyy1zHIrfGKl
VT612hqf+dwX1lpnvS9tsNEmm22x1TbbfeVrO3zjW9/ZaZfd9vjeXj/Y50c/
2e+Agw752WFHHHXMcSecdMppZ5z1i3POu+CiS3512RW/uep311x3w01/uOW2
O/5011/uue+Bvz30j0cee+JfTz3zP9G+R7k=
         "]]}]}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[{{2029, 2030, 1583}, {2009, 2010, 382}}], 
        PolygonBox[{{2017, 2018, 764, 763, 762, 761, 760, 759, 758, 757, 
         756}}], PolygonBox[{{2013, 2014, 511, 510, 509, 508, 507, 506, 505, 
         504, 503, 502, 501, 500, 499, 498, 497, 496}}], 
        PolygonBox[{{2033, 2034, 1846, 1845, 1844, 1843, 1842, 1841, 1840, 
         1839, 1838, 1837, 1836, 1835, 1834, 1833, 1832, 1831, 1830, 1829, 
         1828, 1827}}], 
        PolygonBox[{{2011, 2012, 478, 477, 476, 475, 474, 473, 472, 471, 470, 
         469, 468, 467, 466, 465, 464, 463, 462, 461, 460, 459, 458}}], 
        PolygonBox[{{2001, 2002, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 
         73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58}, {
         2005, 2006, 277, 276, 275, 274, 273, 272, 271, 270, 269, 268, 267, 
         266, 265, 264, 263, 262, 261, 260, 259, 258, 257, 256, 255, 254, 253,
          252, 251}}], 
        PolygonBox[{{2007, 2008, 328, 327, 326, 325, 324, 323, 322, 321, 320, 
         319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 309, 308, 307, 306,
          305, 304, 303, 302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 
         292}}], PolygonBox[CompressedData["
1:eJwNw2kyAmAAANCPmcY5HElHcABORrKVPZLKVlkiKmSvCKnQH+/NvPHJ6ejU
aAhhxAlbYyG0HUZC+PPXHwf27flt1y8//bDju2+2bdn01RefffLRB+9teOet
N9atWfXaKyteemHZc8889cSSRQsee+ShB+6bN2fWPTPumnbHbVNuuemG6665
6opJEy675KILzht3zpizzvgPasNG4w==
         "]], PolygonBox[CompressedData["
1:eJwNw+c2AmAAANCvUGZk+9kreQLHA+QFSUbZO1shexYhm3vPuanRseF0NIQQ
ccRKPISqQw46YL999tpjt0m77DRhh+222WqLzcaN2WSjDUaNGPyLhfDrj99+
+emH79Z989UXaz77ZNWKjz5475233njtlZdeeO6ZZU898diSRY889MB999x1
x20LbrnphuuuueqKyy656ILzzpk356wzTjtl1kkzTjjuP+RvQmw=
         "]], 
        PolygonBox[CompressedData["
1:eJwNw+c2AmAAANCvQrbsPZLsvTdlr5C9Cef4xUPzIO495yYLP/nvaAgh4pe/
8RD+/IyF8OG7Bd989cVnn3z0wXvvvPXGa6+89MK85555as4Tjz3y0AP33XPX
HbfdMmvGTTdcd81VV1x2yUUXnHfOWWecdspJJxx3zFFHHHbIQQfsN22fKXtN
2mO3XXbaYbttttpis0022mC9ddaasMZqq6y0wnLLLDVuicUWGTNqxOA/DzAZ
RA==
         "]], PolygonBox[CompressedData["
1:eJwVw8VRAwEAAMAbeFAHLVECHywkuLu7uwV3d3d36AEaYPiz7MzGJ0YSwjFB
EPwP+RMXBL++++arLz775KMP3nvnrTdee+WlF5575qknHnvkoQfuu+euO267
5aYbrrvmqisuu+SiC84756wzTjvlpBOOG3XMUUccdshBB+y3z1577LbLTjts
t81WW2y2yUYbrLfOWmustspKKyy3zFJLLLbIQgvMN89cc8w2y0wzjBg23ZBp
pppiskl++e1nbBB8+O6br7747JOPPnjvnbfeeO2Vl1547pmnnnjskYceuO+e
u+647ZabbrjumquuuOySiy4475yzzjjtlJNOOG7UMUcdcdghBx2w3z577bHb
LjvtsN02W22x2SYbbbDeOmutsdoqK62w3DJLLbHYIgstMN88c80x2ywzzTBi
2HRDpplqin+Fs4uw
         "]], PolygonBox[CompressedData["
1:eJwt0DVSA1AAQMEPDefgShwACW4J7u7uENzd3d17OBBbUOzMq19yJJYSTQwh
JFDMT1IIv3zrLz754J03XnnhmSceeeCeO2654ZorLrngnDNOOeGYIw45YJ89
dtlhmy022WCdNVZZYZklFllgnjlmmWGaOFNMMsE4Y4wywjBDDDJAP3300kM3
XXTSQTtttNJCM0000kA9ddRSQzVVVFJBOWWUUkKM6P/3IgopIJ88cskhmywy
iZBBOmmk8ge5P0FJ
         "]], PolygonBox[CompressedData["
1:eJwVzjVCAwEAAMGDhnfg7u7B3YI7BAhOgru7PxGewlBMs9UmR2LhncQgCBKI
85MUBL98i1988sE7b7zywjNPPPLAPXfccsM1V1xywTlnnHLCMUcccsA+e+wS
J8b/2DZbbLLBOmusEmWFZZaIsMgC88wxywzTTDHJBOOMMcoIw4QZYpAB+umj
lx666aKTDtppo5UWmmkiRCMN1FNHLTVUU0UlFZRTRiklFFNEIQXkk0cuOWST
RSYZpJNGKin8AYAYKtY=
         "]], PolygonBox[CompressedData["
1:eJwNw4c2lQEAAOCf4xzP4S2MjKwysvcI18i8MrK59l5FUaiMrELGO9Vj+L5z
vrhQb0k4OgiCKCP+iw2C/z7FBMGjD9771ztvvfGPv732yksvPPeXZ5564rE/
/eF3jzz0wG9+dd89v/jZXXf85Ee33XLTDdddc9UVl11y0QXnnXPWGaeNOOWk
E4475qgjDjvkBwcdsN8+39tr2B677bLTDtt9Z5uttthsyCYbbfCt9dZZa43V
VllpheWWWWqJxRZZaIFvzDfPXHN87SuzzTLTDNN9aZqpppjsC5NMNMF4nwHA
Lz+k
         "]], PolygonBox[CompressedData["
1:eJwNw+dWCGAAANCvpRApUqFUKqLSomEXUVSkwl8PwDP1HKFCRlIUhShkFQ2r
ZKR7z7lZl6+2XIkMIUTY4VRsCNNeignhohdst81Wz9viOc/abJONnvG0DdZ7
ypPWecLj1lrjMY96xMMe8qAHrLbKSivc7z7LLbPUEovda5GFFrjH3ea7y53m
mWuOO8w2y0y3m2G629zqFtNMNcXNJrvJjSaZ6AYTXO86413rGlcbZ6yrjDHa
KCONMPg/OoRl//nXP/52yV8uuuBPf/jdb3513jlnnfGLn512yk9+9IPvfeek
b33jaycc95UvHfOFz33mqCM+9YnDDvnYRw464EP7fWCf973nXe/Y621vedMe
u+3yhte9ZqcrY8VSRA==
         "]]}]}, {}, {}}, {{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwl2WOwZUcbBtCMbdu2bdu2bdu2bdu2zWSYzEwytj2TzLdOfT9WPffW2ad3
d7+7uvbpTtK0U9WOQX777bcPoX77LZBBCUZwQhASH/0WmjCEJRzhiUBEIhGZ
KEQlGtGJQUxiEZs4xCUe8UlAQhKRmCQkJRnJSUFKUpGaNKQlHenJQEYykZks
ZCUb2clBTnKRmzxcMZi8Mh/5KUBBClGYIhSlGMUpQUlKUZoylKUc5alARSpR
mSpUpRrVuep+NWRNalGbOtSlHvVpwO+uaygb0ZgmNKUZzWlBS1rRmja0pR3t
6UBHOtGZLnSlG93pQU960Zs+9KUf/RnAQAYxmCEMZRjDGcFIRjGaMYxlHOOZ
wEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGYJSxlGctZwUpWsZo1rGUd69nA
RjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgjHOUYxznBSU5xmj/U64w8yznO
c4GLXOIyV7gaqG3geq5xnRvc5Ba3+ZO/uMNd7vE3/3CfBzzkEY95wlOe8ZwX
vOQVr3nDW97xng985BOf+cJXvvE90C9j+SF/8i//8YvAghCEoAQjOCEISShC
E4awhCM8EYhIJCIThahEIzoxuO5+MWUsYhOHuMQjPglISCISk4SkJOOG7yaX
KUhJKlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozgl
KEkpSnNTv8rIspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjSj
OS1oSSta04a2tKM9HQgs7p3oTBe60o3u9KAnvehNH/rSj/4M4JZxDZS35SA5
mCEMZRjDGcFIRjGaMYxlHOOZwEQmMZkpTGUa05nBTGYxmznMZR7zWcBCFrGY
JSxlGctZwUpWsZo1rGUd69nARjaxmS1sZRvb2cFOdrGbPexlH/s5wEEOcZgj
HOUYxznBSU5xmjP8ab7OynOc5wIXucRlrnCV3/mDa1znBjcD8x6Y80A7/MUd
7gb+1u49+Tf/cJ8HPOQRj3nCU57xnBe85BWveRNoTztv5Tve84GPfOIzX/jK
N77zg5/8y3/8CvQn8GLghSEIQQlGcEIQklCEJgxhCUd4IhCRSEQmClGJRnRi
EJNYxCYOcYlHfBKQkEQkJgn39CWpTEZyUpCSVKQmDWlJR3oykJFMZCYLWclG
dnKQk1zkJg95yUd+ClCQQhSmCEUpRnFKUJJSlKYMZSlHeSpQkUpUpgpVqUZ1
alCTWtSmDnWpR30a0JBGNKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13pRnd6
0JNe9KYPfelHfwYwkEEMZghDGcZwRjCSUYxmDGMZx3gmMJFJ/K12k+UUpjKN
6cxgJrOYzRzmMo/5LGAhi1jMEpayjOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t
7GAnu9jNHvayj/0c4CCHOMwRjnKM45zgJKc4zRnOco7zXOAil7jMFa7yO39w
jevc4Ca3uM2f/MUd7nIvMIf8w30e8JBHPOYJT3nGc17wkle85g1vecd7PgTa
UpOP8hOf+cJXvvGdH/wM3M91/8r/+BW4d2BN8AMiCEEJRnBCEJJQhCYMYQlH
eCIQkUhEJgpRiUZ0YhCTWMQmDnGJR3wSkJBEJCYJSUlGclKQklSkJg1pSUd6
MpCRTGQmC1nJRnZykJNc5CYPeclHfgpQkEIUpghFKUZxSlCSUpSmDGUpR3kq
UJFKVKYKValGdWpQk1rUpg51qUd9GtCQRjSmCU1pRnNa8FBtWspWtOaR/9vI
trSjPR3oSCc604WudKM7PehJL3rTh770oz8DGMggBjOEoQxjOCMYyShGM4ax
jGM8E5jIJCYzhalMYzozmMksZjOHucxjPgtYyCIWs4SlLGM5K1jJKlazhrWs
Yz0b2MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc4zgnOMkpTnOGs5zj
PBe4yCUuc4WrPFar3+UfXOM6N7jJLW7zJ39xh7vc42/+4T4PAs9AoO6B9njC
U57xnBe85BWvecNb3vGeD3zkE5/5wle+8Z0f/ORf/uMXgY2EIAQlGMEJQUhC
EZowhCUc4YlARCIRmShEJRrRiUFMYhGbOMQlHvFJQEISkZgkJCUZyUlBSlKR
mjSkJR3pyUBGMpGZLGQlG9nJQU5y8URdcss85CUf+SlAQQpRmCIUpRjFKUFJ
SlGaMpSlHOWpQEUqUZkqVKUa1alBTWpRmzrUpR71aUBDGtGYJjSlGc1pQUta
0Zo2tKUd7elARzrRmS50pRvd6UFPetGbPvSlH/0ZwEAGMZghDGUYwxnBSEYx
mjGMZRzjmcBEJjGZKUxlGtOZwUxmMZs5zGUe81nAQhaxmCUsZRnLWcFKVrGa
NaxlHevZwEY2sZktbGUb23mq7jvkTnaxmz3s5ZnP9sn9HOAghzjMEY5yjOOc
4CSnOM0ZznKO81zgIpe4zBWu8jt/cI3r3OAmt7jNn/zFHe5yj7/5h/s84CGP
eMyTwJgCfec5L3jJK17zhre84z0f+MgnPvOFr3zjOz/4yb/8xy8CG4pBCEow
ghOCkIQiNGEISzjCE4GIRCIyUYhKNKITg5jEIjZxiEs84pOAhCQiMUlISjKS
k4KUpCI1aUhLOtKTgYxkIjNZyEo2spODnOQiN3nISz7yU4CCFKIwRShKMYpT
gpKUojRlKEs5ylOBilSiMlWoSjWqU4Oa1KI2dXju+asr61GfBjSkEY1pQlOa
0ZwWtKQVrWlDW9rRng50pBOd6UJXutGdHvSkF73pQ1/60Z8BDGQQgxnCUIYx
nBGMZBSjGcNYxjGeCUxkEpOZwlSmMZ0ZzGQWs5nDXOYxnwUsZBGLWcJSlrGc
FaxkFatZw1rWsZ4X5nOD3MgmNrOFrWxjOzvYyS52s4e97GM/BzjIIQ5zhKMc
4zgnOMkpTnOGs5zjPBe4yCUuc4Wr/M4fXOM6N7jJLW7zJ39xh7vc42/+4T4P
eMgjHvOEpzzjeWDsvOQVr3nDW97xng985BOf+cJXvvGdH4Hvm7+f8l/+4xeB
g4UgBCUYwQlBSEIRmjCEJRzhiUBEIhGZKEQlGtGJQUxiEZs4xCUe8UlAQhKR
mCQkJRnJSUFKUpGaNKQlHenJQEZeGU8m+VpmllnISjayk4Oc5CI3echLPvJT
gIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapTg5rUojZ1qEs96tOA
hjSiMU1oSjOa04KWtKI1bWhLO9rTgY50ojNd6Eo3utODnvSiN33oSz/6M4CB
DGIwQxjKMIYzgpGMYjRjGMs4xjOBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUs
YjFLWMoylrOClaxiNWtYyzrWs4GNbGIzW9jKNrazg53sYjd72Ms+3nhm9ssD
HOQQhznCUY5xnBOc5BSnOcNZznGeC1zkEpe5wlV+5w+ucZ0b3OQWt/mTv7jD
Xe7xN/9wnwc85BGPecJTnvGcF7zkFa8D4+Et73jPBz7yic984Svf+M4PfvIv
//GLwAFjEIISjOCEICShCE0YwhKO8EQgIpGITBSiEo3oxAicMRCL2MQJ7HcS
l3jEJwEJSURikgT2EHlHssA5AylISSpSk4a0pCM9GcgYWA8CawFZyEo2spOD
nLwnV+C3AnkCZ5DkIz8FKEghClOEohSjOCUoSSlKB84ZKEs5ylOBilSiMlWo
SjWqB84fqUktalMn8H5APerTgIY0ojFNaEozmtMisG8Q6v9nxK1oHdg3oC3t
aE8HOtKJznShK93oTg960ove9KEv/ejPAAYyiMEMYSjDGM4IRjKK0YxhLOMY
zwQmMonJTGEq05jODGYyi9nMYS7zmM8CFrKIxSxhKctYzgpWsorVrGEt61jP
Bjayic1sYSvb2M4OdrKL3exhL/vYzwEOcojDHOEoxzjOCU5yitOc4SznOM8F
LnKJy/wPVGUO5A==
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, 0},
  Frame->True,
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"cell with 8 inputs (Random, fill: std)\"", TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.485683370655066*^9, 3.485684103207098*^9, 
  3.48569483797782*^9, 3.485695429288409*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinput", "\[LeftDoubleBracket]", 
    RowBox[{"2", ",", 
     RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"Sqrt", "@", 
     RowBox[{"Variance", "@", 
      RowBox[{
      "xinput", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}], 
   ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<cell with 8 inputs (Leogang, fill: std)\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"xinput", "\[LeftDoubleBracket]", 
    RowBox[{"7", ",", 
     RowBox[{"1", ";;", "2000"}]}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"Sqrt", "@", 
     RowBox[{"Variance", "@", 
      RowBox[{
      "xinput", "\[LeftDoubleBracket]", "7", "\[RightDoubleBracket]"}]}]}]}], 
   ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<cell with 17 inputs (Leogang, fill: std)\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.485682493835227*^9, 3.485682531056034*^9}, {
   3.485682760089768*^9, 3.485682766993819*^9}, {3.4856828509583063`*^9, 
   3.485682867315425*^9}, {3.4856829929968767`*^9, 3.485683157067782*^9}, {
   3.485683336722377*^9, 3.485683366643545*^9}, 3.485684101455845*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "correlate", " ", "firing", " ", "frequency", " ", "with", " ", 
    "reconstruction"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xthresh", " ", "=", " ", "0.4"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"adjAtest", "-=", 
     RowBox[{"Min", "@", "adjAtest"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"nonsense", ",", " ", 
      RowBox[{
      "because", " ", "it", " ", "includes", " ", "diagonal", " ", 
       "elements"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"adjAtest", "/=", 
     RowBox[{"Max", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scatterAin", "=", 
     RowBox[{"scatterAout", "=", 
      RowBox[{"{", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{
       RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAin", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Mean", "@", 
            RowBox[{
            "xinput", "\[LeftDoubleBracket]", "ii", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}]}], 
          "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAout", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Mean", "@", 
            RowBox[{
            "xinput", "\[LeftDoubleBracket]", "ii", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"Length", "@", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"#", ">", "xthresh"}], "&"}], ")"}]}]}], "]"}]}]}], 
          "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scatterAin", ",", "scatterAout"}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<<\!\(\*SubscriptBox[\(F\), \(i\)]\)\!\(\*SubscriptBox[\(>\), \
\(t\)]\)\>\"", ",", 
        "\"\<\!\(\*SuperscriptBox[SubscriptBox[\(k\), \(i\)], \(reconstr\)]\) \
| xthresh\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"\"\<RandomTopo: original / reconstructed | xthresh = \>\"", "<>", 
       RowBox[{"ToString", "@", "xthresh"}]}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"AbsolutePointSize", "[", "5", "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "ii", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.48506430583132*^9, 3.485064451016493*^9}, {
  3.4850645272873077`*^9, 3.485064795320882*^9}, {3.485065272724938*^9, 
  3.485065350548873*^9}, {3.485080430876397*^9, 3.485080499462368*^9}, {
  3.485606362703845*^9, 3.48560639955811*^9}, {3.485606430577292*^9, 
  3.4856064962544518`*^9}, {3.485606593725705*^9, 3.485606763449445*^9}, {
  3.485606849271052*^9, 3.48560692831063*^9}, {3.4856069979411182`*^9, 
  3.4856070679256783`*^9}, {3.48560714307627*^9, 3.4856071497916*^9}, {
  3.4856078417165728`*^9, 3.485607845106311*^9}, {3.486062672357417*^9, 
  3.486062686986578*^9}, {3.486819146834737*^9, 3.486819346955991*^9}, {
  3.4869049660333548`*^9, 3.486904966493513*^9}, {3.486905347392024*^9, 
  3.4869053623172073`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[5], PointBox[CompressedData["
1:eJxNlH1Qy3Ecx3/K2SJUoqVrKkk3iVmoDvumOknq19pikVJSxpHuCk0q7Ih1
x8pDD9KFuO0PyRSnSx66oeR2RBGzy0MPW+3ykCXm4fp+P3b3u93rPp/35/t5
+n7dk3YJUqwoitry5/v7f+xLi6wxMgZR/34sNNW4lQ4siR5jCrFfqax2TI7E
TLm7qhzbhYIxNvEbFaWqdnea+Mvzh3vipYSpOacM5pp67O+NxIV1TmwmxA/p
0CdUdsQQO3d9UX01yccXhWbHu7g2riXxfMrHZ4yKY4jeMy5lQ0NJOLH7t5yZ
+yIugvDWHh+nvkf4fCZq0qcNKKqiCVtXy/NaZ0B9yhM7T1UkicbYCx3Was1G
O6hn3KixK91TSPSRHhMDOoWgr+tzk1ZbYT0HTXbIpK6vw/m6If7joZMbEzAv
RJempd377Ajx9xQ2bOxdLSB8cWJ+E+0F+deXju87tCeM2B8o095FFIK+M5qT
brEh/aXim+3X0FrMLOSxqiZIchznz0OS1LfOKUrMJn4Yb8JA8TKYL7N08G0z
Z90Y+6LnRToVVQP2D9zbZ6K84fwREyd78A7Mt5v9XvdFjeMHoJ8nh2yNKvC/
lvRmHJuGfM29WW78m2BfvKM4WacANmjeGF/MA+52eZ2efRXnsxglHwuOlStx
/33R7sLsrlhH3G8u6m+bye7l4nw46BVX7tHUuZrEm6JxjU8Yhvgak8LinxtF
WGaw89srg3nPP4/arF+CvqL78UjzM+iP5/Rfw0Idrs8OacV0RrkI4l85WvuB
dRXmKXLeIi7g0kT/PIyX43Qd9v9PN/3K1aA/kBcXrLMHDjAsb+mrg/uUuysx
vGoF3I/+DENO5ROoR51pEzolMZQwZ6mqyDJK6kObTzsceTcb9nWGrGDz3FZc
j4m/L2mbfoCJ++mLnDTzFHMmYX9/9DEw7wf0OxAxzg7OTpSCfnnJ+9z8w9jf
E10arZQ59MO+nHOvrJJth3lteuo3UPwE9FRGpiWrDuo3pt55yNBCPxlqcQ2j
H9fDRIyyT8GxO2nCl4V+PpKv0A/RD7P9fgXwDeegXJ0S+qc+aCVBkv/etwWm
oFs82N+I6KoHg2lg/9pgzRQthfd1qPWZrdoM+/DzQretdD22M1HP1Cj2dxFm
LxQesihrliucf9NBL5C1C4n+fua5JXt5NOGutfeSy1Ih/5Bv31xYZfCetN1V
SxVyfJ8XIc0agX1MBfhH1Y606Zfh+8NC2+JqGdU9+Dwv1JEjEK60wH7+BqxV
iaE=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], AbsolutePointSize[5], 
    PointBox[CompressedData["
1:eJxNlH1Qy3Ecx3/K2RAqo9I1PaGbxDQqh76pTpL6bW2xSCkp40h3hSYVdsS6
Y0V6kC7EbX9Ipjhd8tANJbcjiphdHnrYapeHLDEP1/f78bv73e9e9/58vt/P
488tcbcg2YqiqK1/3r/f419aZI2R0Yj697DQNOM2elkJf4wpxH6lsto5JRIz
5eaiYrULBWNsCmxUlKra3WhiL88b7omTEqbmnDaYa+qxvRcSF9Q5sJl84h/S
oY+v7IgmOndDYX01iccHhWbFObs0riPneZePTx8VY51CnrHJGxtKwonu31I8
70VsBOFtPd4OfY/w/UzUpE8dUFTxCVtXy3NbZ0J+ypO7TlckisZ4Ljqi1ZqN
tpDPuFFjV5qnkPhHuk8K6BSCf12fq7TaCvtz0BT7DOr6ehyvKwp8PHRqUzzm
RejS9NR7n1lw/t6Chk29awSEL07Ka6LnQvz1peP7Du8NI/oDZeq7iALw7+Rz
0iwTSf+ouGa7tbQWsyNyX10TJDmB4+chScpbp2QlZlNgmO+EgaLl0F9m6eDb
Zs76MfZBzwt1KqoG9A/c28VRXnD/iImTNXgH5qeb/V73RY3PX4p+nhqyMarA
/lrim3FsGuI192a6Bt4EfcnOoiSdAtigeWN8MR+42/l1WtZVHM8SlHQ8OEau
xPVfjPYUZHXFsKIJ97fNYvdycTwc9Iord2/qXEPOm6pxiYsfhvM1JoXFPyeK
sMxgy9sng34vOI/arF+Cf0X345HmZ1Afzxm/hoU6nJ8t0orp9HIRTfQrx2o/
OF6FfoqctorzuaA/D/PNdrgO8/+nmrxyNcR3MDc2WGcHHGBY0dJXB/uUszsh
vGol7Ed/uiG78gnko86YGDo1IZQwx09VaBkl+aEtZ+yPvvOAeZ0py98yrxX2
d3/idv0AE9fTBzlo5ivmTMb2fujjstwfUO8AxDg76JEgBf8VJe9z8o5ge090
abRSZt+P7f3RObfKKtkO6Nfmp7yBoiewv1R6hiWzDvI3ptx5yNBCPRlqcQ2j
P5LYM8o+BcfsoglfFvK8JV+hHqIfZrsDCuAbTkE5OiXUT33ISoIk//3fFpqC
bvnC/Ebwqx4MpoL+tcGaKfLD+TmiodZnNmozzMPPC9020g1YZ6KeaVHs7yLo
X3jI4szZLnD/TXu9QNYuJP73M84t3edLE+5ady+pLAXiD/n2zdmxDP4nbXfV
UoUc7zMXadYK7KIrwD6qdqRNvxzvDwttj61lVPfg+7xQR7ZAuMoC8/kb4BOK
0w==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"<\\!\\(\\*SubscriptBox[\\(F\\), \
\\(i\\)]\\)\\!\\(\\*SubscriptBox[\\(>\\), \\(t\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(k\\), \\(i\\)], \
\\(reconstr\\)]\\) | xthresh\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"RandomTopo: original / reconstructed | xthresh = 0.4\"", 
    TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.486905363046342*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[5], PointBox[CompressedData["
1:eJxFVH9Q02UY/wpem4YKSAIRC3Coh1S3tgEiuIfYYkxgY27oSAJBBJenxB1o
LGKUO9PGXQ5M+SFylNRtf4g4wS4OyeRWgnQ7xcDQuUOLHxvsSKUhtqzb8313
973d554fn+fzed/3iSw8JC/2oShq74vvv/8Tjwd1fVk7gPr/J4Q1zn2yxMZs
L+YA667J58CqLC+mqMhwU9CIQu7FW6HP0GQaiZTR+frahck8DWIKok853J09
mC8EVV13MIuJ/fkgHLXnt40ivxg4u+p7Ouh50kBUlRcW3pdJ88e2LC9fUnnj
WgB2bvF7vY0SOp4weHrjndwML3YJ9k3GBk//Qubtt5fOGtqRPwl8O/TaoXVE
n/HLg6daC5X0PEetVrfTH/W8BsuWnONlbIUXb4OsqJVbxhRY7xJ0T0doOnyw
XgirAiuoSztx3ndBcGP+5O584vf5taXX/goi/Q/X9e6eSsd5+fDNytp+2QbE
cdDTtHz6s8Nimu+6sfRBRh3xeyw7psyzAvUFQd5AwHaZFXEyRKV1pqi/UNDz
qEvuhxYbUQ8HxNyXZhuSkC8BmE1z9wdidnqxCG7X20xUJ8Z58Ijzw2npJuR3
CRZdMVVzV5EvESZYD22Pzdg/DZ6fnPdzmjCfDRcL7y1jyTA/AtxTlRGCKxj3
B/6BhiKbgWCH5Z7zzmaidyLs97KqCziPBIpOpObojV7/tWnwYV3VeE4Q+p8O
M8OvsqY4ZJ67HH1U/1g69qNWW8Lz8hewPxMsLoMnoUZKx3UOf94RHTnvN87B
sO9vpL514sbiwC3iH/uVfxYUNtQXB1aVrLxFif3fhO8+73oUckFM1ytD96qO
czDOh9tibnXwJXL/X7jJazETPz7R5qbaAoifWxzJg9Pd5H7VHCqQtG8j72Om
3FHddlNK15srVohWF4joeEy8qd6zhPo4sOerwGMP1qN/YlinO75n4xDq2Qof
Fe63zzLRTzEEWzYbol9G/kz4I1H7jPidCYwzc+sLNFjPheTGhzW1RzFfBOeX
2nSBM5gvgbORbe26D8h5vf8rb7bhJtYLgCqv8FR2o/4N4Cy5+jPDSvxkmFWd
jBnUwwZG85+pOQcxPx6+VfBi1U/o8wXlM3fAxwbELsHl0JQam5H4Z/7URw1q
4nf0W66U77k4TwhkZLdfnysl7/lJry9TGY/6UmB+6Jaf2Y35AM+/nvDT7MI4
HybXSFl/K8m+kAjfrnw9nPBfCbTLdSPoRyz8VHE27giX6BnPvFbUXELuq/Dp
07CQZrJPhn80awx6fM8SsGyXB+xoJfnSrsVhexLuryTYn9vF6JjEfSGC0Wq5
4h0P8vHgXzIXm1s=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], AbsolutePointSize[5], 
    PointBox[CompressedData["
1:eJxFVH9Q03UY/gpem4YKRAIRCxC0QyrXhoAO9tI2GAjbmBs4kkAQweUpcQca
ixjlrrRxlwMzfkgcJXXbHxIusItDMrmVIN1OMTB07tDixwY7UmmILev2fj+7
2+2ee573fZ/3+Xw+iyw+Ii/1oShq/9Pvf78nHwzrBiS7gfr/I4QNzgOyHc05
XswG1i2Tz6F1Ei+mqMhwU9CYQu7FO2HA0GIai5TRen390nSBBjEFMacd7u4+
1AtA1dAbzGJi/+0gHLcXdox752vTgL2nsa9LQrCopiAsfCDbq3fx49pWV66o
0C8fovNL3+xvzqT9JQ6f2XIzP4vWH5iOC579RU7rB+3l84ZOnM8D3y69dmSj
hNYbPz18ur1Y6Z0vhuNWq9vpj/tshlUrzsmKaIUXp4Akam3ShILOB3pnIzRd
Pko6z3WBVdSFPPSbBvyri6f2FuJ+Qjj3XPnlv4Kw/zY42tC/dyYD/XLhq7X1
g7LNiJOgr2X17IdHxV7MhCvG8rtZDSTviZzYCs8a3M8fCoYCdsmsiJMhKr07
Vf0J+k8Dddmd0FIjYjaIOc/MN/HIPGbLwp2h2DyvXwHcaLSZqG7k4+E++4cz
0pdxvou/7IqtWbiE8xJhinXP9sCM/dPhyalFP6eJ5Plt8e1VLBnqo8A9Ux3B
v4i8P8QfaiqxGQh2WG47b25FzISpsN8ras57/WgzoOSkIFdvxPNLg3caaiZz
gzDvTJgbfYE1w1bQ/C22PmpwIgPzo9ZbwgsKl0ieFpfBk1gnpffTOfy5x3Tk
vrzyBYz6/kbq26euLg9dx3wSIPr5f5YUNtyPC1aVrLJNif1fhW8+7rkfcl5M
1ytD96tOsJFPghtiTm3whWyaf5omt81M8nhfmy+wBZA8kxzJw7O95H7VHSnK
7Ewh72Ou0lHbcU1K15ur1ojWF4loPjbB1OhZwf3YsO+zwI/ubsJ+YtioO7Fv
ywjZ593ig/Z5JjnfYMtWQ8yzeN+z4Y8d2sd03lQWMD5f2FSkwfptkNx8r67+
OOpFcG6lQxc4h/oMOBvZ0al7G7EQ3vqVO990DesBqMoqT3Uv7h8NzrJLPzOs
JE+GWdXNmJPQPKP1T0HuYdTz4GsFN079EPOgQPnYHfCegZz3d6GpdTYjyc/8
gY8a1FgfATGvuVK/56CfFyErp/PKQjnyIfCw35epTMD9ABZHrvuZ3ahPgSdf
Tvlp9iAfD9MbpKy/lZh3OmQKX69+KZzMvxhol+vGyHv9qers9mMcnLcTJrMv
l7SWEf/CR4/CQlrxPnJg9EezxqDPo/O17JIH7G4nemnP8qidh/9fPDiY38Po
msb3IoLxWrniDY+M7vcv8CaiAg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"<\\!\\(\\*SubscriptBox[\\(F\\), \
\\(i\\)]\\)\\!\\(\\*SubscriptBox[\\(>\\), \\(t\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(k\\), \\(i\\)], \
\\(reconstr\\)]\\) | xthresh\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"RandomTopo: original / reconstructed | xthresh = 0.2\"", 
    TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4869053576726227`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[5], PointBox[CompressedData["
1:eJxFVH1Qk3UcfwSvoeELRCIRCxCyQ7qaUCKn7ouDHGPA8zx7hkISCCK4PCXu
QGMRo9yZNu5y4AsvEkdJ3faHhAvs4pBMbiVIt1MMDJ07tHjZgCOVhhjN6/k+
v909t/vc9/3z/Xx/YXmH2AIviqL2er5n/yce9um701RAPfsBC6tc++j4OobH
NIhvm70OrEj7H1MvQ1iIOWCQY3nMQbex3jwYRvNYCYaqubFsLWIpRJ5yuts6
ef8eDjKrOwLFPnx+nRIShxw5zUOkvmRXTWer0I8Kksqzg0O6U/l8URDduLRk
IZO36xiIyCp4t6tOIfQX13dm/a0sJY83wr6x6MCJX7E+Cz2OoiljC1+fYsG7
1aDrX4PzRYDpi4OnmvLUvD8NR202t2s1zpMKSxZcI8URnIDTwpdvHuYw/k3o
mAjVtnrx8RQNK/xLqYs7sV8VSK/NntydoxL6Of9C0ZW/A/j8unQ4XN21ezwZ
+WXg6+VVPfSrPNax0Fm/dOLTw3LeHgpXTUX3lNXY3zswzEQVLy7D+eSQ3euX
QttwnyyE72hL0HyO/bOgKbwbVGDiBH95zHNTtVtYwd+nfvpub9ROHjNws8Zu
ptqQTwYeSH48k/4aqT8/E1U+fRnr0zAqvm9/aOGEeZ+enPV1mdFfAd/l3Vki
plEPcnCPl4VKL6F9B7x1oDbfbkR+UsBpveO6tQHt22E0+I/i8gvYjwryT8gy
DCbkn4EPqstHMgJ4vj16nRx4STwuIf3clhjCe4aTeTtFrbSGZOfMYX4ZWGeM
i3GV6TyOBr1zdewRPdHL61/CgPfvJL5p9Np87w3CX8SL/85xdsK/LZMuaVTz
+T36+vaz9gdrL+A+Z6TqoL2ZxyW83XN/N+UxFYEXif49bMY2WpAPgI91WTK7
H+JU2Ozc2jfRQe6p8lCuomUb3gdFTZY4K5qv4zxxYCldlrQyN0moH7XJXLO4
gPMpYc9p/2P31hH9rtEf37O+H/fFwId5+x1TPqgfFQRaNxgjn0d9q+DPeN0T
gW/PPYvOTq/L1ZL3ZWvd/cqqoyT/+YVmvf8k2c+5sOYW/fsk/r3fYqdqrzOC
nSopXSzrIPpzFV7+RWQjfIosmW2iSZxHBqKGv2QZB9E/Bb7hYqM1j5APOaif
uP0+MiKWwvdBCZV2E+HP8omXBjTItwIi35hJ+CEG9a4EJdNydboI7XJ41OXt
o95E3qvZ/hu+FjfRw9OvRn21u3BfDIytShf/o0a9sqBI3Fj2Sgipf8nfweoH
ke9k+Ln03NtHYrAeDSOpV/IbCrH/eEh8/Dh4bQO+JyoY+MmiNRrIPVtTWD9V
E/pvg/T2+QHHFrwfBezPahe1jnFC/qEKltu+SPT2H1uUuB0=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], AbsolutePointSize[5], 
    PointBox[CompressedData["
1:eJxFVH1ME3cYPsGs6FCBMZEROkGYS2VZKt1UhPEiEGrpx921RctkIIhgZ5SR
gI6OUTabTS3JLDjHh4ywyZb2Dxl24DKCzEm6CbI0igOH1gbd+GihYSorsnU1
3Ht3yeXy5v2453l+z/uLKTxKFwcQBHHA/z77nno0aOiTK4F49vSTsM59kExq
pJZjIIF/xxJweI18OSZiISbaEj6iopl6JfSZmiwjMeRyrJeCsXZhMk/HxEQq
xJ91eTt7mHq9CjR13RH8IGY+IYOMUWd+2yj+nwLh3vqeDsQDSsisyouK7pMx
9QJIaFlZvqTh8MblFr/d2yhh8iGwffDc5tu5UibeCgcnEyKmf+Xw9jtLZ03t
yI+CwA6jfmi9nJ1v/uzI2dZCNYOXhBN2u9cdQrL4Viy5x8viVCx+eezqHWMq
7BdC9/RGXUcA9itgTVgFcWkPg5dQQur1+TP78plYr4QLL5Re/TucZPPH6nr3
Te1GvUj4enVtP/kKxjT0NK2c/viYmKkXwTVz6X1pHfbvhDFKUOZbhfpmQd5A
aDZpR75KiM3qTNOeVrF8tCX3IovNyEcM4sTnZhuSaRZPUNPcvQHBHlavW/UO
C9GJeRoeCn88p3iVO+9Fj6Bq7grF8p/gP3A8sqpY/P+emQ92W9AvMviu8O4K
Pol4JeCdqtyYehnn7YI3DjcUOUxcvct21317C+aTYSLqj7Kqi6iPEopOpecY
zYz+BAXv1VWN54Sj/mqYGX6JPyXk8NwRGmP7x3YzeU/qWlt0Xv4Czk8Cm8fk
216jYOozwOAKER03cPvw2pcwHPg79hNE68T1xYGb6Dca4l78b0HlQD1osGvI
8hY1yea//bTr4YaLYrZfHXlAc1LI+e2WOLE64hLnf7+aohYr6gHwoT433RGK
eCnY4UoZnO7m9qnmaIGk/S0JO3+m3FXddoPhQ6SAtWJV5tqCTJa/YJul3reE
/LJh/+dhn9zfhPNoWG84uX/zEPIh4f3CQ87ZIBWbj7BtMcU/j/VK+DNJ/5TV
2+8n3hdzmwp02C+HlMYHNbUnuPkXltoMYTOcP8/HtLUb3mViv//e+U0023CD
YuuJ8gpfZTfyTwd3yZVfeHbU05PKs2o6eTNyNs9r/is95wjWy+EblShB+xjP
Vwrqp97QD0yoz074PjKtxmHm9LN+FKAFLfZnQfzrnrQfEpGPDKRU+7W5Usxn
wuPewCD1Ntx3GuaHbgZbveh3/z58NRGs28vdZ5PrFPx/1Hj/0SDJ2Fr5cjT3
/8thTtowwu3rzxXn3zyeiH6gYFx2tai5BPGnQcaTJ1EbmnE/FDD8k1VnMjL7
7D8/WzYdqmzl/KDoWhx2JuP+SOBQbhevYxL1J2G0mlbt8nH7+D/W2r3q
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"<\\!\\(\\*SubscriptBox[\\(F\\), \
\\(i\\)]\\)\\!\\(\\*SubscriptBox[\\(>\\), \\(t\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[SubscriptBox[\\(k\\), \\(i\\)], \
\\(reconstr\\)]\\) | xthresh\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"RandomTopo: original / reconstructed | xthresh = 0.1\"", 
    TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.485607121705379*^9, 3.485607845956318*^9, 3.4868192602117558`*^9, {
   3.486819321150179*^9, 3.486819347787945*^9}, 3.486904968765868*^9, 
   3.4869053484455357`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "correlate", " ", "firing", " ", "frequency", " ", "with", " ", 
    "reconstruction", " ", "2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"adjAtest", "-=", 
     RowBox[{"Min", "@", "adjAtest"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"nonsense", ",", " ", 
      RowBox[{
      "because", " ", "it", " ", "includes", " ", "diagonal", " ", 
       "elements"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"adjAtest", "/=", 
     RowBox[{"Max", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"scatterAin", "=", 
     RowBox[{"scatterAout", "=", 
      RowBox[{"{", "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"ii", "=", "1"}], ",", 
      RowBox[{
       RowBox[{"ii", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
      RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAin", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Mean", "@", 
            RowBox[{
            "xinput", "\[LeftDoubleBracket]", "ii", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"Mean", "@", 
            RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
             RowBox[{"ii", ",", "All"}], "\[RightDoubleBracket]"}]}]}], 
          "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"scatterAout", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Mean", "@", 
            RowBox[{
            "xinput", "\[LeftDoubleBracket]", "ii", 
             "\[RightDoubleBracket]"}]}], ",", 
           RowBox[{"Mean", "@", 
            RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "ii"}], "\[RightDoubleBracket]"}]}]}], 
          "}"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"scatterAin", ",", "scatterAout"}], "}"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<<\!\(\*SubscriptBox[\(F\), \(i\)]\)\!\(\*SubscriptBox[\(>\), \
\(t\)]\)\>\"", ",", 
        "\"\<<\!\(\*SuperscriptBox[SubscriptBox[\(A\), \(ij\)], \(reconstr\)]\
\)\!\(\*SubscriptBox[\(>\), \(i/j\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"AbsolutePointSize", "[", "5", "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "@", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Mean", "@", 
           RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
            RowBox[{"#", ",", "All"}], "\[RightDoubleBracket]"}]}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"size", "/.", "pars"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Mean", "@", 
           RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}]}], "&"}], "/@", 
         RowBox[{"Range", "[", 
          RowBox[{"size", "/.", "pars"}], "]"}]}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<<\!\(\*SuperscriptBox[SubscriptBox[\(A\), \(ij\)], \
\(reconstr\)]\)\!\(\*SubscriptBox[\(>\), \(i\)]\) (in)\>\"", ",", 
        "\"\<<\!\(\*SuperscriptBox[SubscriptBox[\(A\), \(ij\)], \(reconstr\)]\
\)\!\(\*SubscriptBox[\(>\), \(j\)]\) (out)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"AbsolutePointSize", "[", "5", "]"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "ii", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.48506430583132*^9, 3.485064451016493*^9}, {
  3.4850645272873077`*^9, 3.485064795320882*^9}, {3.485065272724938*^9, 
  3.485065350548873*^9}, {3.485080430876397*^9, 3.485080499462368*^9}, {
  3.485606362703845*^9, 3.48560639955811*^9}, {3.485606430577292*^9, 
  3.4856064962544518`*^9}, {3.485606593725705*^9, 3.485606763449445*^9}, {
  3.485606849271052*^9, 3.48560692831063*^9}, {3.4856069979411182`*^9, 
  3.4856070679256783`*^9}, {3.48560714307627*^9, 3.4856071497916*^9}, {
  3.4856078417165728`*^9, 3.485607845106311*^9}, {3.486062672357417*^9, 
  3.486062686986578*^9}, {3.486819146834737*^9, 3.486819346955991*^9}, {
  3.4868194161997957`*^9, 3.486819474016737*^9}, {3.486819513721697*^9, 
  3.4868196288020153`*^9}, {3.486819659768879*^9, 3.486819725829378*^9}, {
  3.486904924370919*^9, 3.486904926353627*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], AbsolutePointSize[5], PointBox[CompressedData["
1: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
5TLDkGbojCWpr+cIzKmNHJ8wEcN/sEv9ow==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], AbsolutePointSize[5], 
    PointBox[CompressedData["
1:eJwVlHs41AkXxzXKbaVYu5MypKJWWmbpLS2dU/TmEn4z85uxo4trudTKdl8q
VPZN0UaKUSK3LXbX7BhDVsy4NDUja0JNluQdWbm2colodvaP85zn+995Pt/P
c6xCDjP3U7S0tMI08+++NCFPqvVloZB2aCWFI4UlIweILTwGup6+28mNkIBF
Zynl0GJfvDB+c2EYyQcrWqlpB8lEJWv5Y7fERqhNzy7tsCKQGpczJqRIICVx
emBvHIGj0X///1dVBVhfH57hVzLxRNNgaO5qOXBTRVQLPQbWxbc88AmUgLuy
NzBPycLodSp7mlIG9G+uVRZr7vG/wo3vv/wEdsTuXUGr9cGMvl9ISqYA7G4t
PDLHZaH90XXdIstGWBOwf3cNzwsNvmreNPFlEWyWZ659FrAL7aj1qdxqARwY
sKMOPmbiMZ8Z1/O2TSDujRhNz2egylxRp3RoAu3ilITmz33x+cj5svsJfCi5
Gn39dggb+7ezj93/UQYXFIqZkaUEFo23ECy2GBbMjXTFrCHRsUPrzumCBvBd
ZeD8gvRFS6w2V9cIQDS4Mq6YwkYf/tmPWYxHsNjkuFa5PwsLFQ2PmYMyANl4
2p5AFt75KLVspsuh6NOI+nemBK7JyjE1EEvgZGrNnjeeTHRc3u2SbFwPhQaJ
YsKGiVNuOgsc6I1Qmb1w8PxJD8xbNBZ2Z3c5NJZEvNqVSmBePYdZmFwBLxi2
MWp9BopGk+4pnKthb5OxN6FgoH3ZxMHvKVJYtZO/LeoyiUFP2yoajrVAVPhL
s/0lJFZG/tJZFFgLHo46oxkuTEzrbi2POdwAetljL5ts/ZG5CJ4ZG8ih/VpP
qRafiZx2/dzBe/Xwmv57pt86AtXBQ+rZVSKYfWsbO1bHQOWlnQNNZfWgsujr
mRCSeOvH9ozIy60wnzZuOFJK4M/O3lzO4AP4LaR7gQXBQKNa5hfDSQ9g5s2J
lVBFYMG+K6rw+UrYeCgjtCedQK00+lQZ7QEMS7tHnq0ncPFfygGz7gpQrfgz
JraMiescGB2v17ZC6CU3TkoJG4vSg6yXnpXDd6mxXRxTFpI6gk/nt/8BQy3L
Ld7QScSftIR1R5uhk56ySvzCEzvlCrLqAA+MpLS9gdME7uG92cq+KALp23T1
5ng/rKY5FIgnKyFpeKnTqSRfFMze/eSo/s+wIRdbtJ97ol1rW5f/31fhtko2
29TGxP8Su58ammn8/OzjNNnDwDzudy/1NVnBJY7cYhPY5naHfn1AAncvCl4v
K/PAqex7D63eZQLbLIybTCewb9H0kh+MGqDdw/EMtdwHC1woNRtz+KCh6XRL
SKCjmvLefH0VnE0IcOsxJnBH9rQTzV0MzsOu8kERC/XZXZZuQTKIPxzklb/V
Cwt9Qt1H/7wBQ0eGz+Q98UNWeWR3v1wEwuP6O4yCduCrqouUuG8vg+2m0mvq
OV8MohXOb7CSQPANk/+9Wq3x174068bkE/g8KTl4bTMDA1PM6QkJ9fB9SGTv
qB6JJpEHUmtvtwBVuj7d+hMW6oTohU/sUkD/loQP//KeN+J8LfZWgG7W2Oqg
OAZe51WOXmsTgyuvLz7xAgs/9G8xbZ2RQdFcXpLJEIlFVv2qnX2tkGOVl590
kESb3BXffjn3CPb94TSa8YSBm/PnNlwSNoLWkePqEyKNH7yeaQfv+zASXvdI
V+GBHN3JlNjnPNAVcvm6Q75YfGHriFxcDbo3/3LjRBMoM6S+N3VpgJ9IJ7uo
ST/Ud/V0frvnd2B/mDE+ne6H5uPevsGnKqDCbFt8T4kXzvu8i2EFZ4HwHCUK
owg8JFPl9nZUg7X92233HRmYGaY9YrOvBnYx8hvHIjT/70zCmtMB1TBZo63H
3sTCzmPnpE2BD2G8uc1QOMPAhHOCMBOnhzBfoDKM+4aFPFJYsMipAQaW+Fm8
Z7PwvMfO1V2GcvBy/+qEJc0Lh79us05T8qDKpJeZ1KHh8VCwLGdBHTQcz/nP
KUeNDz2eVw+6NEKXT33ozXA/VCTm2TxLrwD3qakVy24ycaWwvUp7owRaJMK4
9BR/jJbO5AVr+pR6M41Zt/1QfdGDOscXgZ9gtqXXhY0UnZM2L5MbIDJAoFs8
QOJTJe/51Vg5KM8wye1qAq/0dFC7tCXwD7Yz/6E=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"<\\!\\(\\*SubscriptBox[\\(F\\), \
\\(i\\)]\\)\\!\\(\\*SubscriptBox[\\(>\\), \\(t\\)]\\)\"", TraditionalForm], 
    FormBox[
    "\"<\\!\\(\\*SuperscriptBox[SubscriptBox[\\(A\\), \\(ij\\)], \
\\(reconstr\\)]\\)\\!\\(\\*SubscriptBox[\\(>\\), \\(i/j\\)]\\)\"", 
     TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.486819486694071*^9, 3.4868195164982023`*^9}, 
   3.486819549391719*^9, 3.4868196298033524`*^9, 3.486819689030747*^9, 
   3.486819721198077*^9, 3.4869049273206263`*^9}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], AbsolutePointSize[5], PointBox[CompressedData["
1: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
WkNKBP4FJXgkXg==
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameLabel->{
    FormBox[
    "\"<\\!\\(\\*SuperscriptBox[SubscriptBox[\\(A\\), \\(ij\\)], \
\\(reconstr\\)]\\)\\!\\(\\*SubscriptBox[\\(>\\), \\(i\\)]\\) (in)\"", 
     TraditionalForm], 
    FormBox[
    "\"<\\!\\(\\*SuperscriptBox[SubscriptBox[\\(A\\), \\(ij\\)], \
\\(reconstr\\)]\\)\\!\\(\\*SubscriptBox[\\(>\\), \\(j\\)]\\) (out)\"", 
     TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.486819486694071*^9, 3.4868195164982023`*^9}, 
   3.486819549391719*^9, 3.4868196298033524`*^9, 3.486819689030747*^9, 
   3.486819721198077*^9, 3.486904927330448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xmin", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Min", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], ",", "0."}], 
       "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"size", "/.", "pars"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xmax", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "#"}], "\[RightDoubleBracket]"}], ",", "0."}], 
       "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"size", "/.", "pars"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"Transpose", "@", 
   RowBox[{"{", 
    RowBox[{"xmin", ",", "xmax"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.486906255523533*^9, 3.486906367339264*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], PointBox[CompressedData["
1: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
56Z+aRR/A9aREd8=
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{{3.486906320130868*^9, 3.486906326126568*^9}, 
   3.486906368115827*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["improve reconstruction using DPI", "Subsubsection",
 CellChangeTimes->{{3.480936377600266*^9, 3.48093638353376*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"adjAtest", "=", 
   RowBox[{"<<", "\"\<adjA_iteration0.mx\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"<<", "\"\<pars_iteration0.mx\>\""}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "normalization", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjAtest", "-=", 
   RowBox[{"Min", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjAtest", "/=", 
   RowBox[{"Max", "@", "adjAtest"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.480678555383716*^9, 3.4806785677267647`*^9}, {
  3.480678862747755*^9, 3.480678916177001*^9}, {3.4806853673709927`*^9, 
  3.480685383039721*^9}, {3.4807604459525127`*^9, 3.480760450060767*^9}, {
  3.4807622626162577`*^9, 3.4807622651980333`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"executable", "\[Rule]", "teglobalsim"}], ",", 
   RowBox[{"iteration", "\[Rule]", "1"}], ",", 
   RowBox[{"size", "\[Rule]", "100"}], ",", 
   RowBox[{"rawdatabins", "\[Rule]", "255"}], ",", 
   RowBox[{"bins", "\[Rule]", "5"}], ",", 
   RowBox[{"cutoff", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"globalbins", "\[Rule]", "3"}], ",", 
   RowBox[{"samples", "\[Rule]", "359951"}], ",", 
   RowBox[{"p", "\[Rule]", "1"}], ",", 
   RowBox[{"noise", "\[Rule]", "0"}], ",", 
   RowBox[{"tauF", "\[Rule]", "20"}], ",", 
   RowBox[{"OverrideRescalingQ", "\[Rule]", "0"}], ",", 
   RowBox[{"HighPassFilterQ", "\[Rule]", "1"}], ",", 
   RowBox[{"InstantFeedbackTermQ", "\[Rule]", "1"}], ",", 
   RowBox[{
   "inputfile", 
    "\[Rule]", \
"\<\"../../Simulationen/NEST/calciumbursts2/Paris/RandomTopology/noisefree_\
rawCalcium_uchar_20ms.dat\"\>"}], ",", 
   RowBox[{
   "outputfile", 
    "\[Rule]", "\<\"Paris/RandomTopology/adjA_iteration0.mx\"\>"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.4808321663808937`*^9, 3.480847277529298*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjAtest2", "=", "adjAtest"}], ";"}]], "Input",
 CellChangeTimes->{3.480682687985463*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"adjAtestList", "=", 
   RowBox[{"{", "adjAtest2", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.480682705452898*^9, 3.48068272212567*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cutcount", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"threshold", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trials", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"cutcount", "<", 
      RowBox[{"6", "*", "size", "*", "size"}]}], "/.", "pars"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"trials", "++"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"trials", "=", "1"}], ",", 
        RowBox[{"trials", "\[LessEqual]", "10000"}], ",", 
        RowBox[{"trials", "++"}], ","}], " "}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"nodeA", "=", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nodeB", "=", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nodeC", "=", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"nodeA", "\[NotEqual]", "nodeB"}], ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{"nodeA", "\[NotEqual]", "nodeC"}], ")"}], "&&", 
        RowBox[{"(", 
         RowBox[{"nodeB", "\[NotEqual]", "nodeC"}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
              RowBox[{"nodeA", ",", "nodeB"}], "\[RightDoubleBracket]"}], ">", 
             RowBox[{
              RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
               RowBox[{"nodeA", ",", "nodeC"}], "\[RightDoubleBracket]"}], 
              "+", "threshold"}]}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
              RowBox[{"nodeB", ",", "nodeC"}], "\[RightDoubleBracket]"}], ">", 
             RowBox[{
              RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
               RowBox[{"nodeA", ",", "nodeC"}], "\[RightDoubleBracket]"}], 
              "+", "threshold"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"adjAtest2", "\[LeftDoubleBracket]", 
             RowBox[{"nodeA", ",", "nodeC"}], "\[RightDoubleBracket]"}], "*=",
             "0.2"}], ";", "\[IndentingNewLine]", 
           RowBox[{"cutcount", "++"}]}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Mod", "[", 
         RowBox[{"trials", ",", "1111"}], "]"}], "\[Equal]", "0"}], ",", " ", 
       
       RowBox[{"ShowStatus", "[", 
        RowBox[{"\"\<iteration: \>\"", "<>", 
         RowBox[{"ToString", "@", "trials"}], "<>", "\"\<, \>\"", "<>", 
         RowBox[{"ToString", "@", "cutcount"}], "<>", 
         "\"\< links 'deleted'.\>\""}], "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowStatus", "[", 
   RowBox[{
    RowBox[{"ToString", "@", "cutcount"}], "<>", 
    "\"\< links deleted. done.\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "nodeA", ",", "nodeB", ",", "nodeC", ",", "cutcount", ",", "threshold", 
    ",", "trials"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"adjAtestList", ",", "adjAtest2"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.480678596281137*^9, 3.4806786457148647`*^9}, {
   3.480678681671791*^9, 3.4806788115238028`*^9}, {3.480682284438579*^9, 
   3.4806825239739447`*^9}, {3.480682556657234*^9, 3.480682603046496*^9}, {
   3.480682644902224*^9, 3.480682692042822*^9}, {3.480682728664382*^9, 
   3.48068274498073*^9}, 3.480682898415853*^9, {3.48068293155744*^9, 
   3.480682931912211*^9}, {3.4806830202860193`*^9, 3.4806830393159943`*^9}, {
   3.480683079338276*^9, 3.480683142196333*^9}, {3.480683364631797*^9, 
   3.4806833649517508`*^9}, {3.480683712009158*^9, 3.480683716064137*^9}, {
   3.480684239654331*^9, 3.48068424226967*^9}, {3.480684349695077*^9, 
   3.480684456208832*^9}, {3.480684498463808*^9, 3.4806845493862534`*^9}, {
   3.480760488232847*^9, 3.480760488744523*^9}, 3.480762584708313*^9, {
   3.480848183247816*^9, 3.4808481875902023`*^9}, {3.480848218157962*^9, 
   3.4808482397231827`*^9}, {3.480848477627191*^9, 3.480848526311925*^9}, {
   3.480848583383294*^9, 3.480848639647026*^9}, {3.4808509207953167`*^9, 
   3.4808509387848186`*^9}, {3.480851025012274*^9, 3.480851037714612*^9}, {
   3.480851106967123*^9, 3.4808511368047543`*^9}, {3.480852499592277*^9, 
   3.4808525020269947`*^9}}],

Cell[BoxData[
 RowBox[{"Histogram", "@", 
  RowBox[{"Flatten", "@", "adjAtest"}]}]], "Input",
 CellChangeTimes->{3.480684228356267*^9}],

Cell[BoxData[
 RowBox[{"Histogram", "@", 
  RowBox[{"Flatten", "@", "adjAtest2"}]}]], "Input",
 CellChangeTimes->{{3.480684206553378*^9, 3.480684214275728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"GenerateROCsmart", "/@", "adjAtestList"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "0.1", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<fraction of false positives\>\"", ",", 
      "\"\<fraction of true positives\>\""}], "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<DPI test, 0,20k,40k,100k links 'deleted', \[Delta]=0.05, \[Beta]=0.2\
\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.474740995856892*^9, 3.474741026680674*^9}, 
   3.474741186986075*^9, {3.4747422479372463`*^9, 3.474742248016528*^9}, {
   3.474742433898234*^9, 3.474742517705682*^9}, {3.474742608081131*^9, 
   3.474742647999422*^9}, {3.474742678753622*^9, 3.4747428043592997`*^9}, {
   3.474742901752746*^9, 3.474743011901311*^9}, {3.474743062942629*^9, 
   3.474743340507278*^9}, {3.474743470076892*^9, 3.474743470370542*^9}, {
   3.474743765085475*^9, 3.474743769285421*^9}, {3.474748474655169*^9, 
   3.474748537069729*^9}, {3.4747486211507053`*^9, 3.4747486735914993`*^9}, {
   3.4747930603455477`*^9, 3.474793079587286*^9}, {3.474795461938671*^9, 
   3.474795462013392*^9}, 3.474795571760078*^9, {3.474796770612351*^9, 
   3.474796770722602*^9}, {3.4747969078556957`*^9, 3.474796908023662*^9}, {
   3.4747969696889963`*^9, 3.47479698889989*^9}, {3.474799999152094*^9, 
   3.474800001364915*^9}, {3.474800367391033*^9, 3.474800395950326*^9}, {
   3.47480059842556*^9, 3.474800603974517*^9}, {3.474800652907599*^9, 
   3.474800677466372*^9}, {3.4748014143608513`*^9, 3.47480141446445*^9}, {
   3.474801473955014*^9, 3.474801494683709*^9}, {3.474805298891848*^9, 
   3.474805362838647*^9}, {3.474805854648039*^9, 3.4748058622598963`*^9}, {
   3.474806601284293*^9, 3.474806635907362*^9}, {3.4748127171213427`*^9, 
   3.474812764284807*^9}, {3.474812817505763*^9, 3.474812919773937*^9}, {
   3.4776478129089727`*^9, 3.477647813451342*^9}, {3.47764787120218*^9, 
   3.477648005704123*^9}, {3.4777202013716793`*^9, 3.477720312026819*^9}, {
   3.4777203775445642`*^9, 3.477720383390071*^9}, {3.477723710972006*^9, 
   3.477723711371472*^9}, {3.477723752474642*^9, 3.477723785143512*^9}, {
   3.477725298410388*^9, 3.477725313013399*^9}, {3.4777255715180693`*^9, 
   3.477725589501719*^9}, 3.4779161407996893`*^9, {3.47843123206312*^9, 
   3.478431233359023*^9}, {3.478432210608664*^9, 3.478432214654282*^9}, {
   3.4796443401022797`*^9, 3.479644383185454*^9}, {3.4806701179987307`*^9, 
   3.480670175565246*^9}, {3.4806702058110533`*^9, 3.4806702115611353`*^9}, {
   3.480670264860865*^9, 3.4806702654642572`*^9}, {3.480671303465591*^9, 
   3.4806713148708363`*^9}, {3.480677594341346*^9, 3.480677613739243*^9}, {
   3.4806783395037603`*^9, 3.4806783708563433`*^9}, {3.48068285821833*^9, 
   3.480682858504294*^9}, {3.480683503135165*^9, 3.480683506717682*^9}, 
   3.4806841450453463`*^9, {3.4806845853905687`*^9, 3.480684605428741*^9}, {
   3.480684686753378*^9, 3.4806847105019217`*^9}, {3.480760523993568*^9, 
   3.480760524287778*^9}, {3.480760581046884*^9, 3.480760588307469*^9}, {
   3.480760702799645*^9, 3.4807607158314238`*^9}, {3.4807610008853083`*^9, 
   3.4807610154905157`*^9}, {3.480761084095068*^9, 3.4807610844290524`*^9}, {
   3.480762203493538*^9, 3.480762203731359*^9}, {3.48076281659762*^9, 
   3.480762816917019*^9}, {3.4807628516732283`*^9, 3.480762855254683*^9}, {
   3.480763098594466*^9, 3.48076310468676*^9}, {3.480848415175799*^9, 
   3.480848463329381*^9}, {3.480848550558113*^9, 3.480848559075593*^9}, {
   3.4808486438376827`*^9, 3.480848643939022*^9}, {3.480850947830635*^9, 
   3.480851014211185*^9}, {3.480851083966559*^9, 3.4808511136503057`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxdk3ss1WEYx+WgHSolkZJomKQyl2O57KuSNuo0mrHWoaGNMFZuaQndRP5w
t1zW5tbQCROay5FcctaZy8Hh6MhxDg7nVraKFuX381t/9Nl+e/c+7/M8+77f
5/1ZhMb639TU0NBgbH3E+j/nTtGZxgNhmBURlONjVXL6pawktJs9lvu1s/GZ
WfFeKX0G/+0AFOO5gbLWPBiyL4pTDLtBK34YXBldiq3NVqQXSqHXEPtyFXQF
lXEeuoOYvaZVnWLwGhuhQ6eLfnNh6VBXk0lvwlGimxkPxVq1ehJ6C5JIhqFa
rGtwu9dGnY8ic0cO25fWiXihZ+3u+DHEOjr30cx7sJptxQla5aPT07pfL7wX
z4lt9gTqXpkIu3h9GMgLsVvvn0Tkn5TCH28GKf1TuG89WOaEIeq+0+A2zoZP
t3FhTZRbzeDbZuKdgEkeaOWMkUiaCBHxrENzccNY7ycaitDNG9+rnzYCR5Iv
uMA0CZQWjFL952Bg3JchqB3DQd/UJqmxGNv+8rFgTATEKLM/suauMwHeJ4J5
1Gjbl+Q4TuLKYVlLOlOCTo7oemGCAGS5rxRjd7MtytumqHwpHKzcH7yzEVL5
CwiKsTCNbZzBHtKgRXj7u611MUXU/BbRNP8kJXd8FmS71CVE/GRcPe8+h2Mk
MiSE1DeyTMVUvgwc/tOMCaN53CINWAYrX1qkaSSh9C+jVl+7/uQjCVy23Cln
rKDLe5ox9kuCcR3XmJf8FbAHSgwqOFJKnxyZOz3NDV4sUPVyJEamfdiIXsQN
O8JRBTqcesSpjCVqXgqctV1q8NglA3lspwTd57ulq0pG6VEin1VqM/12mZqf
Ev6tOS2b8SvwIlHBxa85ar+VHBlMQoAKWQWqqAOtcpDj5agQ5pO8edtPgX0k
aqy1ldY3qxQIIFFDyAmu3pAr0dlBoMaJuDMyZ64K5HMWqGF4XCSwjVZT70+N
7b/o67/1L5trrTI=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJxdU3tIk1EclQTZeltipmkaVhaSRqLhoxMmFVbSRFLKqUliFtIkTVIbqfRY
Q6NJKzPJKDUTlOXMldFDU3r5fmSptVdzc/P7fCARU2vf7dIfHbjcP36v87vn
XK/kM9Epi+zs7MJsh7v/xw5lblmNVxTsywO70+yLILyZlcpOi+Avn0t+71cF
3v4TMYccC5HrVLdPk6NE06r1vLZrUtwp5fAMR4a2Fas85ZBc5fAakVOLSp38
KhCcXtHnENyG4NMr7F2F1RAr9GsOiN/jzr2DS5L8a/GimcNHfGr5+cw3rx5k
fHknDuRc37PrxhMk+f5qkyV2Y1NEq3W4oxGtsz7x11t6EJzRkqmeUWHexk4+
14ss9YxL/+IXiFZ5XDIL+lGSyBW+ovkD0P4WN92SvIGbUZkf5TaEZVN2vIjw
Vmwg+IqLu70DQrLbEMSNDxyB/9rBMl9rOywCruEoPBbY7NzSd8gm+I7mRl7k
rPcHFERxHdU4XfxcYXj0EZtexU1LN2rguZLf0SnsoPO0sPZJVlfZd6H2MQct
nIP6pQ/PddN8HXjhCu3lnB7KV4fYxK0nZyt7EUGgB6Hb0If1tu1UHj+QfleR
ktTQj8Z8jsAPCPxkX9+wA9hiq571MaD6Kr9ncmEQD0Vhiz8/MOCsQDmncxwC
CcePIUBVHlo4/IXmG5EpdFWLMAwij8IIIrt8hOpnwuHNUbeX530DeZ5uE1IS
Nng3TH+DjbxtAxOON+/UFsSpad04HJpKUkUhGuonMyrFAS8P12mwg8CMpTp+
zIcgLfWPGW5p86a3fB0+P+AIm5Fwfzgyz1NP9bSgxn0uobpYT/1gQb3gaZFy
QU/3s2DvgNN2L1cDSNh3AkfPX/ltHTXgFCEwAY9cZ7h0jlH+E/jSKJEJy4wg
dnZioJepM4+HmsB1E4UxlK8JZP10BqQ8dpz6m8Gn9rXHHALNVE8GHYKgwXVZ
ZrTLOOMxmCrU5FWKLVRflvK10P1ZcO7uvTCBDDKQhdSdm8CA0Klj8bIrRWON
Z+j/YCG85bBzpIuh78Pi76+d/Hf/AUU13NM=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJxdU21MjWEYbrFYxg8rSktDEctKFBquUtMsjgnJlBJ9TSnJcEzykQlJJyJJ
5Kx2sKycKKHvU1E5dErfdeqcnI/3nFOMllW8z+vB5trePbt33+9138913c+C
kBjfUGMjIyN39iPn/1gpPpUlWsDDlGxXaeSUFFzNm1YZwY+FU8Z4SINjHibj
tovHB89iVnyne/5MMWYEO1mFRyXju31AatW3EnwXCUfXKNJhpRKf5VlV4MVs
m+m1l7NwyqzAW86vwevqnxOHHR9CGLve9NPDeti3GFs0SkQ4QsLYJuyUmK8N
DSgEYY/vlCKufonvy6fFWFzu/+WKXQtyQzb5BWa+QPIlAhlOi+633jJ9iceP
CNqQ4Lw8sTLqFe3XjrzE2mvrr5Qj/jchzn/KF/QOVoAlYxm70NNRtm6qbRXt
3wNZiot3j381ZCZu0fdbevHArz9OeqgGbJKt6MMsfkpRtLAWEkGQw1htP3L7
oqx/NEngQdjd5TAvijy3s7kBS4kc9gMIU1pPGo6/A4kCUgfwLMZFcmO4EVw6
YBC/VZfCJ6FQMddHAeHXOZ5uMR+wjRNQCR9+queGtI+0bgjz9hwL3bdQBlKd
UMjG3bx7lToZJlh3MsaH8D4wu1SU2wYlSSs+g7PHsp3yqxB1O7Xm4lg71U8F
+ajbMYV5J+R8IpgKd3K2sJZ20f5qCEeS4rYKurCLgxpvn6e15fC6kU6uL1DD
a+Ozo7vDe6nfGhidXlx3d1UfwjhoEHaw9ebJ5H5w9pVrkB6YZd9RLIdNknZ7
yXwtrIYWFe7fMED11+KJS71dpXoAr8oItJhQ5kaM1f3RiUERszdlhZ0CCzkw
cLy+ecQ4UwHfkvksI4OcTf76yAtKNDUSMDgxLk+ssxmi+jCoin3ji3mfqf46
VAS7Nrc7q8CNk6TDAbJet1S0vw7klkEOapC/Qxp0cM9es99tWI1pZD1M9BCf
NO1Y5aHBava1ZLvqYetk2ZbloKV+65EmZbpbM7V03/UIjxh13eHJ0PeiR051
QrFJKQMLziADmndrvAdn6Oi+G3CD6fRqKNBRfQy4LCAC6ui8Brggc05FsB5k
280KDDjHI078i0+cKStdptWjmoxTZaA6Dv89fwHLbfzH
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJxdVA1MVWUYhmCXCYGzkJ8wjN+MFGgwaBI+2lRU8ib+wYpFQzRMMSCbKEQo
c+ZQGJCEoEFjhMQg5PKnwBAIELsGduHCJf7u/72ce85RkJFC0jmHb7L1bGff
3rPzfc/7PO9zPrfYr/YffcXMzOwg9/Dr/xFQn1pc6SaGxc2ggeMWV7Fcn0LX
3IbonM5y/JLRnR2a9R3+je3zK1isw+N/usxzcAUPpTxaoVpKb/rxci64zdwJ
HTDPejPVAYU4JKAbbg6tW649/QlrBPTBqyUoou5EGexOj26tsJXC5pNvK0uH
KmA9XJYYat2PZ70e/s7yKlhtTiiVif5CJ61xHhPXID9m47PuPBkyhyvyJtS1
2KU8Z18TNgRfq7adiqA6CO3flMPPNrG55KEEy+pG4N17IxDXG2GKaHa9SCng
er6vdiLuDoKFhsdw8ocEj2q04YpXe9RM1jhGfE46hkXfgzdfek3iRXJE/aK6
A/4Fi5wDU6BHt/fV7P2d8CuRsdUzMORMNypseUFKRPjljXaw3cQPJT6v3ua7
StyL8PTbGsdwFdqHnA50zvZCkH9aBW2RZ5N97X0IdO0qbEor+aNzvg8BAtTk
uwf4UhiQGg8ac+UlYil48nP2GnTo37u1tllK+tNA0fTGkT0pf4JXG9GsgfrK
Jovi8n4Y6s+LXQwapDoNGO4GDhB9Wsy95bR39YVHENpL1+Lw2D5OwSMIx9do
8Vu4xTrmCxn2CwfqoP7eJraDkkGgK9BhPU/jOkT61WMyfiHq6To56VePKWow
N9IgB68uakaPo9G5B3rWKsBPd3OCAfHJ0t2z+QoyPwO8dx6U3v/1b/DTjtlo
hCqjd71dyhjx24jn+2pHP3x/AgLtRSPa9iwMV9VPkrwasSY7eKR6xxTe4aq5
DdNw4dx4kawk509juNzcbl6ixKCID9g0tIX5urdlKnzswjtEYUDDv1BD2B5N
wVMyY7c0r0ZrCw8KIv/CqwGNGqKHgtxVFHjXVwt3ASakLCq5jnWEz4TIIx+t
6o/RoSePD7AJoZezQ56L9XASAkEjMeSsqClfT+ZBo8jVssy4zUD+HxqOnU9E
LQ0GMh8asVtec9F5GFF0nQeNwUsXhhw43cv6aZIfI8kfDRNvf+M08YPBCRtl
Sub4Sj2bf9z81WMUUoVAMbB0/1lxp4qCID+HQbG79/auBQoC/W0G15J2iJ0j
TUQPgyeZyrTydBPJFwPO3LPWChO5T1jEeDZkTlIrtf27p2457qZJblj4ve7h
cyxupTYdGm3/rJwm82YRFDYe9fUgTebBIvNwjE/8HI0zAliSe+ZlnXRPvdrq
A4bkg4Uvl/6lNIbcHywk3xiCP73EEP9YxMksK29IGAhxLGXRYCaSJPUwaODl
1LPkHnn8cv0Pd1CZgg==
     "]]}},
  AspectRatio->1,
  Frame->True,
  FrameLabel->{
    FormBox["\"fraction of false positives\"", TraditionalForm], 
    FormBox["\"fraction of true positives\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  GridLines->{{0.1}, {}},
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox[
   "\"DPI test, 0,20k,40k,100k links 'deleted', \[Delta]=0.05, \[Beta]=0.2\"",
     TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4808511688631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"<<", "\"\<pars_iteration0.mx\>\""}], "]"}], ";"}]], "Input",
 CellChangeTimes->{3.480762271285222*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"executable", "\[Rule]", "teglobalsim"}], ",", 
   RowBox[{"iteration", "\[Rule]", "1"}], ",", 
   RowBox[{"size", "\[Rule]", "100"}], ",", 
   RowBox[{"rawdatabins", "\[Rule]", "255"}], ",", 
   RowBox[{"bins", "\[Rule]", "5"}], ",", 
   RowBox[{"cutoff", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"globalbins", "\[Rule]", "3"}], ",", 
   RowBox[{"samples", "\[Rule]", "359951"}], ",", 
   RowBox[{"p", "\[Rule]", "1"}], ",", 
   RowBox[{"noise", "\[Rule]", "0"}], ",", 
   RowBox[{"tauF", "\[Rule]", "20"}], ",", 
   RowBox[{"OverrideRescalingQ", "\[Rule]", "0"}], ",", 
   RowBox[{"HighPassFilterQ", "\[Rule]", "1"}], ",", 
   RowBox[{"InstantFeedbackTermQ", "\[Rule]", "1"}], ",", 
   RowBox[{
   "inputfile", 
    "\[Rule]", \
"\<\"../../Simulationen/NEST/calciumbursts2/Paris/RandomTopology/noisefree_\
rawCalcium_uchar_20ms.dat\"\>"}], ",", 
   RowBox[{
   "outputfile", 
    "\[Rule]", "\<\"Paris/RandomTopology/adjA_iteration0.mx\"\>"}]}], 
  "}"}]], "Print",
 CellChangeTimes->{3.480762271806604*^9, 3.480762369662961*^9, 
  3.4808490071028433`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"xROC3D", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"i", "+", "1"}], ",", 
         RowBox[{"xROClist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "x", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"xROClist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "x", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "@", "xROClist"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "101"}], "}"}]}], "]"}], ",", "1"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.474800775406789*^9, 3.474800790890596*^9}, {
  3.474800903672546*^9, 3.47480098796875*^9}, {3.474801056345315*^9, 
  3.474801058653694*^9}, {3.47480124931775*^9, 3.474801283403082*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"xROC3D", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<AvocadoColors\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.474800991099903*^9, 3.4748010051943073`*^9}, {
   3.474801037266527*^9, 3.474801038009386*^9}, {3.474801086725808*^9, 
   3.474801093571702*^9}, {3.474801126292927*^9, 3.474801154355152*^9}, 
   3.474801226394866*^9, {3.4748013000407553`*^9, 3.4748013170568657`*^9}, {
   3.474807460909142*^9, 3.474807512774122*^9}, {3.4748076528975554`*^9, 
   3.474807691745488*^9}, {3.4748118920464983`*^9, 3.474811892859372*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xdata", "=", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Sort", "@", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"adjA", "\[LeftDoubleBracket]", 
              RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
             RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
              RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"ii", ",", 
             RowBox[{"Length", "@", "adjA"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"jj", ",", 
             RowBox[{"Length", "@", "adjA"}]}], "}"}]}], "]"}], ",", "1"}], 
        "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0.0"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "test", " ", "if", " ", "exactly", " ", "the", " ", "diagonal", " ", 
    "elements", " ", "have", " ", "been", " ", "deleted"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "@", "xdata"}], "!=", 
     RowBox[{
      RowBox[{"Length", "@", "adjA"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Length", "[", "adjA", "]"}], "-", "1"}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"Print", "@", 
      RowBox[{"Length", "@", "xdata"}]}], ";", 
     RowBox[{"Abort", "[", "]"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xhistodata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Last", "@", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "_"}], "}"}]}], "]"}]}]}], ",", 
     RowBox[{"Last", "@", 
      RowBox[{"Transpose", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}]}]}], "}"}]}], ";", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"xhistodata", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], Cell[
   ""]}]}]}], "Input",
 CellChangeTimes->{{3.4779169899988213`*^9, 3.477917091675375*^9}, {
  3.4779171907306957`*^9, 3.4779172131680937`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tenpercent", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "33"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"index", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"xROClist", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", "index", ",", "1"}], "\[RightDoubleBracket]"}], 
        ">", "0.2"}], ",", 
       RowBox[{"index", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"tenpercent", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "+", "i"}], ",", 
         RowBox[{"xROClist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "index", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.474743998776475*^9, 3.474744178507778*^9}, {
  3.474744272303461*^9, 3.474744272417762*^9}, {3.474744322550535*^9, 
  3.474744353381731*^9}, {3.4747465044290857`*^9, 3.4747465045634747`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"tenpercent", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.474744184607959*^9, 3.4747441912414093`*^9}, {
  3.474746516618752*^9, 3.47474652304937*^9}}],

Cell[BoxData[
 GraphicsBox[
  {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBGIQDQUOy3lLbjksf24P4XI42HJdX1xg+wjKF3Bgt8pd
cJkNxhdxAPGscp9A+RIOh79qxPQfegrlyzh0doDAMyhfwaH/EEgBjK/kEAoG
MPtUHM6eAQGYvJrDDrnW14E7YHwNh/0Rn7pV98P4Wg46P49OiteB6ddxWL0K
BGDyemj2GzgkgDXA+IYO3nUbn4h7w/hGDmDvWcHcb4zmPxOHyfEgAx5D+aYO
Hg+rRNa5w/hmDj2qIBfC+OZQ98PCy8Lhb9JJ/Wl/HkD5lg7g4OV6COVbQcP3
HpRv7XDvLhhA+TYOoNgBRhGUb+tgMO0P0EQY384hCGzhDSjf3kEzBhTiML4D
1D3XIPwGBwdBMLgKlXd0AHvn4SV7APUzmR8=
    "]]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Frame->True,
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotRange->Automatic,
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{
  3.474744191964679*^9, {3.47474427509289*^9, 3.4747442949079742`*^9}, {
   3.474744328412201*^9, 3.474744356160632*^9}, {3.4747465074047937`*^9, 
   3.474746523641286*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
improve reconstruction using DPI - the ARACHNE two thresholds way\
\>", "Subsubsection",
 CellChangeTimes->{{3.480936377600266*^9, 3.48093638353376*^9}, {
  3.483177524479438*^9, 3.483177533533044*^9}, {3.483197700384252*^9, 
  3.4831977040620127`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"adjAtest", "-=", 
   RowBox[{"Min", "@", "adjAtest"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"adjAtest", "/=", 
   RowBox[{"Max", "@", "adjAtest"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.483202107141906*^9, 3.483202143348522*^9}}],

Cell[BoxData[
 RowBox[{"Histogram", "@", 
  RowBox[{"Flatten", "@", "adjAtest"}]}]], "Input",
 CellChangeTimes->{{3.4832602965207853`*^9, 3.483260319204958*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImbalanceIndex", "[", 
    RowBox[{"AB_", ",", "ACx_", ",", "BC_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"1", ",", 
     FractionBox[
      RowBox[{"2", " ", "ACx"}], 
      RowBox[{"AB", "+", "BC"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"imbalanceArray", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"size", "/.", "pars"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"size", "/.", "pars"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"size", "/.", "pars"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "go", " ", "through", " ", "the", " ", "triples", " ", "exaustively"}], 
    ",", " ", 
    RowBox[{"and", " ", "save", " ", "imbalace", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"nodeA", "=", "1"}], ",", 
    RowBox[{
     RowBox[{"nodeA", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
    RowBox[{"nodeA", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ShowStatus", "[", 
      RowBox[{"\"\<running: nodeA = \>\"", "<>", 
       RowBox[{"ToString", "@", "nodeA"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"nodeB", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"nodeB", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
       RowBox[{"nodeB", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"nodeC", "=", "1"}], ",", 
         RowBox[{
          RowBox[{"nodeC", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
         RowBox[{"nodeC", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "if", " ", "the", " ", "nodes", " ", "are", " ", "really", " ", "a",
            " ", "triple"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"nodeA", "\[NotEqual]", "nodeB"}], ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{"nodeA", "\[NotEqual]", "nodeC"}], ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{"nodeB", "\[NotEqual]", "nodeC"}], ")"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
              RowBox[{"nodeA", ",", "nodeB", ",", "nodeC"}], 
              "\[RightDoubleBracket]"}], "=", 
             RowBox[{"ImbalanceIndex", "[", 
              RowBox[{
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"nodeA", ",", "nodeB"}], "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"nodeA", ",", "nodeC"}], "\[RightDoubleBracket]"}], 
               ",", 
               RowBox[{"adjAtest", "\[LeftDoubleBracket]", 
                RowBox[{"nodeB", ",", "nodeC"}], "\[RightDoubleBracket]"}]}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"nodeA", ",", "nodeB", ",", "nodeC"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowStatus", "[", "\"\<done.\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.4831775446315002`*^9, 3.483177609702518*^9}, {
   3.483177649287661*^9, 3.483177682125402*^9}, {3.483178299950508*^9, 
   3.483178438535005*^9}, {3.483187073668414*^9, 3.483187189129549*^9}, {
   3.483187306234747*^9, 3.483187328353855*^9}, {3.483197375503375*^9, 
   3.483197510775194*^9}, 3.483198643070773*^9, {3.4831997001080103`*^9, 
   3.483199712101619*^9}, {3.483200084978307*^9, 3.483200272845621*^9}, 
   3.483200421600485*^9, {3.48320046938721*^9, 3.483200475648855*^9}, {
   3.483200567355371*^9, 3.483200572404264*^9}, 3.483200689193619*^9, {
   3.4832007211212053`*^9, 3.48320072188879*^9}, {3.4832606787078037`*^9, 
   3.483260680313407*^9}, {3.483260742167755*^9, 3.483260756731942*^9}}],

Cell[BoxData[
 RowBox[{"Histogram", "@", 
  RowBox[{"Flatten", "@", "imbalanceArray"}]}]], "Input",
 CellChangeTimes->{{3.483200576649558*^9, 3.483200589231461*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Single2DROCpoint", "[", 
   RowBox[{"xadjA_", ",", "tPresent_", ",", "tImbalanced_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ii", ",", "jj", ",", "nodeA", ",", "nodeB", ",", "nodeC", ",", 
      "modifiedA", ",", "xdata", ",", "xP", ",", "xTP", ",", "xN", ",", "xFP",
       ",", 
      RowBox[{"\[Beta]", "=", "0.5"}], ",", "xmaxi"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"modifiedA", "=", "xadjA"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "go", " ", "through", " ", "the", " ", "triples", " ", "exaustively"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"nodeA", "=", "1"}], ",", 
       RowBox[{
        RowBox[{"nodeA", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
       RowBox[{"nodeA", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"ShowStatus", "[", 
          RowBox[{"\"\<running: nodeA = \>\"", "<>", 
           RowBox[{"ToString", "@", "nodeA"}]}], "]"}], ";"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"nodeB", "=", "1"}], ",", 
         RowBox[{
          RowBox[{"nodeB", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
         RowBox[{"nodeB", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xadjA", "\[LeftDoubleBracket]", 
               RowBox[{"nodeA", ",", "nodeB"}], "\[RightDoubleBracket]"}], 
              ">", "tPresent"}], ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xadjA", "\[LeftDoubleBracket]", 
               RowBox[{"nodeB", ",", "nodeA"}], "\[RightDoubleBracket]"}], 
              ">", "tPresent"}], ")"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"nodeC", "=", "1"}], ",", 
              RowBox[{
               RowBox[{"nodeC", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
              RowBox[{"nodeC", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "the", " ", "nodes", " ", "are", " ", "really", " ",
                 "a", " ", "triple"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"nodeA", "\[NotEqual]", "nodeB"}], ")"}], "&&", 
                 RowBox[{"(", 
                  RowBox[{"nodeA", "\[NotEqual]", "nodeC"}], ")"}], "&&", 
                 RowBox[{"(", 
                  RowBox[{"nodeB", "\[NotEqual]", "nodeC"}], ")"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"(*", " ", 
                 RowBox[{"examine", " ", "AC"}], " ", "*)"}], 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeB"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}]}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "<", "tImbalanced"}], ",", 
                    RowBox[{
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"\[Beta]", "*", 
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{"examine", " ", "CA"}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeB"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}]}], 
                   ",", "\[IndentingNewLine]", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "<", "tImbalanced"}], ",", 
                    RowBox[{
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"\[Beta]", "*", 
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}]}], 
                  "\[IndentingNewLine]", "]"}], ";"}]}], 
               "\[IndentingNewLine]", "]"}]}], "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"xdata", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"adjA", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                 RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], 
               "}"}], ",", 
              RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"Length", "@", "adjA"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"jj", ",", 
              RowBox[{"Length", "@", "adjA"}]}], "}"}]}], "]"}], ",", "1"}], 
         "]"}], ",", 
        RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xP", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xmaxi", "=", 
      RowBox[{"Max", "@", 
       RowBox[{"Flatten", "@", "modifiedA"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"xTP", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", ">", 
                RowBox[{"tPresent", "*", "xmaxi"}]}], ")"}], "&"}], ")"}]}]}],
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"xN", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"xFP", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"xdata", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"_", "?", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"#", ">", 
                RowBox[{"tPresent", "*", "xmaxi"}]}], ")"}], "&"}], ")"}]}]}],
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"N", "@", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["xFP", "xN"], ",", 
        FractionBox["xTP", "xP"]}], "}"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.4832008532374496`*^9, 3.483200996722474*^9}, {
   3.483201031840218*^9, 3.483201205792165*^9}, {3.483201243181782*^9, 
   3.483201358111843*^9}, {3.483201462087695*^9, 3.483201577694518*^9}, {
   3.4832016362349463`*^9, 3.483201730980852*^9}, {3.483201787122869*^9, 
   3.4832018225280037`*^9}, {3.483201867990621*^9, 3.483201954899682*^9}, {
   3.483201998279614*^9, 3.4832020200751057`*^9}, 3.4832020776035357`*^9, {
   3.483202154236219*^9, 3.483202172738968*^9}, {3.483202364847303*^9, 
   3.483202391841172*^9}, {3.483202431004537*^9, 3.483202433172394*^9}, 
   3.483258694061796*^9, {3.48325896708335*^9, 3.48325897003384*^9}, 
   3.483259372047881*^9, {3.483261183849527*^9, 3.483261218863614*^9}, {
   3.483261731660911*^9, 3.483261777688139*^9}, {3.483262235121768*^9, 
   3.483262241602392*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"x3Ddata", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", "\"\<leer\>\"", "}"}], ",", 
     RowBox[{"{", "21", "}"}], ",", 
     RowBox[{"{", "21", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"tPresent", "=", "0"}], ",", 
    RowBox[{"tPresent", "\[LessEqual]", "20"}], ",", 
    RowBox[{"tPresent", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"tImbalanced", "=", "0"}], ",", 
      RowBox[{"tImbalanced", "\[LessEqual]", "20"}], ",", 
      RowBox[{"tImbalanced", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tP", "=", 
        RowBox[{"tPresent", "/", "20."}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tI", "=", 
        RowBox[{"tImbalanced", "/", "20."}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ShowStatus", "[", 
        RowBox[{"\"\<running: tPresent = \>\"", "<>", 
         RowBox[{"ToString", "@", "tP"}], "<>", "\"\<, tImbalanced = \>\"", "<>", 
         RowBox[{"ToString", "@", "tI"}], "<>", "\"\< ...\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"x3Ddata", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{"tPresent", "+", "1"}], ",", 
          RowBox[{"tImbalanced", "+", "1"}]}], "\[RightDoubleBracket]"}], "=", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{"tI", ",", 
           RowBox[{"Single2DROCpoint", "[", 
            RowBox[{"adjAtest", ",", "tP", ",", "tI"}], "]"}]}], "}"}]}]}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"tp", ",", "tI", ",", "tPresent", ",", "tImbalanced"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x3Ddata", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"x3Ddata", ",", "1"}], "]"}], ",", 
     RowBox[{"{", "\"\<leer\>\"", "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowStatus", "[", "\"\<done\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.483210776813054*^9, 3.48321082249439*^9}, {
  3.483210892879805*^9, 3.4832110022424726`*^9}, {3.4832587896785603`*^9, 
  3.4832587945247307`*^9}, {3.483258960648225*^9, 3.4832590337584476`*^9}, {
  3.4832593739355927`*^9, 3.4832594846116877`*^9}, {3.4832595205210743`*^9, 
  3.483259522576153*^9}, {3.483260228269636*^9, 3.483260242020328*^9}, {
  3.4832623992616653`*^9, 3.483262413202915*^9}, {3.4832625130399218`*^9, 
  3.483262578977055*^9}, {3.483262713833522*^9, 3.483262746127451*^9}, {
  3.4832629503476954`*^9, 3.483262951704413*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Single2DROCpoint", "[", 
  RowBox[{"adjAtest", ",", "0.5", ",", "0.5"}], "]"}]], "Input",
 CellChangeTimes->{{3.48320174762077*^9, 3.483201750363016*^9}, {
   3.483201961639517*^9, 3.483201967102*^9}, 3.483202050626544*^9, 
   3.483202179216909*^9, {3.483202459217799*^9, 3.4832024905482903`*^9}, {
   3.483258732717351*^9, 3.483258733365348*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0014942528735632185`", ",", "0.07666666666666666`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.483201977329183*^9, 3.4832020599921627`*^9, {3.4832021595349483`*^9, 
   3.4832021889810038`*^9}, 3.4832023978955517`*^9, {3.483202461371924*^9, 
   3.483202492705282*^9}, 3.483258735479412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", "x3Ddata", "]"}]], "Input",
 CellChangeTimes->{{3.483264068419529*^9, 3.483264069728538*^9}, {
  3.48326420619372*^9, 3.4832642076874866`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {Hue[0.67, 0.6, 0.6], 
   Point3DBox[{{0, 1., 1.}, {0.05, 1., 1.}, {0.1, 1., 1.}, {
     0.15000000000000002`, 1., 1.}, {0.2, 1., 1.}, {0.25, 1., 1.}, {
     0.30000000000000004`, 1., 1.}, {0.35000000000000003`, 1., 1.}, {0.4, 1., 
     1.}, {0.45, 1., 1.}, {0.5, 1., 1.}, {0.55, 1., 1.}, {0.6000000000000001, 
     1., 1.}, {0.65, 1., 1.}, {0.7000000000000001, 1., 1.}, {0.75, 1., 1.}, {
     0.8, 1., 1.}, {0.8500000000000001, 1., 1.}, {0.9, 1., 1.}, {
     0.9500000000000001, 1., 1.}, {1., 1., 1.}, {
     0, 0.4654022988505747, 0.8616666666666667}, {0.05, 0.4654022988505747, 
     0.8616666666666667}, {0.1, 0.4651724137931034, 0.8616666666666667}, {
     0.15000000000000002`, 0.4386206896551724, 0.8616666666666667}, {0.2, 
     0.3585057471264368, 0.8541666666666666}, {0.25, 0.26839080459770115`, 
     0.835}, {0.30000000000000004`, 0.1947126436781609, 0.8}, {
     0.35000000000000003`, 0.13701149425287357`, 0.7558333333333334}, {0.4, 
     0.09919540229885057, 0.6858333333333333}, {0.45, 0.07241379310344828, 
     0.62}, {0.5, 0.05264367816091954, 0.5558333333333333}, {0.55, 
     0.03793103448275862, 0.5}, {0.6000000000000001, 0.0232183908045977, 
     0.445}, {0.65, 0.014367816091954023`, 0.39}, {0.7000000000000001, 
     0.009080459770114943, 0.35083333333333333`}, {0.75, 0.005057471264367816,
      0.30333333333333334`}, {0.8, 0.0026436781609195403`, 0.2575}, {
     0.8500000000000001, 0.0009195402298850574, 0.22166666666666668`}, {0.9, 
     0.00022988505747126436`, 0.1925}, {0.9500000000000001, 0., 
     0.16166666666666665`}, {1., 0., 0.135}, {
     0, 0.25160919540229887`, 0.6858333333333333}, {0.05, 
     0.25160919540229887`, 0.6858333333333333}, {0.1, 0.25160919540229887`, 
     0.6858333333333333}, {0.15000000000000002`, 0.25160919540229887`, 
     0.6858333333333333}, {0.2, 0.24793103448275863`, 0.6858333333333333}, {
     0.25, 0.22528735632183908`, 0.6816666666666666}, {0.30000000000000004`, 
     0.18229885057471265`, 0.675}, {0.35000000000000003`, 
     0.13275862068965516`, 0.6658333333333334}, {0.4, 0.08735632183908046, 
     0.6333333333333333}, {0.45, 0.0571264367816092, 0.585}, {0.5, 
     0.035402298850574714`, 0.5291666666666667}, {0.55, 0.02057471264367816, 
     0.47}, {0.6000000000000001, 0.012873563218390805`, 0.41}, {0.65, 
     0.008620689655172414, 0.35083333333333333`}, {0.7000000000000001, 
     0.006666666666666667, 0.3075}, {0.75, 0.004022988505747126, 0.265}, {0.8,
      0.002413793103448276, 0.22583333333333333`}, {0.8500000000000001, 
     0.0009195402298850574, 0.1975}, {0.9, 0.00022988505747126436`, 
     0.17416666666666666`}, {0.9500000000000001, 0., 0.14583333333333334`}, {
     1., 0., 0.12083333333333333`}, {0, 0.14563218390804597`, 0.5125}, {0.05, 
     0.14563218390804597`, 0.5125}, {0.1, 0.14563218390804597`, 0.5125}, {
     0.15000000000000002`, 0.14563218390804597`, 0.5125}, {0.2, 
     0.14563218390804597`, 0.5125}, {0.25, 0.14482758620689656`, 0.5125}, {
     0.30000000000000004`, 0.1367816091954023, 0.5108333333333334}, {
     0.35000000000000003`, 0.11494252873563218`, 0.5075}, {0.4, 
     0.08241379310344828, 0.5025}, {0.45, 0.057931034482758624`, 
     0.47833333333333333`}, {0.5, 0.036436781609195404`, 0.45}, {0.55, 
     0.02057471264367816, 0.42083333333333334`}, {0.6000000000000001, 
     0.012298850574712644`, 0.3775}, {0.65, 0.006666666666666667, 
     0.3333333333333333}, {0.7000000000000001, 0.004252873563218391, 
     0.2875}, {0.75, 0.0021839080459770113`, 0.24}, {0.8, 
     0.0010344827586206897`, 0.205}, {0.8500000000000001, 
     0.0005747126436781609, 0.18083333333333335`}, {0.9, 
     0.00011494252873563218`, 0.14916666666666667`}, {0.9500000000000001, 0., 
     0.115}, {1., 0., 0.08666666666666667}, {
     0, 0.07908045977011494, 0.3925}, {0.05, 0.07908045977011494, 0.3925}, {
     0.1, 0.07908045977011494, 0.3925}, {0.15000000000000002`, 
     0.07908045977011494, 0.3925}, {0.2, 0.07908045977011494, 0.3925}, {0.25, 
     0.07908045977011494, 0.3925}, {0.30000000000000004`, 0.07827586206896552,
      0.3925}, {0.35000000000000003`, 0.07528735632183908, 
     0.39166666666666666`}, {0.4, 0.06333333333333334, 
     0.39166666666666666`}, {0.45, 0.049885057471264364`, 0.385}, {0.5, 
     0.03505747126436782, 0.37416666666666665`}, {0.55, 0.020919540229885056`,
      0.3566666666666667}, {0.6000000000000001, 0.013218390804597701`, 
     0.3325}, {0.65, 0.007241379310344828, 0.30416666666666664`}, {
     0.7000000000000001, 0.004252873563218391, 0.27416666666666667`}, {0.75, 
     0.0020689655172413794`, 0.23083333333333333`}, {0.8, 
     0.0009195402298850574, 0.20083333333333334`}, {0.8500000000000001, 
     0.0004597701149425287, 0.1775}, {0.9, 0.00011494252873563218`, 0.15}, {
     0.9500000000000001, 0., 0.12083333333333333`}, {1., 0., 
     0.09083333333333334}, {0, 0.04597701149425287, 0.31083333333333335`}, {
     0.05, 0.04597701149425287, 0.31083333333333335`}, {0.1, 
     0.04597701149425287, 0.31083333333333335`}, {0.15000000000000002`, 
     0.04597701149425287, 0.31083333333333335`}, {0.2, 0.04597701149425287, 
     0.31083333333333335`}, {0.25, 0.04597701149425287, 
     0.31083333333333335`}, {0.30000000000000004`, 0.04597701149425287, 
     0.31083333333333335`}, {0.35000000000000003`, 0.04551724137931035, 
     0.31083333333333335`}, {0.4, 0.0432183908045977, 0.31083333333333335`}, {
     0.45, 0.03804597701149425, 0.31}, {0.5, 0.029770114942528736`, 
     0.30416666666666664`}, {0.55, 0.01942528735632184, 0.2991666666666667}, {
     0.6000000000000001, 0.013218390804597701`, 0.28583333333333333`}, {0.65, 
     0.007816091954022988, 0.2725}, {0.7000000000000001, 0.004597701149425287,
      0.25166666666666665`}, {0.75, 0.0022988505747126436`, 
     0.21833333333333332`}, {0.8, 0.0009195402298850574, 0.195}, {
     0.8500000000000001, 0.0004597701149425287, 0.175}, {0.9, 
     0.00011494252873563218`, 0.15166666666666667`}, {0.9500000000000001, 0., 
     0.12583333333333332`}, {1., 0., 0.1}, {
     0, 0.027586206896551724`, 0.23666666666666666`}, {0.05, 
     0.027586206896551724`, 0.23666666666666666`}, {0.1, 
     0.027586206896551724`, 0.23666666666666666`}, {0.15000000000000002`, 
     0.027586206896551724`, 0.23666666666666666`}, {0.2, 
     0.027586206896551724`, 0.23666666666666666`}, {0.25, 
     0.027586206896551724`, 0.23666666666666666`}, {0.30000000000000004`, 
     0.027586206896551724`, 0.23666666666666666`}, {0.35000000000000003`, 
     0.027471264367816092`, 0.23666666666666666`}, {0.4, 0.02689655172413793, 
     0.23666666666666666`}, {0.45, 0.02517241379310345, 
     0.23666666666666666`}, {0.5, 0.022068965517241378`, 
     0.23583333333333334`}, {0.55, 0.015862068965517243`, 
     0.23416666666666666`}, {0.6000000000000001, 0.01206896551724138, 
     0.2275}, {0.65, 0.007471264367816092, 0.22083333333333333`}, {
     0.7000000000000001, 0.004597701149425287, 0.2125}, {0.75, 
     0.002413793103448276, 0.18916666666666668`}, {0.8, 
     0.0011494252873563218`, 0.17583333333333334`}, {0.8500000000000001, 
     0.000689655172413793, 0.16083333333333333`}, {0.9, 
     0.00022988505747126436`, 0.14416666666666667`}, {0.9500000000000001, 
     0.00011494252873563218`, 0.125}, {1., 0., 0.105}, {
     0, 0.014252873563218391`, 0.175}, {0.05, 0.014252873563218391`, 0.175}, {
     0.1, 0.014252873563218391`, 0.175}, {0.15000000000000002`, 
     0.014252873563218391`, 0.175}, {0.2, 0.014252873563218391`, 0.175}, {
     0.25, 0.014252873563218391`, 0.175}, {0.30000000000000004`, 
     0.014252873563218391`, 0.175}, {0.35000000000000003`, 
     0.014252873563218391`, 0.175}, {0.4, 0.014252873563218391`, 0.175}, {
     0.45, 0.014022988505747127`, 0.175}, {0.5, 0.013448275862068966`, 
     0.17416666666666666`}, {0.55, 0.011034482758620689`, 0.1725}, {
     0.6000000000000001, 0.009310344827586206, 0.17083333333333334`}, {0.65, 
     0.005977011494252874, 0.16833333333333333`}, {0.7000000000000001, 
     0.003908045977011494, 0.16166666666666665`}, {0.75, 0.002413793103448276,
      0.15083333333333335`}, {0.8, 0.001264367816091954, 0.1425}, {
     0.8500000000000001, 0.000689655172413793, 0.135}, {0.9, 
     0.00011494252873563218`, 0.12333333333333334`}, {0.9500000000000001, 0., 
     0.11}, {1., 0., 0.09916666666666667}, {
     0, 0.0073563218390804595`, 0.1375}, {0.05, 0.0073563218390804595`, 
     0.1375}, {0.1, 0.0073563218390804595`, 0.1375}, {0.15000000000000002`, 
     0.0073563218390804595`, 0.1375}, {0.2, 0.0073563218390804595`, 0.1375}, {
     0.25, 0.0073563218390804595`, 0.1375}, {0.30000000000000004`, 
     0.0073563218390804595`, 0.1375}, {0.35000000000000003`, 
     0.0073563218390804595`, 0.1375}, {0.4, 0.0073563218390804595`, 0.1375}, {
     0.45, 0.0073563218390804595`, 0.1375}, {0.5, 0.007241379310344828, 
     0.1375}, {0.55, 0.006436781609195402, 0.1375}, {0.6000000000000001, 
     0.006206896551724138, 0.13666666666666666`}, {0.65, 0.004482758620689655,
      0.13416666666666666`}, {0.7000000000000001, 0.003103448275862069, 
     0.13083333333333333`}, {0.75, 0.0020689655172413794`, 0.125}, {0.8, 
     0.0011494252873563218`, 0.12}, {0.8500000000000001, 0.000689655172413793,
      0.11583333333333333`}, {0.9, 0.0003448275862068965, 0.1075}, {
     0.9500000000000001, 0.00022988505747126436`, 0.10083333333333333`}, {1., 
     0.00022988505747126436`, 0.09333333333333334}, {
     0, 0.0036781609195402297`, 0.10166666666666667`}, {0.05, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.1, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.15000000000000002`, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.2, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.25, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.30000000000000004`, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.35000000000000003`, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.4, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.45, 
     0.0036781609195402297`, 0.10166666666666667`}, {0.5, 
     0.003563218390804598, 0.10166666666666667`}, {0.55, 0.003218390804597701,
      0.10166666666666667`}, {0.6000000000000001, 0.003103448275862069, 
     0.10166666666666667`}, {0.65, 0.002758620689655172, 
     0.10083333333333333`}, {0.7000000000000001, 0.0020689655172413794`, 
     0.1}, {0.75, 0.0014942528735632185`, 0.09666666666666666}, {0.8, 
     0.0011494252873563218`, 0.09416666666666666}, {0.8500000000000001, 
     0.0009195402298850574, 0.09166666666666666}, {0.9, 0.0005747126436781609,
      0.0875}, {0.9500000000000001, 0.00022988505747126436`, 0.0825}, {1., 
     0.00022988505747126436`, 0.0775}, {
     0, 0.0014942528735632185`, 0.07666666666666666}, {0.05, 
     0.0014942528735632185`, 0.07666666666666666}, {0.1, 
     0.0014942528735632185`, 0.07666666666666666}, {0.15000000000000002`, 
     0.0014942528735632185`, 0.07666666666666666}, {0.2, 
     0.0014942528735632185`, 0.07666666666666666}, {0.25, 
     0.0014942528735632185`, 0.07666666666666666}, {0.30000000000000004`, 
     0.0014942528735632185`, 0.07666666666666666}, {0.35000000000000003`, 
     0.0014942528735632185`, 0.07666666666666666}, {0.4, 
     0.0014942528735632185`, 0.07666666666666666}, {0.45, 
     0.0014942528735632185`, 0.07666666666666666}, {0.5, 
     0.0014942528735632185`, 0.07666666666666666}, {0.55, 
     0.0014942528735632185`, 0.07666666666666666}, {0.6000000000000001, 
     0.0014942528735632185`, 0.07666666666666666}, {0.65, 
     0.001379310344827586, 0.07666666666666666}, {0.7000000000000001, 
     0.0010344827586206897`, 0.07583333333333334}, {0.75, 
     0.0009195402298850574, 0.07416666666666667}, {0.8, 0.0009195402298850574,
      0.07333333333333333}, {0.8500000000000001, 0.0008045977011494253, 
     0.07166666666666667}, {0.9, 0.000689655172413793, 0.06916666666666667}, {
     0.9500000000000001, 0.0005747126436781609, 0.0675}, {1., 
     0.0005747126436781609, 0.06416666666666666}, {
     0, 0.0003448275862068965, 0.05416666666666667}, {0.05, 
     0.0003448275862068965, 0.05416666666666667}, {0.1, 0.0003448275862068965,
      0.05416666666666667}, {0.15000000000000002`, 0.0003448275862068965, 
     0.05416666666666667}, {0.2, 0.0003448275862068965, 
     0.05416666666666667}, {0.25, 0.0003448275862068965, 
     0.05416666666666667}, {0.30000000000000004`, 0.0003448275862068965, 
     0.05416666666666667}, {0.35000000000000003`, 0.0003448275862068965, 
     0.05416666666666667}, {0.4, 0.0003448275862068965, 
     0.05416666666666667}, {0.45, 0.0003448275862068965, 
     0.05416666666666667}, {0.5, 0.0003448275862068965, 
     0.05416666666666667}, {0.55, 0.0003448275862068965, 
     0.05416666666666667}, {0.6000000000000001, 0.0003448275862068965, 
     0.05416666666666667}, {0.65, 0.0003448275862068965, 
     0.05416666666666667}, {0.7000000000000001, 0.0003448275862068965, 
     0.05416666666666667}, {0.75, 0.0003448275862068965, 
     0.05416666666666667}, {0.8, 0.0003448275862068965, 
     0.05416666666666667}, {0.8500000000000001, 0.0003448275862068965, 
     0.0525}, {0.9, 0.00022988505747126436`, 0.051666666666666666`}, {
     0.9500000000000001, 0.00022988505747126436`, 0.051666666666666666`}, {1.,
      0.00022988505747126436`, 0.050833333333333335`}, {
     0, 0.00022988505747126436`, 0.03916666666666667}, {0.05, 
     0.00022988505747126436`, 0.03916666666666667}, {0.1, 
     0.00022988505747126436`, 0.03916666666666667}, {0.15000000000000002`, 
     0.00022988505747126436`, 0.03916666666666667}, {0.2, 
     0.00022988505747126436`, 0.03916666666666667}, {0.25, 
     0.00022988505747126436`, 0.03916666666666667}, {0.30000000000000004`, 
     0.00022988505747126436`, 0.03916666666666667}, {0.35000000000000003`, 
     0.00022988505747126436`, 0.03916666666666667}, {0.4, 
     0.00022988505747126436`, 0.03916666666666667}, {0.45, 
     0.00022988505747126436`, 0.03916666666666667}, {0.5, 
     0.00022988505747126436`, 0.03916666666666667}, {0.55, 
     0.00022988505747126436`, 0.03916666666666667}, {0.6000000000000001, 
     0.00022988505747126436`, 0.03916666666666667}, {0.65, 
     0.00022988505747126436`, 0.03916666666666667}, {0.7000000000000001, 
     0.00022988505747126436`, 0.03916666666666667}, {0.75, 
     0.00022988505747126436`, 0.03916666666666667}, {0.8, 
     0.00022988505747126436`, 0.03916666666666667}, {0.8500000000000001, 
     0.00022988505747126436`, 0.0375}, {0.9, 0.00011494252873563218`, 
     0.03666666666666667}, {0.9500000000000001, 0.00011494252873563218`, 
     0.03666666666666667}, {1., 0.00011494252873563218`, 
     0.035833333333333335`}, {0, 0., 0.0275}, {0.05, 0., 0.0275}, {0.1, 0., 
     0.0275}, {0.15000000000000002`, 0., 0.0275}, {0.2, 0., 0.0275}, {0.25, 
     0., 0.0275}, {0.30000000000000004`, 0., 0.0275}, {0.35000000000000003`, 
     0., 0.0275}, {0.4, 0., 0.0275}, {0.45, 0., 0.0275}, {0.5, 0., 0.0275}, {
     0.55, 0., 0.0275}, {0.6000000000000001, 0., 0.0275}, {0.65, 0., 
     0.0275}, {0.7000000000000001, 0., 0.0275}, {0.75, 0., 0.0275}, {0.8, 0., 
     0.0275}, {0.8500000000000001, 0., 0.02666666666666667}, {0.9, 0., 
     0.025833333333333333`}, {0.9500000000000001, 0., 
     0.025833333333333333`}, {1., 0., 0.025833333333333333`}, {
     0, 0., 0.018333333333333333`}, {0.05, 0., 0.018333333333333333`}, {0.1, 
     0., 0.018333333333333333`}, {0.15000000000000002`, 0., 
     0.018333333333333333`}, {0.2, 0., 0.018333333333333333`}, {0.25, 0., 
     0.018333333333333333`}, {0.30000000000000004`, 0., 
     0.018333333333333333`}, {0.35000000000000003`, 0., 
     0.018333333333333333`}, {0.4, 0., 0.018333333333333333`}, {0.45, 0., 
     0.018333333333333333`}, {0.5, 0., 0.018333333333333333`}, {0.55, 0., 
     0.018333333333333333`}, {0.6000000000000001, 0., 
     0.018333333333333333`}, {0.65, 0., 0.018333333333333333`}, {
     0.7000000000000001, 0., 0.018333333333333333`}, {0.75, 0., 
     0.018333333333333333`}, {0.8, 0., 0.018333333333333333`}, {
     0.8500000000000001, 0., 0.018333333333333333`}, {0.9, 0., 
     0.018333333333333333`}, {0.9500000000000001, 0., 
     0.018333333333333333`}, {1., 0., 0.018333333333333333`}, {
     0, 0., 0.011666666666666667`}, {0.05, 0., 0.011666666666666667`}, {0.1, 
     0., 0.011666666666666667`}, {0.15000000000000002`, 0., 
     0.011666666666666667`}, {0.2, 0., 0.011666666666666667`}, {0.25, 0., 
     0.011666666666666667`}, {0.30000000000000004`, 0., 
     0.011666666666666667`}, {0.35000000000000003`, 0., 
     0.011666666666666667`}, {0.4, 0., 0.011666666666666667`}, {0.45, 0., 
     0.011666666666666667`}, {0.5, 0., 0.011666666666666667`}, {0.55, 0., 
     0.011666666666666667`}, {0.6000000000000001, 0., 
     0.011666666666666667`}, {0.65, 0., 0.011666666666666667`}, {
     0.7000000000000001, 0., 0.011666666666666667`}, {0.75, 0., 
     0.011666666666666667`}, {0.8, 0., 0.011666666666666667`}, {
     0.8500000000000001, 0., 0.011666666666666667`}, {0.9, 0., 
     0.011666666666666667`}, {0.9500000000000001, 0., 
     0.011666666666666667`}, {1., 0., 0.011666666666666667`}, {
     0, 0., 0.006666666666666667}, {0.05, 0., 0.006666666666666667}, {0.1, 0.,
      0.006666666666666667}, {0.15000000000000002`, 0., 
     0.006666666666666667}, {0.2, 0., 0.006666666666666667}, {0.25, 0., 
     0.006666666666666667}, {0.30000000000000004`, 0., 
     0.006666666666666667}, {0.35000000000000003`, 0., 
     0.006666666666666667}, {0.4, 0., 0.006666666666666667}, {0.45, 0., 
     0.006666666666666667}, {0.5, 0., 0.006666666666666667}, {0.55, 0., 
     0.006666666666666667}, {0.6000000000000001, 0., 0.006666666666666667}, {
     0.65, 0., 0.006666666666666667}, {0.7000000000000001, 0., 
     0.006666666666666667}, {0.75, 0., 0.006666666666666667}, {0.8, 0., 
     0.006666666666666667}, {0.8500000000000001, 0., 0.006666666666666667}, {
     0.9, 0., 0.006666666666666667}, {0.9500000000000001, 0., 
     0.006666666666666667}, {1., 0., 0.006666666666666667}, {
     0, 0., 0.0033333333333333335`}, {0.05, 0., 0.0033333333333333335`}, {0.1,
      0., 0.0033333333333333335`}, {0.15000000000000002`, 0., 
     0.0033333333333333335`}, {0.2, 0., 0.0033333333333333335`}, {0.25, 0., 
     0.0033333333333333335`}, {0.30000000000000004`, 0., 
     0.0033333333333333335`}, {0.35000000000000003`, 0., 
     0.0033333333333333335`}, {0.4, 0., 0.0033333333333333335`}, {0.45, 0., 
     0.0033333333333333335`}, {0.5, 0., 0.0033333333333333335`}, {0.55, 0., 
     0.0033333333333333335`}, {0.6000000000000001, 0., 
     0.0033333333333333335`}, {0.65, 0., 0.0033333333333333335`}, {
     0.7000000000000001, 0., 0.0033333333333333335`}, {0.75, 0., 
     0.0033333333333333335`}, {0.8, 0., 0.0033333333333333335`}, {
     0.8500000000000001, 0., 0.0033333333333333335`}, {0.9, 0., 
     0.0033333333333333335`}, {0.9500000000000001, 0., 
     0.0033333333333333335`}, {1., 0., 0.0033333333333333335`}, {
     0, 0., 0.0008333333333333334}, {0.05, 0., 0.0008333333333333334}, {0.1, 
     0., 0.0008333333333333334}, {0.15000000000000002`, 0., 
     0.0008333333333333334}, {0.2, 0., 0.0008333333333333334}, {0.25, 0., 
     0.0008333333333333334}, {0.30000000000000004`, 0., 
     0.0008333333333333334}, {0.35000000000000003`, 0., 
     0.0008333333333333334}, {0.4, 0., 0.0008333333333333334}, {0.45, 0., 
     0.0008333333333333334}, {0.5, 0., 0.0008333333333333334}, {0.55, 0., 
     0.0008333333333333334}, {0.6000000000000001, 0., 
     0.0008333333333333334}, {0.65, 0., 0.0008333333333333334}, {
     0.7000000000000001, 0., 0.0008333333333333334}, {0.75, 0., 
     0.0008333333333333334}, {0.8, 0., 0.0008333333333333334}, {
     0.8500000000000001, 0., 0.0008333333333333334}, {0.9, 0., 
     0.0008333333333333334}, {0.9500000000000001, 0., 
     0.0008333333333333334}, {1., 0., 0.0008333333333333334}, {
     0, 0., 0.0008333333333333334}, {0.05, 0., 0.0008333333333333334}, {0.1, 
     0., 0.0008333333333333334}, {0.15000000000000002`, 0., 
     0.0008333333333333334}, {0.2, 0., 0.0008333333333333334}, {0.25, 0., 
     0.0008333333333333334}, {0.30000000000000004`, 0., 
     0.0008333333333333334}, {0.35000000000000003`, 0., 
     0.0008333333333333334}, {0.4, 0., 0.0008333333333333334}, {0.45, 0., 
     0.0008333333333333334}, {0.5, 0., 0.0008333333333333334}, {0.55, 0., 
     0.0008333333333333334}, {0.6000000000000001, 0., 
     0.0008333333333333334}, {0.65, 0., 0.0008333333333333334}, {
     0.7000000000000001, 0., 0.0008333333333333334}, {0.75, 0., 
     0.0008333333333333334}, {0.8, 0., 0.0008333333333333334}, {
     0.8500000000000001, 0., 0.0008333333333333334}, {0.9, 0., 
     0.0008333333333333334}, {0.9500000000000001, 0., 
     0.0008333333333333334}, {1., 0., 0.0008333333333333334}, {0, 0., 0.}, {
     0.05, 0., 0.}, {0.1, 0., 0.}, {0.15000000000000002`, 0., 0.}, {0.2, 0., 
     0.}, {0.25, 0., 0.}, {0.30000000000000004`, 0., 0.}, {
     0.35000000000000003`, 0., 0.}, {0.4, 0., 0.}, {0.45, 0., 0.}, {0.5, 0., 
     0.}, {0.55, 0., 0.}, {0.6000000000000001, 0., 0.}, {0.65, 0., 0.}, {
     0.7000000000000001, 0., 0.}, {0.75, 0., 0.}, {0.8, 0., 0.}, {
     0.8500000000000001, 0., 0.}, {0.9, 0., 0.}, {0.9500000000000001, 0., 
     0.}, {1., 0., 0.}}]},
  AutomaticImageSize->True,
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{355.91471981472273`, 235.921921314745},
  PlotRange->{{0, 1.}, {0., 1.}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  ViewPoint->{0.8639958383753664, -3.0054562805599763`, 1.2925725267514534`},
  ViewVertical->{0.013357444642479684`, -0.040908609962909605`, 
   2.4976840076152618`}]], "Output",
 CellChangeTimes->{3.483263844318774*^9, 3.483264070997444*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9XVusVsUV3vz/uR8uB4TDnQN4DveLWjgcLkqVCjVVoLZY1KaUWAkWC5SL
2AttU8UHIqUaU2uTSmvTh1rTpqm9YEutJUhBykubwANECfHByAuJAR4Iu/+e
y1qz5/9m/pl//3oSOfusPbO+b62ZWXvNZW/v27hr86Pf2LjrsUc2Tl61Y+P2
zY89snPyym07KqLyoCQZ9LUkSS5NTrLrtHKp/hE/j2b/qD/M615x3ZRevXo1
1T/Xrl273SjSI67L6enTp9POzs706NGjSUnImtM77rgjPXPmTLp169b01Vdf
Tfft25csM+pOVnX7+vq0dqr7wgsvpEeOHBHCbdu2pcePH0+WBtZdv359ev78
eSHcv39/euDAgeC6mezSpUtCeOjQoYx7cN0VK1ak586dE8Lnnnsuff7552Hd
3t7eqrp79uwhe3fu3JmeOHEiV1f7+dSpU+nMmTPVX7J5PvzwQ1Hn8OHD6d69
e5GLr1+/TpBNSma0ag7K1Ru8vaRFdKdyumnTJlI6YBSamP3TlhVqVvCukt3Z
P61ZyVZVkvqptrmUVV5s1BlGdYYG12mjOt1GneW3vyT+Ktl1DolfbVn/T80f
7cUbN26kly9ffpC0lgCTMVJrBaRseaHyW3vh5+JXU/rBBx+YQ0fqaxGjKmvx
Su8SI+PkyZPpsWPH1hJwOwDuJODOcAp4FLaoas8884wwOvtrFYGLdi5HA6Eh
q4F2794tjMz++jQBjSagDidkk9nJsutFeVQ02HX3PHv2bNrT05NevHgxWUKo
euyYvm0EExQ6dM2MyerVq9Ourq702WefXUBkOgEZpoCuOulKxx2Tlm6b/jw3
FJp0k165ciXdvHlzeuHChWQeEesJJOHwTQ6/Krw1K/HBgwfT/v7+dGBgIH3/
/ff7CH1sbfRSDI9DylYzXurQ9NFHH5FsAjHQPbdqBCZlHWDEX+11MsXNtlDS
fYtojPOqLwz0BgGNIgV+oMKQfyRIFF1HN5BG/vlUArLbJKXXiBKKux15gE+a
3K+J3MQ8QAARBM93I4m8TERQtCxCyf2YSSlFystulZReJEo65JsN1904muJq
eBy5HxO5wYAcQzkjSJ3e7IqjKfPQZpQUUTXjXrKOzLrJMCsLiZX/gs3yD6VQ
s5qA7BZp1nRVoEYGZt1eQ8ZJ23WTGVlfvIXI1tD+VdNCnOCVPfc40WszGlAr
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
l/pu3pkBe5+WE2vtUCoA8Ydq3GTQ/wFN5/WP\
\>"]]
}, Open  ]],

Cell[BoxData["x3Ddata"], "Input",
 CellChangeTimes->{{3.483260529457911*^9, 3.48326054663043*^9}, {
  3.483260833380919*^9, 3.483260836962625*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xtest", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "#"}], "}"}], "&"}], "/@", "xtest"}]}], "Input",
 CellChangeTimes->{{3.483264907713087*^9, 3.4832649324095078`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4832649331742077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"size", "/.", "pars"}]], "Input"],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{3.483275700047462*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImbalanceIndex", "[", 
    RowBox[{"AB_", ",", "ACx_", ",", "BC_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"1", ",", 
     FractionBox[
      RowBox[{"2", " ", "ACx"}], 
      RowBox[{"AB", "+", "BC"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateImbalanceArray", "[", "xadjA_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodeA", ",", "nodeB", ",", "nodeC", ",", "imbalanceArray"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"imbalanceArray", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"size", "/.", "pars"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"size", "/.", "pars"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"size", "/.", "pars"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "go", " ", "through", " ", "the", " ", "triples", " ", 
          "exaustively"}], ",", " ", 
         RowBox[{"and", " ", "save", " ", "imbalace", " ", "index"}]}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"nodeA", "=", "1"}], ",", 
         RowBox[{
          RowBox[{"nodeA", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
         RowBox[{"nodeA", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ShowStatus", "[", 
           RowBox[{"\"\<generating imbalanceArray: nodeA = \>\"", "<>", 
            RowBox[{"ToString", "@", "nodeA"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"nodeB", "=", "1"}], ",", 
            RowBox[{
             RowBox[{"nodeB", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
            RowBox[{"nodeB", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"nodeC", "=", "1"}], ",", 
              RowBox[{
               RowBox[{"nodeC", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
              RowBox[{"nodeC", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "the", " ", "nodes", " ", "are", " ", "really", " ",
                 "a", " ", "triple"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"nodeA", "\[NotEqual]", "nodeB"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"nodeA", "\[NotEqual]", "nodeC"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"nodeB", "\[NotEqual]", "nodeC"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
                   RowBox[{"nodeA", ",", "nodeB", ",", "nodeC"}], 
                   "\[RightDoubleBracket]"}], "=", 
                  RowBox[{"ImbalanceIndex", "[", 
                   RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeB"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "@", "imbalanceArray"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Generate2DROCsmart", "[", "xadjA_", "]"}], ":=", 
   RowBox[{"Generate2DROCsmart", "[", 
    RowBox[{"xadjA", ",", "0.04"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Generate2DROCsmart", "[", 
     RowBox[{"xadjA_", ",", "maxdist_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ii", ",", "steps", ",", 
        RowBox[{"data3D", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"imbalanceArray", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"imbalanceArray", "=", 
        RowBox[{"GenerateImbalanceArray", "[", "xadjA", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"steps", "=", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"1", "/", "maxdist"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"ii", "=", "0"}], ",", 
         RowBox[{"ii", "\[LessEqual]", "steps"}], ",", 
         RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"data3D", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ii", "/", "steps"}], ",", "#"}], "}"}], "&"}], "/@", 
             
             RowBox[{"Generate2DROCsmartInner", "[", 
              RowBox[{"xadjA", ",", "imbalanceArray", ",", 
               RowBox[{"N", "[", 
                RowBox[{"ii", "/", "steps"}], "]"}], ",", "maxdist"}], 
              "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ShowStatus", "[", "\"\<done.\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", "data3D"}], ",", "3"}], "]"}], "]"}]}]}], 
     " ", 
     RowBox[{"(*", " ", "hack", " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Generate2DROCsmartInner", "[", 
     RowBox[{
     "xadjA_", ",", "imbalanceArray_", ",", "tImbalanced_", ",", "maxdist_"}],
      "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "xdata", ",", "xmin", ",", "xmax", ",", "xROCpoints", ",", "oldRL"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xROCpoints", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xdata", "=", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"adjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
                  
                  RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"size", "/.", "pars"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"jj", ",", 
                RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", "1"}], 
           "]"}], ",", 
          RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "test", " ", "if", " ", "exactly", " ", "the", " ", "diagonal", " ", 
         "elements", " ", "have", " ", "been", " ", "deleted"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "xdata"}], "\[NotEqual]", 
           RowBox[{"(", 
            RowBox[{"size", "*", 
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}]}], ")"}]}], "/.", "pars"}], 
         ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Warning: length=\>\"", "<>", 
            RowBox[{"ToString", "@", 
             RowBox[{"Length", "@", "xdata"}]}]}], "]"}], ";"}]}], "]"}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"xmin", "=", 
        RowBox[{"N", "@", 
         RowBox[{"Min", "@", 
          RowBox[{"Last", "@", 
           RowBox[{"Transpose", "@", "xdata"}]}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xmax", "=", 
        RowBox[{"N", "@", 
         RowBox[{"Max", "@", 
          RowBox[{"Last", "@", 
           RowBox[{"Transpose", "@", "xdata"}]}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"xmax", "-", "xmin"}], "<", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]]}], ",", 
         RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"oldRL", "=", "$RecursionLimit"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"$RecursionLimit", "=", "1000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"xROCpoints", "=", 
        RowBox[{"Generate2DROCrecursive", "[", 
         RowBox[{"xadjA", ",", "imbalanceArray", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "xmax", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "xmin", ",", "xROCpoints", 
          ",", "maxdist", ",", "tImbalanced"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"$RecursionLimit", "=", "oldRL"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "@", 
        RowBox[{"Sort", "@", "xROCpoints"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Generate2DROCrecursive", "[", 
    RowBox[{
    "xadjA_", ",", "imbalanceArray_", ",", "left_", ",", "xmax_", ",", 
     "right_", ",", "xmin_", ",", "xROCpoints_", ",", "maxDist2D_", ",", 
     "tImbalanced_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tPresent", ",", "xP", ",", "xTP", ",", "xN", ",", "xFP", ",", 
       "xROCpointsLocal", ",", "middle", ",", "nodeA", ",", "nodeB", ",", 
       "nodeC", ",", "modifiedA", ",", 
       RowBox[{"\[Beta]", "=", "0.8"}], ",", "xdata", ",", "xmaxi"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xROCpointsLocal", "=", "xROCpoints"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "go", " ", "through", " ", "all", " ", "possible", " ", "threshold", 
        " ", "values", " ", "and", " ", "compute", " ", "the", " ", "ROC", 
        " ", "data", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tPresent", "=", 
       RowBox[{"N", "@", 
        FractionBox[
         RowBox[{"xmin", "+", "xmax"}], "2"]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"ShowStatus", "[", 
       RowBox[{"\"\<Generate2DROCrecursive: tPresent = \>\"", "<>", 
        RowBox[{"ToString", "@", 
         RowBox[{"N", "@", "tPresent"}]}], "<>", "\"\<, tImbalanced = \>\"", "<>", 
        RowBox[{"ToString", "@", 
         RowBox[{"N", "@", "tImbalanced"}]}], "<>", "\"\< ...\>\""}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"modifiedA", "=", "xadjA"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "go", " ", "through", " ", "the", " ", "triples", " ", "exaustively"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"nodeA", "=", "1"}], ",", 
        RowBox[{
         RowBox[{"nodeA", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
        RowBox[{"nodeA", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"ShowStatus", "[", 
           RowBox[{"\"\<running: nodeA = \>\"", "<>", 
            RowBox[{"ToString", "@", "nodeA"}]}], "]"}], ";"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"nodeB", "=", "1"}], ",", 
          RowBox[{
           RowBox[{"nodeB", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
          RowBox[{"nodeB", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                RowBox[{"nodeA", ",", "nodeB"}], "\[RightDoubleBracket]"}], 
               ">", "tPresent"}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                RowBox[{"nodeB", ",", "nodeA"}], "\[RightDoubleBracket]"}], 
               ">", "tPresent"}], ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"nodeC", "=", "1"}], ",", 
               RowBox[{
                RowBox[{"nodeC", "\[LessEqual]", "size"}], "/.", "pars"}], 
               ",", 
               RowBox[{"nodeC", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "if", " ", "the", " ", "nodes", " ", "are", " ", "really", 
                 " ", "a", " ", "triple"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"nodeA", "\[NotEqual]", "nodeB"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"nodeA", "\[NotEqual]", "nodeC"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"nodeB", "\[NotEqual]", "nodeC"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{"examine", " ", "AC"}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeB"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "<", "tImbalanced"}], ",", 
                    RowBox[{
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"\[Beta]", "*", 
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"examine", " ", "CA"}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeB"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "<", "tImbalanced"}], ",", 
                    RowBox[{
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"\[Beta]", "*", 
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xdata", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"adjA", "\[LeftDoubleBracket]", 
                  RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                  RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], 
                "}"}], ",", 
               RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", 
               RowBox[{"size", "/.", "pars"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"jj", ",", 
               RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], ",", 
         RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmaxi", "=", 
       RowBox[{"Max", "@", 
        RowBox[{"Flatten", "@", "modifiedA"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xTP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">", "tPresent"}], ")"}], "&"}], ")"}]}]}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xN", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xFP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">", "tPresent"}], ")"}], "&"}], ")"}]}]}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"middle", "=", 
       RowBox[{"N", "@", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["xFP", "xN"], ",", 
          FractionBox["xTP", "xP"]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xROCpointsLocal", ",", "middle"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"Cases", "[", 
           RowBox[{"xdata", ",", 
            RowBox[{"{", 
             RowBox[{"_", ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", ">", "xmin"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"#", "<", "xmax"}], ")"}]}], "&"}], ")"}]}]}], 
             "}"}]}], "]"}]}], ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"middle", "-", "left"}], "]"}], ">", "maxDist2D"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"xROCpointsLocal", "=", 
            RowBox[{"Generate2DROCrecursive", "[", 
             RowBox[{
             "xadjA", ",", "imbalanceArray", ",", "left", ",", "xmax", ",", 
              "middle", ",", "tPresent", ",", "xROCpointsLocal", ",", 
              "maxDist2D", ",", "tImbalanced"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"right", "-", "middle"}], "]"}], ">", "maxDist2D"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"xROCpointsLocal", "=", 
            RowBox[{"Generate2DROCrecursive", "[", 
             RowBox[{
             "xadjA", ",", "imbalanceArray", ",", "middle", ",", "tPresent", 
              ",", "right", ",", "xmin", ",", "xROCpointsLocal", ",", 
              "maxDist2D", ",", "tImbalanced"}], "]"}]}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "xROCpointsLocal"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.480767279108342*^9, 3.480767280764413*^9}, {
   3.480767315193233*^9, 3.480767437847006*^9}, {3.4807674824079437`*^9, 
   3.4807677886478367`*^9}, {3.4807678556267776`*^9, 3.480768030241831*^9}, {
   3.48076809521441*^9, 3.480768126321455*^9}, {3.480770699356887*^9, 
   3.480770712495242*^9}, {3.480770744043462*^9, 3.48077078513273*^9}, 
   3.48077083622727*^9, {3.480770930612818*^9, 3.4807709344927263`*^9}, {
   3.4807709668638687`*^9, 3.480770994743442*^9}, {3.480771025679805*^9, 
   3.480771051674094*^9}, {3.480771084499555*^9, 3.480771085921994*^9}, {
   3.4807711302147503`*^9, 3.480771136720929*^9}, {3.480771324765935*^9, 
   3.480771342024645*^9}, {3.480831034679968*^9, 3.480831049759921*^9}, {
   3.480831810615596*^9, 3.480831895711688*^9}, {3.4808319402574663`*^9, 
   3.4808319657675667`*^9}, {3.480832004770133*^9, 3.480832109853163*^9}, {
   3.480832286030952*^9, 3.4808323066201067`*^9}, {3.480832337944866*^9, 
   3.480832363341411*^9}, {3.480832474269555*^9, 3.480832492657324*^9}, {
   3.480832539975679*^9, 3.480832574257802*^9}, {3.4808326582357273`*^9, 
   3.480832666663755*^9}, {3.480832729895268*^9, 3.480832744454007*^9}, {
   3.4808327989685698`*^9, 3.4808328091981497`*^9}, {3.480832967174185*^9, 
   3.480832978819231*^9}, {3.48083370272721*^9, 3.480833710134932*^9}, {
   3.480833987403469*^9, 3.480833990593966*^9}, {3.480834033736928*^9, 
   3.480834035318328*^9}, 3.480834078059885*^9, {3.480840839779895*^9, 
   3.4808408420112658`*^9}, {3.480843920660255*^9, 3.480843975260869*^9}, {
   3.480844056211101*^9, 3.480844056409719*^9}, 3.4808441272693768`*^9, {
   3.480844947327795*^9, 3.480844976566415*^9}, {3.48084510419881*^9, 
   3.480845136169456*^9}, {3.480845215071433*^9, 3.480845218125535*^9}, {
   3.4808452644109793`*^9, 3.480845265267057*^9}, {3.48084534622388*^9, 
   3.4808453489308777`*^9}, {3.480845380204666*^9, 3.480845380305511*^9}, {
   3.480845481003648*^9, 3.480845487754582*^9}, {3.480845529869125*^9, 
   3.480845531691133*^9}, {3.480845804697489*^9, 3.4808458674038*^9}, {
   3.4808459156210833`*^9, 3.480845922498361*^9}, 3.480846036318314*^9, {
   3.480846095361952*^9, 3.4808461157502947`*^9}, {3.4808462749714203`*^9, 
   3.480846280440401*^9}, 3.4808463201660967`*^9, {3.480847775446396*^9, 
   3.480847793811833*^9}, {3.480847974347226*^9, 3.480847977414671*^9}, {
   3.480848010247305*^9, 3.480848041792604*^9}, {3.480848344936551*^9, 
   3.480848370445671*^9}, {3.480848682451395*^9, 3.480848686649908*^9}, {
   3.4808525760435762`*^9, 3.480852603614744*^9}, {3.480933840900691*^9, 
   3.480933842401801*^9}, 3.482519728699498*^9, 3.4825197813328753`*^9, {
   3.483078457522393*^9, 3.483078519886224*^9}, {3.483263244414673*^9, 
   3.483263245157317*^9}, {3.483263291452898*^9, 3.4832633767076387`*^9}, {
   3.4832634125060053`*^9, 3.483263595943509*^9}, {3.483264834842998*^9, 
   3.483264842003291*^9}, {3.483264942278721*^9, 3.483264953902341*^9}, {
   3.4832669994381943`*^9, 3.48326700047615*^9}, {3.483267041773308*^9, 
   3.48326712559923*^9}, {3.48326717259107*^9, 3.483267212406184*^9}, {
   3.48326729298475*^9, 3.48326730940868*^9}, {3.4832673455658817`*^9, 
   3.4832674694792213`*^9}, {3.483272915622693*^9, 3.483272987776388*^9}, {
   3.483273035787518*^9, 3.483273107450383*^9}, {3.483273249528885*^9, 
   3.483273250894236*^9}, {3.483275550196876*^9, 3.483275664219694*^9}, {
   3.483275712460902*^9, 3.483275713465983*^9}, {3.483276219127555*^9, 
   3.4832762201735497`*^9}, {3.4832763175301037`*^9, 3.483276327838619*^9}, {
   3.4832763721814613`*^9, 3.48327643110627*^9}, {3.4832765439951468`*^9, 
   3.483276579446929*^9}, {3.48327662871272*^9, 3.48327665419326*^9}, {
   3.4832771655896673`*^9, 3.4832771773237543`*^9}, {3.483277329409916*^9, 
   3.483277350392263*^9}, {3.483277555564953*^9, 3.483277558892528*^9}, 
   3.483277607065505*^9, {3.4832780371952467`*^9, 3.4832780382263823`*^9}, {
   3.4832787743604717`*^9, 3.483278792661162*^9}, {3.483294781969866*^9, 
   3.4832948240920362`*^9}, {3.4832949255157757`*^9, 3.483294928788044*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x3Ddata", "=", 
   RowBox[{"Generate2DROCsmart", "[", 
    RowBox[{"adjAtest", ",", "0.35"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4832731254994507`*^9, 3.483273139654807*^9}, {
  3.4832755999021807`*^9, 3.483275604509925*^9}, {3.4832765645260553`*^9, 
  3.483276564830934*^9}, {3.483276944966432*^9, 3.483276950308466*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"x3Ddata2", ",", 
   RowBox[{"Mesh", "\[Rule]", "10"}], ",", 
   RowBox[{"MeshShading", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Pink"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.483277633565357*^9, 3.48327763692767*^9}, {
  3.483277771528688*^9, 3.483277779638587*^9}, {3.4832779194228277`*^9, 
  3.483277946827216*^9}, {3.483278168174748*^9, 3.483278176566187*^9}, {
  3.483278425958642*^9, 3.483278447619834*^9}, {3.483278496515068*^9, 
  3.483278504071622*^9}, {3.483278541927621*^9, 3.4832785419881973`*^9}, {
  3.4832786198272123`*^9, 3.483278720135187*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ImbalanceIndex", "[", 
    RowBox[{"AB_", ",", "ACx_", ",", "BC_"}], "]"}], ":=", 
   RowBox[{"Min", "[", 
    RowBox[{"1", ",", 
     FractionBox[
      RowBox[{"2", " ", "ACx"}], 
      RowBox[{"AB", "+", "BC"}]]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateImbalanceArray", "[", "xadjA_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"nodeA", ",", "nodeB", ",", "nodeC", ",", "imbalanceArray"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"imbalanceArray", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"size", "/.", "pars"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"size", "/.", "pars"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"size", "/.", "pars"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "go", " ", "through", " ", "the", " ", "triples", " ", 
          "exaustively"}], ",", " ", 
         RowBox[{"and", " ", "save", " ", "imbalace", " ", "index"}]}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"nodeA", "=", "1"}], ",", 
         RowBox[{
          RowBox[{"nodeA", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
         RowBox[{"nodeA", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ShowStatus", "[", 
           RowBox[{"\"\<generating imbalanceArray: nodeA = \>\"", "<>", 
            RowBox[{"ToString", "@", "nodeA"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"nodeB", "=", "1"}], ",", 
            RowBox[{
             RowBox[{"nodeB", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
            RowBox[{"nodeB", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"nodeC", "=", "1"}], ",", 
              RowBox[{
               RowBox[{"nodeC", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
              RowBox[{"nodeC", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "the", " ", "nodes", " ", "are", " ", "really", " ",
                 "a", " ", "triple"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"nodeA", "\[NotEqual]", "nodeB"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"nodeA", "\[NotEqual]", "nodeC"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"nodeB", "\[NotEqual]", "nodeC"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
                   RowBox[{"nodeA", ",", "nodeB", ",", "nodeC"}], 
                   "\[RightDoubleBracket]"}], "=", 
                  RowBox[{"ImbalanceIndex", "[", 
                   RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeB"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "@", "imbalanceArray"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Generate2DROCsmart2", "[", "xadjA_", "]"}], ":=", 
   RowBox[{"Generate2DROCsmart2", "[", 
    RowBox[{"xadjA", ",", "0.04"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Generate2DROCsmart2", "[", 
     RowBox[{"xadjA_", ",", "maxdist_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ii", ",", "steps", ",", 
        RowBox[{"data3D", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"imbalanceArray", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"imbalanceArray", "=", 
        RowBox[{"GenerateImbalanceArray", "[", "xadjA", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"steps", "=", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"1", "/", "maxdist"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"ii", "=", "0"}], ",", 
         RowBox[{"ii", "\[LessEqual]", "steps"}], ",", 
         RowBox[{"ii", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"data3D", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"ii", "/", "steps"}], ",", "#"}], "}"}], "&"}], "/@", 
             
             RowBox[{"Generate2DROCsmartInner2", "[", 
              RowBox[{"xadjA", ",", "imbalanceArray", ",", 
               RowBox[{"N", "[", 
                RowBox[{"ii", "/", "steps"}], "]"}], ",", "maxdist"}], 
              "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ShowStatus", "[", "\"\<done.\>\"", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Partition", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", "data3D"}], ",", "3"}], "]"}], "]"}]}]}], 
     " ", 
     RowBox[{"(*", " ", "hack", " ", "*)"}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Generate2DROCsmartInner2", "[", 
     RowBox[{
     "xadjA_", ",", "imbalanceArray_", ",", "tImbalanced_", ",", "maxdist_"}],
      "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "xdata", ",", "xmin", ",", "xmax", ",", "xROCpoints", ",", "oldRL"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xROCpoints", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xdata", "=", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"adjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
                  
                  RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                   RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"size", "/.", "pars"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"jj", ",", 
                RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", "1"}], 
           "]"}], ",", 
          RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "test", " ", "if", " ", "exactly", " ", "the", " ", "diagonal", " ", 
         "elements", " ", "have", " ", "been", " ", "deleted"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", "xdata"}], "\[NotEqual]", 
           RowBox[{"(", 
            RowBox[{"size", "*", 
             RowBox[{"(", 
              RowBox[{"size", "-", "1"}], ")"}]}], ")"}]}], "/.", "pars"}], 
         ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"\"\<Warning: length=\>\"", "<>", 
            RowBox[{"ToString", "@", 
             RowBox[{"Length", "@", "xdata"}]}]}], "]"}], ";"}]}], "]"}], ";",
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"xmin", "=", 
        RowBox[{"N", "@", 
         RowBox[{"Min", "@", 
          RowBox[{"Last", "@", 
           RowBox[{"Transpose", "@", "xdata"}]}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"xmax", "=", 
        RowBox[{"N", "@", 
         RowBox[{"Max", "@", 
          RowBox[{"Last", "@", 
           RowBox[{"Transpose", "@", "xdata"}]}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"xmax", "-", "xmin"}], "<", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]]}], ",", 
         RowBox[{"Abort", "[", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"oldRL", "=", "$RecursionLimit"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"$RecursionLimit", "=", "1000"}], ";", "\[IndentingNewLine]", 
       RowBox[{"xROCpoints", "=", 
        RowBox[{"Generate2DROCrecursive2", "[", 
         RowBox[{"xadjA", ",", "imbalanceArray", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", "xmax", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], ",", "xmin", ",", "xROCpoints", 
          ",", "maxdist", ",", "tImbalanced"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"$RecursionLimit", "=", "oldRL"}], ";", "\[IndentingNewLine]", 
       
       RowBox[{"Return", "@", 
        RowBox[{"Sort", "@", "xROCpoints"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Generate2DROCrecursive2", "[", 
    RowBox[{
    "xadjA_", ",", "imbalanceArray_", ",", "left_", ",", "xmax_", ",", 
     "right_", ",", "xmin_", ",", "xROCpoints_", ",", "maxDist2D_", ",", 
     "tImbalanced_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "tPresent", ",", "xP", ",", "xTP", ",", "xN", ",", "xFP", ",", 
       "xROCpointsLocal", ",", "middle", ",", "nodeA", ",", "nodeB", ",", 
       "nodeC", ",", "modifiedA", ",", 
       RowBox[{"\[Beta]Proxy", "=", "0.95"}], ",", 
       RowBox[{"\[Beta]Indirect", "=", "0.95"}], ",", "xdata", ",", "xmaxi"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xROCpointsLocal", "=", "xROCpoints"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "go", " ", "through", " ", "all", " ", "possible", " ", "threshold", 
        " ", "values", " ", "and", " ", "compute", " ", "the", " ", "ROC", 
        " ", "data", " ", "points"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tPresent", "=", 
       RowBox[{"N", "@", 
        FractionBox[
         RowBox[{"xmin", "+", "xmax"}], "2"]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"ShowStatus", "[", 
       RowBox[{"\"\<Generate2DROCrecursive: tPresent = \>\"", "<>", 
        RowBox[{"ToString", "@", 
         RowBox[{"N", "@", "tPresent"}]}], "<>", "\"\<, tImbalanced = \>\"", "<>", 
        RowBox[{"ToString", "@", 
         RowBox[{"N", "@", "tImbalanced"}]}], "<>", "\"\< ...\>\""}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"modifiedA", "=", "xadjA"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "go", " ", "through", " ", "the", " ", "triples", " ", "exaustively"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"nodeA", "=", "1"}], ",", 
        RowBox[{
         RowBox[{"nodeA", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
        RowBox[{"nodeA", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"ShowStatus", "[", 
           RowBox[{"\"\<running: nodeA = \>\"", "<>", 
            RowBox[{"ToString", "@", "nodeA"}]}], "]"}], ";"}], " ", "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"nodeB", "=", "1"}], ",", 
          RowBox[{
           RowBox[{"nodeB", "\[LessEqual]", "size"}], "/.", "pars"}], ",", 
          RowBox[{"nodeB", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                RowBox[{"nodeA", ",", "nodeB"}], "\[RightDoubleBracket]"}], 
               ">", "tPresent"}], ")"}], "||", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                RowBox[{"nodeB", ",", "nodeA"}], "\[RightDoubleBracket]"}], 
               ">", "tPresent"}], ")"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"nodeC", "=", "1"}], ",", 
               RowBox[{
                RowBox[{"nodeC", "\[LessEqual]", "size"}], "/.", "pars"}], 
               ",", 
               RowBox[{"nodeC", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", " ", 
                RowBox[{
                "if", " ", "the", " ", "nodes", " ", "are", " ", "really", 
                 " ", "a", " ", "triple"}], " ", "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"nodeA", "\[NotEqual]", "nodeB"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"nodeA", "\[NotEqual]", "nodeC"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"nodeB", "\[NotEqual]", "nodeC"}], ")"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{
                   RowBox[{"examine", " ", "AC"}], " ", "-", " ", 
                   RowBox[{"proxy", " ", "motif"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeB"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "<", "tImbalanced"}], ",", 
                    RowBox[{
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"\[Beta]Proxy", "*", 
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"examine", " ", "AC"}], " ", "-", " ", 
                    RowBox[{"indirect", " ", "motif"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"\[Beta]Indirect", "*", 
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeA", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"examine", " ", "CA"}], " ", "-", " ", 
                    RowBox[{"proxy", " ", "motif"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeB"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"imbalanceArray", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "<", "tImbalanced"}], ",", 
                    RowBox[{
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"\[Beta]Proxy", "*", 
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}]}], 
                   "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{
                    RowBox[{"examine", " ", "CA"}], " ", "-", " ", 
                    RowBox[{"indirect", " ", "motif"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}], ">", "tPresent"}], ")"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}]}], ")"}], "&&", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "<", 
                    RowBox[{"xadjA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeB", ",", "nodeC"}], 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                    RowBox[{
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}], "=", 
                    RowBox[{"\[Beta]Indirect", "*", 
                    RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                    RowBox[{"nodeC", ",", "nodeA"}], 
                    "\[RightDoubleBracket]"}]}]}]}], "]"}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"xdata", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"ii", "\[NotEqual]", "jj"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"adjA", "\[LeftDoubleBracket]", 
                  RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"modifiedA", "\[LeftDoubleBracket]", 
                  RowBox[{"ii", ",", "jj"}], "\[RightDoubleBracket]"}]}], 
                "}"}], ",", 
               RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", 
               RowBox[{"size", "/.", "pars"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"jj", ",", 
               RowBox[{"size", "/.", "pars"}]}], "}"}]}], "]"}], ",", "1"}], 
          "]"}], ",", 
         RowBox[{"{", "\"\<nix\>\"", "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xmaxi", "=", 
       RowBox[{"Max", "@", 
        RowBox[{"Flatten", "@", "modifiedA"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xTP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">", "tPresent"}], ")"}], "&"}], ")"}]}]}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xN", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "_"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xFP", "=", 
       RowBox[{"Length", "@", 
        RowBox[{"Cases", "[", 
         RowBox[{"xdata", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"_", "?", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"#", ">", "tPresent"}], ")"}], "&"}], ")"}]}]}], 
           "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"middle", "=", 
       RowBox[{"N", "@", 
        RowBox[{"{", 
         RowBox[{
          FractionBox["xFP", "xN"], ",", 
          FractionBox["xTP", "xP"]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xROCpointsLocal", ",", "middle"}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "@", 
          RowBox[{"Cases", "[", 
           RowBox[{"xdata", ",", 
            RowBox[{"{", 
             RowBox[{"_", ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"#", ">", "xmin"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{"#", "<", "xmax"}], ")"}]}], "&"}], ")"}]}]}], 
             "}"}]}], "]"}]}], ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"middle", "-", "left"}], "]"}], ">", "maxDist2D"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"xROCpointsLocal", "=", 
            RowBox[{"Generate2DROCrecursive2", "[", 
             RowBox[{
             "xadjA", ",", "imbalanceArray", ",", "left", ",", "xmax", ",", 
              "middle", ",", "tPresent", ",", "xROCpointsLocal", ",", 
              "maxDist2D", ",", "tImbalanced"}], "]"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"right", "-", "middle"}], "]"}], ">", "maxDist2D"}], ",",
            "\[IndentingNewLine]", 
           RowBox[{"xROCpointsLocal", "=", 
            RowBox[{"Generate2DROCrecursive2", "[", 
             RowBox[{
             "xadjA", ",", "imbalanceArray", ",", "middle", ",", "tPresent", 
              ",", "right", ",", "xmin", ",", "xROCpointsLocal", ",", 
              "maxDist2D", ",", "tImbalanced"}], "]"}]}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "xROCpointsLocal"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.480767279108342*^9, 3.480767280764413*^9}, {
   3.480767315193233*^9, 3.480767437847006*^9}, {3.4807674824079437`*^9, 
   3.4807677886478367`*^9}, {3.4807678556267776`*^9, 3.480768030241831*^9}, {
   3.48076809521441*^9, 3.480768126321455*^9}, {3.480770699356887*^9, 
   3.480770712495242*^9}, {3.480770744043462*^9, 3.48077078513273*^9}, 
   3.48077083622727*^9, {3.480770930612818*^9, 3.4807709344927263`*^9}, {
   3.4807709668638687`*^9, 3.480770994743442*^9}, {3.480771025679805*^9, 
   3.480771051674094*^9}, {3.480771084499555*^9, 3.480771085921994*^9}, {
   3.4807711302147503`*^9, 3.480771136720929*^9}, {3.480771324765935*^9, 
   3.480771342024645*^9}, {3.480831034679968*^9, 3.480831049759921*^9}, {
   3.480831810615596*^9, 3.480831895711688*^9}, {3.4808319402574663`*^9, 
   3.4808319657675667`*^9}, {3.480832004770133*^9, 3.480832109853163*^9}, {
   3.480832286030952*^9, 3.4808323066201067`*^9}, {3.480832337944866*^9, 
   3.480832363341411*^9}, {3.480832474269555*^9, 3.480832492657324*^9}, {
   3.480832539975679*^9, 3.480832574257802*^9}, {3.4808326582357273`*^9, 
   3.480832666663755*^9}, {3.480832729895268*^9, 3.480832744454007*^9}, {
   3.4808327989685698`*^9, 3.4808328091981497`*^9}, {3.480832967174185*^9, 
   3.480832978819231*^9}, {3.48083370272721*^9, 3.480833710134932*^9}, {
   3.480833987403469*^9, 3.480833990593966*^9}, {3.480834033736928*^9, 
   3.480834035318328*^9}, 3.480834078059885*^9, {3.480840839779895*^9, 
   3.4808408420112658`*^9}, {3.480843920660255*^9, 3.480843975260869*^9}, {
   3.480844056211101*^9, 3.480844056409719*^9}, 3.4808441272693768`*^9, {
   3.480844947327795*^9, 3.480844976566415*^9}, {3.48084510419881*^9, 
   3.480845136169456*^9}, {3.480845215071433*^9, 3.480845218125535*^9}, {
   3.4808452644109793`*^9, 3.480845265267057*^9}, {3.48084534622388*^9, 
   3.4808453489308777`*^9}, {3.480845380204666*^9, 3.480845380305511*^9}, {
   3.480845481003648*^9, 3.480845487754582*^9}, {3.480845529869125*^9, 
   3.480845531691133*^9}, {3.480845804697489*^9, 3.4808458674038*^9}, {
   3.4808459156210833`*^9, 3.480845922498361*^9}, 3.480846036318314*^9, {
   3.480846095361952*^9, 3.4808461157502947`*^9}, {3.4808462749714203`*^9, 
   3.480846280440401*^9}, 3.4808463201660967`*^9, {3.480847775446396*^9, 
   3.480847793811833*^9}, {3.480847974347226*^9, 3.480847977414671*^9}, {
   3.480848010247305*^9, 3.480848041792604*^9}, {3.480848344936551*^9, 
   3.480848370445671*^9}, {3.480848682451395*^9, 3.480848686649908*^9}, {
   3.4808525760435762`*^9, 3.480852603614744*^9}, {3.480933840900691*^9, 
   3.480933842401801*^9}, 3.482519728699498*^9, 3.4825197813328753`*^9, {
   3.483078457522393*^9, 3.483078519886224*^9}, {3.483263244414673*^9, 
   3.483263245157317*^9}, {3.483263291452898*^9, 3.4832633767076387`*^9}, {
   3.4832634125060053`*^9, 3.483263595943509*^9}, {3.483264834842998*^9, 
   3.483264842003291*^9}, {3.483264942278721*^9, 3.483264953902341*^9}, {
   3.4832669994381943`*^9, 3.48326700047615*^9}, {3.483267041773308*^9, 
   3.48326712559923*^9}, {3.48326717259107*^9, 3.483267212406184*^9}, {
   3.48326729298475*^9, 3.48326730940868*^9}, {3.4832673455658817`*^9, 
   3.4832674694792213`*^9}, {3.483272915622693*^9, 3.483272987776388*^9}, {
   3.483273035787518*^9, 3.483273107450383*^9}, {3.483273249528885*^9, 
   3.483273250894236*^9}, {3.483275550196876*^9, 3.483275664219694*^9}, {
   3.483275712460902*^9, 3.483275713465983*^9}, {3.483276219127555*^9, 
   3.4832762201735497`*^9}, {3.4832763175301037`*^9, 3.483276327838619*^9}, {
   3.4832763721814613`*^9, 3.48327643110627*^9}, {3.4832765439951468`*^9, 
   3.483276579446929*^9}, {3.48327662871272*^9, 3.48327665419326*^9}, {
   3.4832771655896673`*^9, 3.4832771773237543`*^9}, {3.483277329409916*^9, 
   3.483277350392263*^9}, {3.483277555564953*^9, 3.483277558892528*^9}, 
   3.483277607065505*^9, {3.4832780371952467`*^9, 3.4832780382263823`*^9}, {
   3.4832787743604717`*^9, 3.483278792661162*^9}, {3.483294781969866*^9, 
   3.4832948240920362`*^9}, {3.4832949255157757`*^9, 3.483294928788044*^9}, {
   3.4869892021410713`*^9, 3.486989229671682*^9}, {3.486989400609779*^9, 
   3.486989534089177*^9}, {3.486989664607909*^9, 3.486989759270411*^9}, {
   3.486989811169519*^9, 3.4869898595951757`*^9}, {3.486990035360814*^9, 
   3.48699003954116*^9}, {3.486990073045329*^9, 3.4869900812227793`*^9}, {
   3.486992489031311*^9, 3.4869924903161993`*^9}, {3.486992800134747*^9, 
   3.4869928038683777`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x3Ddata", "=", 
   RowBox[{"Generate2DROCsmart2", "[", 
    RowBox[{"adjAtest", ",", "0.2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.4832731254994507`*^9, 3.483273139654807*^9}, {
   3.4832755999021807`*^9, 3.483275604509925*^9}, {3.4832765645260553`*^9, 
   3.483276564830934*^9}, {3.483276944966432*^9, 3.483276950308466*^9}, 
   3.4869923051547327`*^9, 3.4869924589859533`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.486992796769556*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"x3Ddata2", ",", 
   RowBox[{"Mesh", "\[Rule]", "10"}], ",", 
   RowBox[{"MeshShading", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", "Blue"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", "Pink"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.483277633565357*^9, 3.48327763692767*^9}, {
  3.483277771528688*^9, 3.483277779638587*^9}, {3.4832779194228277`*^9, 
  3.483277946827216*^9}, {3.483278168174748*^9, 3.483278176566187*^9}, {
  3.483278425958642*^9, 3.483278447619834*^9}, {3.483278496515068*^9, 
  3.483278504071622*^9}, {3.483278541927621*^9, 3.4832785419881973`*^9}, {
  3.4832786198272123`*^9, 3.483278720135187*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["MiniTopologyTests - style examinantion", "Subsubsection",
 CellChangeTimes->{{3.47608455933117*^9, 3.4760845699446087`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "basedir", " ", "=", " ", 
   "\"\</Users/olav/Desktop/Doktorarbeit/Causality/transferentropy-sim/\
MiniTopologyTests\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"experiment", "=", "\"\<b\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.474634702299938*^9, 3.4746347311544733`*^9}, {
  3.474718670119697*^9, 3.474718671924358*^9}, {3.4747971416678543`*^9, 
  3.474797142475212*^9}, {3.474800489261229*^9, 3.474800489995036*^9}, {
  3.4760844313613997`*^9, 3.476084449688715*^9}, {3.476084550090692*^9, 
  3.476084553490382*^9}, {3.476084909870323*^9, 3.4760849189149847`*^9}, {
  3.4760850588529987`*^9, 3.4760850598508387`*^9}, {3.476085358056416*^9, 
  3.4760853990933733`*^9}, {3.476085457113785*^9, 3.476085457218384*^9}, {
  3.476085622802911*^9, 3.476085622935848*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xCORlist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetupCorAdjA", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "0"}], ",", 
     RowBox[{"i", "\[LessEqual]", "15"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"xtemp", "=", 
       RowBox[{"<<", 
        RowBox[{"(", 
         RowBox[{"\"\<adjA_iteration\>\"", "<>", 
          RowBox[{"ToString", "@", "i"}], "<>", "\"\<_\>\"", "<>", 
          "experiment", "<>", "\"\<.mx\>\""}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xpars", "=", 
       RowBox[{"<<", 
        RowBox[{"(", 
         RowBox[{"\"\<pars_iteration\>\"", "<>", 
          RowBox[{"ToString", "@", "i"}], "<>", "\"\<_\>\"", "<>", 
          "experiment", "<>", "\"\<.mx\>\""}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ShowStatus", "[", 
       RowBox[{"\"\<i = \>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", "\"\<...\>\""}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"xCORlist", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tauF", "/.", "xpars"}], ",", 
          RowBox[{"bins", "/.", "xpars"}], ",", 
          RowBox[{"FindCorAdjA", "@", "xtemp"}]}], "}"}]}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"Length", "@", "xCORlist"}], "]"}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowStatus", "[", "\"\<done.\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"i", ",", "xtemp", ",", "xpars"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.474634539030057*^9, 3.4746346676622467`*^9}, {
   3.474634741259531*^9, 3.474634871203823*^9}, {3.474638111155093*^9, 
   3.474638139337385*^9}, {3.474638392691846*^9, 3.474638402754376*^9}, {
   3.474638451591917*^9, 3.474638461082103*^9}, {3.4746392609962482`*^9, 
   3.474639277880331*^9}, {3.474649633425825*^9, 3.4746497300457087`*^9}, {
   3.474649917832234*^9, 3.474649920471068*^9}, {3.474649979142456*^9, 
   3.474649985819112*^9}, {3.474650041562615*^9, 3.474650046464445*^9}, {
   3.4746501149669523`*^9, 3.474650120764518*^9}, {3.474650170938566*^9, 
   3.474650196495709*^9}, {3.474650398276248*^9, 3.474650501679401*^9}, {
   3.474650547459135*^9, 3.474650548793483*^9}, {3.474650590404056*^9, 
   3.4746505927383013`*^9}, {3.474718682321541*^9, 3.474718754607449*^9}, {
   3.474718994980056*^9, 3.474719062454412*^9}, {3.474719438942134*^9, 
   3.474719454766931*^9}, {3.4747195493675413`*^9, 3.4747195631149473`*^9}, {
   3.4747289485991077`*^9, 3.474728969425205*^9}, {3.474740452200508*^9, 
   3.474740472776846*^9}, {3.4747410496458673`*^9, 3.474741114451659*^9}, {
   3.474741194869076*^9, 3.4747412079549417`*^9}, {3.474741252585948*^9, 
   3.4747412564258213`*^9}, {3.474791086494103*^9, 3.474791093122552*^9}, {
   3.4747911696326447`*^9, 3.47479119085953*^9}, {3.474792064722715*^9, 
   3.474792067001637*^9}, {3.474792308444542*^9, 3.474792308526043*^9}, 
   3.474792370037578*^9, {3.474792925111961*^9, 3.4747929324365597`*^9}, {
   3.474792976935145*^9, 3.474792989433237*^9}, {3.474793023804599*^9, 
   3.474793048704287*^9}, {3.474795445090502*^9, 3.474795445168686*^9}, {
   3.474795635544759*^9, 3.47479563956207*^9}, {3.474796342283462*^9, 
   3.474796342409535*^9}, {3.4747969037903833`*^9, 3.474796903933015*^9}, {
   3.474797135603181*^9, 3.474797137664744*^9}, {3.4747973682099237`*^9, 
   3.4747973688957853`*^9}, {3.474800499254033*^9, 3.474800510714903*^9}, {
   3.4748006678907137`*^9, 3.4748006696808243`*^9}, {3.474806302485499*^9, 
   3.474806309585951*^9}, {3.4748071693071423`*^9, 3.474807169953491*^9}, {
   3.476084583829031*^9, 3.4760845861969013`*^9}, {3.4760846369958143`*^9, 
   3.476084721183913*^9}, {3.476084754485219*^9, 3.476084756379161*^9}, {
   3.4760849215848713`*^9, 3.476084938778776*^9}, {3.476084993364854*^9, 
   3.4760850234206047`*^9}, {3.476085231686844*^9, 3.476085235005739*^9}, {
   3.4760853004259653`*^9, 3.4760853005695333`*^9}}],

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"xCORlist", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "experiment"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.4760848755826473`*^9, 3.476084878980839*^9}, {
  3.476085046420817*^9, 3.476085052474411*^9}}],

Cell[BoxData[
 RowBox[{"Histogram3D", "[", 
  RowBox[{"xdata", ",", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Automatic", ",", 
       RowBox[{"{", "0.002", "}"}]}], "}"}], ","}], "*)"}], 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], 
  RowBox[{"(*", 
   RowBox[{",", 
    RowBox[{"PlotLabel", "\[Rule]", "xfilename"}]}], "*)"}], "]"}]], "Input",
 CellChangeTimes->{{3.4607126237363653`*^9, 3.460712685608261*^9}, {
  3.460712801270215*^9, 3.460712939951242*^9}, {3.460712998925294*^9, 
  3.460713040962941*^9}, {3.464933105068862*^9, 3.464933113699194*^9}, {
  3.4649331530838013`*^9, 3.464933158129427*^9}, {3.467903609774246*^9, 
  3.4679036136363497`*^9}, {3.467903730996688*^9, 3.46790375240277*^9}, {
  3.467919884015923*^9, 3.467919887871016*^9}, {3.4746639225342484`*^9, 
  3.474663948372899*^9}, {3.474664094148568*^9, 3.47466412805658*^9}, {
  3.477916019325292*^9, 3.477916044498683*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["examine iterated  TE", "Subsubsection",
 CellChangeTimes->{{3.480954565310957*^9, 3.480954571259606*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "basedir", " ", "=", " ", 
   "\"\</Users/olav/Desktop/Doktorarbeit/Causality/transferentropy-sim/\
iterated_test\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "@", "basedir"}], ";"}]}], "Input",
 CellChangeTimes->{{3.474634702299938*^9, 3.4746347311544733`*^9}, {
   3.474718670119697*^9, 3.474718671924358*^9}, {3.4747971416678543`*^9, 
   3.474797142475212*^9}, {3.474800489261229*^9, 3.474800489995036*^9}, {
   3.4760844313613997`*^9, 3.476084449688715*^9}, {3.477647614937677*^9, 
   3.4776476200637407`*^9}, {3.477723656894039*^9, 3.477723660341339*^9}, 
   3.4777236916143436`*^9, {3.47843120995232*^9, 3.478431210373921*^9}, {
   3.479111919522838*^9, 3.479111920824479*^9}, {3.479644264887505*^9, 
   3.479644271366432*^9}, {3.480670259483221*^9, 3.480670260083139*^9}, {
   3.480671532791873*^9, 3.4806715353508*^9}, {3.480676420327409*^9, 
   3.480676420953883*^9}, {3.480760456996578*^9, 3.480760457293254*^9}, {
   3.4809545837747517`*^9, 3.480954591915634*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"xtemp", "=", 
   RowBox[{"<<", "\"\<adjA_iteration0.mx\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.480954620259626*^9, 3.4809546256973543`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xExistList", "=", 
  RowBox[{"Last", "@", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Cases", "[", 
     RowBox[{
      RowBox[{"GetConnections", "@", "adjA"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "_"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.480954688835096*^9, 3.480954794406851*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7", ",", "9", ",", "10", ",", "15", ",", "38", ",", "49", ",", "63", ",", 
   "65", ",", "74", ",", "75"}], "}"}]], "Output",
 CellChangeTimes->{{3.4809547399079103`*^9, 3.480954769114819*^9}, 
   3.480956389846246*^9, 3.4810061330993347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "-", "1"}]], "Input",
 CellChangeTimes->{{3.4809563918419323`*^9, 3.480956392636332*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6", ",", "8", ",", "9", ",", "14", ",", "37", ",", "48", ",", "62", ",", 
   "64", ",", "73", ",", "74"}], "}"}]], "Output",
 CellChangeTimes->{3.480956393167038*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xNonExistList", "=", 
  RowBox[{"Complement", "[", 
   RowBox[{
    RowBox[{"Range", "[", 
     RowBox[{"2", ",", "100"}], "]"}], ",", "xExistList"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.480954799349794*^9, 3.480954854178578*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "8", ",", "11", ",", "12",
    ",", "13", ",", "14", ",", "16", ",", "17", ",", "18", ",", "19", ",", 
   "20", ",", "21", ",", "22", ",", "23", ",", "24", ",", "25", ",", "26", 
   ",", "27", ",", "28", ",", "29", ",", "30", ",", "31", ",", "32", ",", 
   "33", ",", "34", ",", "35", ",", "36", ",", "37", ",", "39", ",", "40", 
   ",", "41", ",", "42", ",", "43", ",", "44", ",", "45", ",", "46", ",", 
   "47", ",", "48", ",", "50", ",", "51", ",", "52", ",", "53", ",", "54", 
   ",", "55", ",", "56", ",", "57", ",", "58", ",", "59", ",", "60", ",", 
   "61", ",", "62", ",", "64", ",", "66", ",", "67", ",", "68", ",", "69", 
   ",", "70", ",", "71", ",", "72", ",", "73", ",", "76", ",", "77", ",", 
   "78", ",", "79", ",", "80", ",", "81", ",", "82", ",", "83", ",", "84", 
   ",", "85", ",", "86", ",", "87", ",", "88", ",", "89", ",", "90", ",", 
   "91", ",", "92", ",", "93", ",", "94", ",", "95", ",", "96", ",", "97", 
   ",", "98", ",", "99", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.480954855040596*^9, 3.4810061356393538`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"endindex", "=", "20"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xtemp", "\[LeftDoubleBracket]", 
        RowBox[{"xExistList", ",", 
         RowBox[{"1", ";;", "endindex"}]}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"xtemp", "\[LeftDoubleBracket]", 
        RowBox[{"xNonExistList", ",", 
         RowBox[{"1", ";;", "endindex"}]}], "\[RightDoubleBracket]"}]}], 
      "}"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Iteration\>\"", ",", "\"\<AGTE\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<AGTE: excluding lowest TEs\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Mean", "@", 
      RowBox[{"xtemp", "\[LeftDoubleBracket]", 
       RowBox[{"xExistList", ",", 
        RowBox[{"1", ";;", "endindex"}]}], "\[RightDoubleBracket]"}]}], ",", 
     RowBox[{"Mean", "@", 
      RowBox[{"xtemp", "\[LeftDoubleBracket]", 
       RowBox[{"xNonExistList", ",", 
        RowBox[{"1", ";;", "endindex"}]}], "\[RightDoubleBracket]"}]}]}], 
    "}"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Iteration\>\"", ",", "\"\<AGTE\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<AGTE: excluding lowest TEs: mean\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.480954645083796*^9, 3.4809546552712517`*^9}, {
  3.4809548628751373`*^9, 3.480955046006796*^9}, {3.480955925054914*^9, 
  3.480956027291112*^9}, {3.480956086862547*^9, 3.4809561248117933`*^9}, {
  3.480956582775782*^9, 3.480956582909822*^9}, {3.4809566313958273`*^9, 
  3.480956638408206*^9}, {3.480957122420904*^9, 3.480957122842299*^9}, {
  3.480957664359036*^9, 3.480957671718582*^9}, {3.481006156322516*^9, 
  3.481006156489594*^9}, {3.4810120777052917`*^9, 3.481012077831501*^9}, {
  3.481012131552162*^9, 3.4810121884169893`*^9}, {3.4810122677497377`*^9, 
  3.481012291747035*^9}, {3.481012379862548*^9, 3.481012380148864*^9}, {
  3.481012455675592*^9, 3.481012488492915*^9}, {3.481012527835491*^9, 
  3.481012528946666*^9}, {3.481016630146508*^9, 3.48101663064613*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7JX+fit9MCfQHirgoL1I7VfNFBifw6HJOmC5
zS4YX8BBYPP03OVrYXwRB7s3rUzbmmF8CQdmp9cPT7vA+DIO7SLMKrMcYHwF
h7r8y/P/esD4Sg48z6XSMmxgfBWHxcyTNuSrw/hqDlYKnL/LhGB8DYcT0wMO
PmSF8bUcqheHzdh3PQDK13EQOnD20dFDML6ew7RJT1Wm7IPxDRwWmIuuNNgG
4xs69L7duuD7MRjfyEF3fUz+7JUwvjEa38RhU2PJxsylAfYAU9BSzQ==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7CW4bvC5vRG2hwo4nHsY9TZRXwTK53Cwmpiw
auZWGF/A4WPG446tP2B8EQfhD9kqnIdEoXwJh+UOaekXrWF8GTT1CmjmKTmg
2q/iECvx0vVtHUy/Gpp5GmjyWmjyOmh8PTT3GaDpN3R441c+r+KcGJRv5LBI
7VfNFEFxKN/Y4ejaJokXt2B8E4fqVtbvzHIS9gBwBE07
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7G+V5rsmNUXZQwUcLlywP3i0C8bncNj6cIPJ
h8UwvoBDnEd7u0EdjC/i0NNYKmMfAuNLOCjPe5PmZg/jyziYvfDOr9eD8RXQ
5JUcBEN643gDYHwVNPVqDisKWFaKWMP4Gg5nWQ7vbJOE8bUcgq7f+h0iCuPr
OIjrOtzOuhYJ5es5zP4fLmt5CcY3cFC4lB/Pfg7GN3RYuqR94dWTML6Rgx93
3BfRJTC+sUPWrzcNr7tgfBOHp+pX7WT7I+0B2gxPxA==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7M9su3ytI8HHHirgcFhwSdCbDBifw6HypZoh
xxoYX8Ch27jN0nE2jC/icI/B+P5BfxhfwsHw3P0WJxYYX8bBRcK+t/qzN5Sv
4NDnsGdd/AYYX8mh+lvMMrWDML4Kmryaw/UMywvOuTC+hsO5w5w+y0thfC0H
fvfwl++sYHwdB/9TS9rMGGB8PQfbBte6vwIwvoFDLfNkaddrXlC+oUOSCEt/
/nsY38hhgu8n5bqjML6xQ/ZOY2Ge5zC+CVw/AHU5TXI=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7NdISj7ROxRiDxVw0HBnXJRwDMbncJh1fuft
r5dgfAEH0b8LZ6pfh/FFHOQXXZQ9cg7Gl3AwfGOg9ncvjC/jYDUxYdXMrTC+
App5Sg4TtbrCI2/D+CoOPBFFot33YXw1NPs00OS10OR1HE5wrChgWQnj66HZ
b+CwP7niTfpGGN/QIeOUn/2KbhjfyKFaZJ37wyoY39hByFB10otUGN/EoSi/
7rBLc4g9AKyUU3E=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7M89jHqbqB9iDxVw2D399xMNBxifw2HBipyI
4EgYX8BByFB10otUGF/EYTqz7ZVtiTC+hIP50ceLolxgfBkHhyxh9e/WML6C
w0rfOXfeB8D4Sg4q1S2zFENhfBU0eTU08zUceuN4A6SyYHwtB86er7w+eTC+
Dpr79dDsN0DzjyGae40cPPmdV082hvGN0fgmDsFbivQNtEPsAfBsS+E=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7BvmFz508FCzhwo4oPI5HJYYG3zapAbjC6DJ
iziYlX/ZH9MN40s4CD42Xf9qDYwv4/Aueq3w9MeqUL6CQ6zES9e3dTC+koPw
h2wVzkMwvgqa+WoOb/zK51Wcg/E1HKK5N184lwnjazksd0hLv2gN06/jIPp3
4Uz16ypQvp7Dx4zHHVt/wPgGDk1rlofFx8LUG6K5xwiNb+zQsvPu6doimH4T
B6uJCatmblWxBwCzJVGa
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Nk/iHkE/Imwhwo4TEmP49v9HsbnQOMLOMzj
6ZsU/hzGF3Ew1WS9G3cJxpdwuPpq9WqmrTC+jIN7ccrT6QdhfAUHu3Mmib9P
wvhKDhvC3s6acA3GV0HTr+bw3IR7i/USGF/DgVllloNgN4yv5SAvrHn2WSGM
r+Ow+KkD/9ZcGF/PwTC246p8Ioxv4OCy/PndiAAY39Ah7KPbs4n2ML6RQ3Ur
63dmORjf2IEhQtbykiSMb+LwlnefwUytCHsAAo5PyQ==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7M3Y5gpYvXCyhwo4oPI5HASL7v0/zukM5Qs4
XHg3IanBBcYXcXhs8SFrpzGML4GmXsbBfvWZKdfuw8xTcJAS52tJYYTJKzn8
U6//3icF46s4fG3yL/6kBOOroZmngeY+LQflPbYcjD9hfB2H6FnRimuOwfh6
aPIGDjqJuT1zP8D4hg4eAX8kiq/D+EZo+o3R5E0cyjpfrW1c62QPAFOLTWE=

     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Lm5mo161cLtoQIOTKnB6z7owfgcDjMbT/34
LgnjCziIrN+0TVMOxhdxOL5rRy/bhzAoX8LhQvwLwcXPYXwZB5/eC+evvIbx
FRy2FkS2nmWA6VdysHQuPD77D0xeBc08NQenFwu8Lb7A+BoO+0Q7ObN+wPha
DoWK/Q/cTsH4Og5Tt/p+3LECxtdzUNadul15Doxv4KB76Yj1gckwvqHDNYvZ
fQx5ML6RA0tRpzK/C4xv7PBJXUv6WgiMb+KQGyp0kz0yzB4AjHJRJQ==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7B13MHF9/aJoDxVw+N7f+kLAQgnK53DovOy5
bdccGF8ATV7E4dLvY9fnRcL4Eg4bSuxsvCfAzJNBk1dwQLVPyUFGxeVnkxhM
XgWNr4ZmnobDrzm7Y/V9YXwtNPfpOKxL5ziuUw3j66HJGzjYrz4z5dp9GN/Q
4WuTf/EnJWUo38ghxb57qcc+mLwxmnoTOB8Apv1S7g==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7L82+Rd/UlK2hwo4rI66FMiXBuNzOKDKCzik
2Hcv9dinBOWLoKmXQOPLOLQdE3ac0w7jKzhIcN3gc3sD4ys52M6bJr/jFIyv
giav5vC5VPLfZV4VKF8DzXwthwvvJiQ1uMD4Omju00PjG6DpN3RINAo10FoJ
4xs52K8+M+XafZh6YzT1JnB5AFCUS7k=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7BvmFz508FCzhwo4oPI50PgCDtHcmy+cy4Tx
RdDkJRyO79rRy/YBxpdxeONXPq/iHIyv4CD42HT9qzUwvhKaeSpo5qk5mJV/
2R/TDeNrOCwxNvi0SQ3G13I4efwdkyorjK+Dpl/P4V30WuHpj1WhfAM0vqGD
RYuWafUCGN8IzXxjNPebwN0PAA+JUMs=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FX4XcQyH/HaQwUcUPkcDtvj7SINY2B8AYd7
DMb3D/rzQPkiaHwJNL6MA+si9dQgZ24oXwHNPCU0+1QcvDdYzPl5FaZfzeFP
rv+EG+/4oHwNhwn7PC8vyIDxtdD4Omjq9RwyZUN9BUr5oXwDB0W7DY/3OwhA
+YYO10WND91uhvGN0OSN0eRN4OYDALNGSbw=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7K0mJqyauVXEHirg8DHjccfWHzA+h0PLzrun
a4tgfAEHVPUiDuceRr1N1IfxJdD0yzgkGoUaaK0UhvIV0MxTQtOvgma+Gpp+
DQcJrht8bm9gfC00vg6aej2H1VGXAvnSYHwDNPMN0dxrhOY+YwfhD9kqnIdE
oXwTuPkA0ptOOQ==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7DU0NzAs45Gxhwo4FAXqKnWdlIbyORz2VK5y
zmuD8QUcDkwW01u9QRLKF3FA1S+Bpl4GTV7B4R6D8f2D/jC+Epq8Cpp+NYft
8XaRhjGyUL6Gw4R9npcXZMhB+VoObtPObNyzGsbXcbj17NiXFlUYXw9N3sBB
hd9FLPMRzDxDNPcYOeg6y7x+ZCYF5Rs7sC5STw1yhrnHBO4+AO7SR1c=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7B13MHF9/aJoDxVwkFFx+dkkpgTlczh0P6jX
vrkRJi/g8L2/9YWABUxeBE29hAOqeTIOaT4HpdIvw/gKaOqV0MxTcei87Llt
1xwYX83BfvWZKdfuw/gaDl+b/Is/KSlD+VoOq6MuBfKlwfg6aHw9NP0GaPKG
DolGoQZaK2F8I4cU++6lHvtg6o3R3GMCNw8AN15OEw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7LO1ug/pdenZQwUc3Kad2bhnNYzPgcYXcJiw
z/PyggwYX8TBpXOazbxp+lC+hMOfXP8JN97B5GUcFJn4FnqdhfEVHCJkzv3J
4jOA8pXQ9Ks4yH+9rq2zA8ZXQ5PXcPiz8uMl3ySYfi2Hq2eiuDx+w+R1HIw7
+N/80IfJ6zn0vt264PsxGN/AYVNjycbMpTC+oYOi3YbH+x1gfCM0vrGD26W8
L4byML4JnA8AFVdSLg==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7HPND5r7zpe1hwo4qPC7iGU+gvE50PgCDqjq
RRwm7PO8vCBDDsqXcLj17NiXFlUYXwaNr4BmnhKafhUHxo7dVaKSMHk1h0zZ
UF+BUnkoX8Ph6pkoLo/fML4Wmn4dhz+5/hNuvIPx9RzcLuV9MZRXgPIN0PQb
oskbodln7OB81KJemEsRyjdxULTb8Hi/g4I9ADRUSQc=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Ofx9E0Kf25hDxVwSNMrqFwjaQnlcziEPBEo
LNaC8QUcug/pdcn9gKkXcbj6avVqpq0wvoRDZcX5xqccMPUyDo6zNmZYWcP4
Cg6HF/gsPnkUpl4Jja+Cpl4NzT4Nh+cm3Fusl8D4Wg7ywppnnxXC+DoOvedT
/tvwwvh6Dn+6FxhOXmEO5Rs4GGft87Irg/EN0eSN0PjGDtked5JfOsP4JnB5
ACrQUPM=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7K+LGh+63SxgDxVwULTb8Hi/A4zPgcYXcPiT
6z/hxjs+KF/EIVM21FeglB/Kl3DQdZZ5/ciMC8qXcSgK1FXqOskN5Ss4eG+w
mPPzKg+Ur+Sgwu8ilvmIF8pXQZNXc9gebxdpGAOT10Dja6HxddD4emjmG6C5
3xBN3gjNP8YOV89EcXn8hvFNHCbs87y8IIPPHgBWUUYt
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7A9MFtNbvUHSHirgwLVnsn9/LozP4VCWPZPn
+GcYX8BB11nm9SMzKShfxMH/1JI2MwZpKF/CYR5P36Tw5xJQvgwaX8GBdZF6
apAzTL2Sw2Op+Sf/VcLMU0EzTw1NXgNNXgvNPB2HokBdpa6TML6eg4bmBoZl
PDJQvgEa39Bh6o2te+9OgvGN0PQbO9xjML5/0B8mbwJ3DwDlakjB
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Atcvq/J3qJjDxVw2JlTcs6/EMbnQOMLODB2
7K4SldSF8kUctsfbRRrGwPgSDm7Tzmzcs1oPypdx2BrE8UTIHcZXcOjbKBzX
FKwP5Ss5/EqQlN51E8ZXceD7EnC7LdAAyldzuHomisvjN0xew6F6cdiMfddh
8loOYfwz2n1+wvg6DhmR3/tbX8D4eg6H9s11aak3hPINHK5y/PXZmwfjGzp0
P6jXvrkRxjdCU2+MJm/isKHEzsZ7gqE9AMtwULI=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7IU/ZKtwHhK1hwo4xEq8dH1bB+NzOKDKCzgs
d0hLv2gN44s4mJV/2R/TLQblS6DxZdD4Cmh8JYeG+YUPHTxgfBWHN37l8yrO
wfhqDovUftVMERSH8jXQ9Gs5RPyrid4QApPXQVOvh2aegcPHjMcdW3+IQPmG
aP4zcrCamLBq5laYvDGaf00cWnbePV1bJGIPAOdmT2g=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7DNlQ30FSvntoQIOV89EcXn8hvE5HFDlBRwm
7PO8vCCDD8oXcVC02/B4v4MAlC+Bpl8GTV7BQUbF5WeTmBCUr+SQ5nNQKv2y
IJSvgiav5tB52XPbrjkwvobD1yb/4k9KwlC+lkOiUaiB1koYX8dhddSlQL40
GF8PjW/gcO5h1NtEfREo39ChZefd07VFML4RmnpjNL4JnA8A3IBICw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7F85OmpG7VS3hwo4oPI5HBap/aqZIgjjCzjw
X/tveWY6jC/iEPGvJnpDCIwvgSYv42Cctc/LrgzGV3BYIHmEvewPjK+EZr4K
mrwamns00MzXQrNfB029nkPtJOscJWMY38Dh6NomiRe3YHxDNPVGDm/8yudV
nFOD8o3R5E0czMq/7I/pVrMHAOfcTcs=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7EOeCBQWa0naQwUcUPkcDjM/Ka6Q2isF5Qs4
PDfh3mK9RALKF3Hg2jPZvz8Xpl7CobqV9TuzHExeBo2v4DCPp29S+HMYXwnN
PhU0vhoaXwPNPi2Hx1LzT/6rhLlPB42vh6bewKEseybP8c8wviGa/4wcdJ1l
Xj8yg/GN0fgmcPUAb95IUg==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7H/N2R2r7ytoDxVwkFFx+dkkJgTlczik+RyU
Sr8Mkxdw6H27dcH3YwJQvojD1TNRXB6/+aF8CYcJ+zwvL8jgg/JlHLw3WMz5
eZUHyldAk1dyyJQN9RUohelXcdgebxdpGMML5as5/Mn1n3DjHUy9Bpq8loMK
v4tY5iMYXweNr4dmnwGavCGavBGae4zR/GficF3U+NDtZgF7AOA4SXw=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7L/3t74QsFCyhwo4XPp97Pq8SBifwwFVXsBB
RsXlZ5MYjC/i8GvO7lh9X0UoX8Kh+0G99s2NML6MQ+/brQu+H1OA8hUcnI9a
1AtzweSVHDY1lmzMXAqTV3GQN6zKW6gNk1dzcNzBxPX1C4yvgWaelsOflR8v
+SbB+DoObpfyvhjKw/h6Dn9y/SfceCcH5Rs4KNpteLzfASZviGa/kUNGJMjH
ML4xmntM4OoByLZTIA==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Pmv/bc8M93cHirg8MrRUTNqJ4zP4RDxryZ6
QwiML+CAql7Eofd8yn8bXgsoX8LBMLbjqnwijC+DJq/gcPXV6tVMW2F8JYcN
YW9nTbgG46s4/KrL2lMyGcZXQ5PXcOg+pNcl9wPG10Lj66Cp13OQYfscfiLG
Eso3cFjnuV216CCMb+jgOGtjhpU1jG/k8KPQxD2sDsY3RuObOEj93PNopbuV
PQAp81N2
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7L/3t74QsFCyhwo4XPp97Pq8SBifwwFVXsCh
87Lntl1zYHwRhxT77qUe+2B8CQcpcb6WFEZlKF/G4cK7CUkNLjC+gsO5h1Fv
E/VVoHwlh9VRlwL50mDyKg5fm/yLPynB+Gpo8hoO9qvPTLl2H2afFpp9Omju
03OQUXH52SQG4xugucfQQYLrBp/bGxjfCM18YzTzTeDhAQBi/kzn
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Hvfbl3w/ZiCPVTAISPye3/rCxifw+HPyo+X
fJNgfAGHTY0lGzOXwvgiDop2Gx7vd4DxJdDUy6DJKzhcFzU+dLsZxldyuHom
isvjtzyUr4LGV0PjazjIf72urbMDxtdykDesyluorQjl6zg4H7WoF+aC8fUc
UP1n4ND9oF775kaYvKHDhhI7G+8JML4RmnnGaHwTePgAAHShUbg=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7KtbWb8zy1nYQwUcMq2XvTulB+NzOIR9dHs2
0R7GF3DoPZ/y34YXxhdBUy+BxpdB4ys4uCx/fjciAMZXQjNfBU29mgOq+zQc
NiUrC6x/bQ7laznIC2uefVYIk9dBU6/nEPGvJnpDCEy9gYNx1j4vuzIY39DB
bYtscHkqjG+Ept4YTd7EIdvjTvJLZ3N7AFjlTHo=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7P/k+k+48U7PHirg4DbtzMY9q2F8DgdFJr6F
XmdhfAGHCfs8Ly/IgPFFHDa7Xsr7YqgP5Us4/EqQlN51E8aXcXDpnGYzbxqM
r+AQIXPuTxafAZSvhCav4uAGMk4eJq/mcPVMFJfHb5i8hsOflR8v+SbB5LXQ
+DoOR09f3rloCoyv56Bot+HxfgcY3wBN3tDhuqjxodvNML4RmnnGDtWLw2bs
uw7jmzi8jJ90SqTYwB4AdnBW3A==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7G3nTZPfcUrZHirgkGgUaqC1EsbncIhXld/N
PUUFyhdAkxdx+Fwq+e8yL0xewmGl75w77wNgfBk0/QoOVhMTVs3cCuMrOXzM
eNyx9QeMr+Jw5opKhbOUKpSvhma+hoPo34Uz1a/D+FoOwh+yVTgPwdTrOCx3
SEu/aA3j66GZZ+DQtGZ5WHwsjG+Ipt8IzXxjh1iJl65v62DyJnA+AK3QSyg=

     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7H/N2R2r7xtoDxVwQOVzOOyUzDvwvB3GF3A4
k3z2hEI5jC/iEGD2lOt9EYwv4ZCjWjL9SCSML4PGV3C4t1bnYmQajK/kcJXj
r8/ePBhfxeF5UEzot1gYXw1Nv4ZDXf7l+X89YHwtB3nDqryF2jC+joPzUYt6
YS4YX89h/ycFW1c+GN/A4dbD9SelvgZA+YYOYfwz2n1+wvhGDhdtGlzr/sL4
xg7fLtiFfbgN45vAzQcAHUZRsA==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7B13MHF9/aJoDxVw+N7f+kLAQgnK53BAlRdw
6H5Qr31zI4wvgiYv4XDp97Hr8yJh+mUcZFRcfjaJwfgKDp2XPbftmgPjKznY
rz4z5dp9GF/FQUqcryWFURnKV3NYHXUpkC8Nxtdw+NrkX/xJCcbXcpDgusHn
9gbG10Hj6zmcuaJS4SylCuUboPENHT6XSv67zKsC5Rs5WE1MWDVzK4xv7JBo
FGqgtRJmnglcPQB11Uwy
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7B13MHF9/aJoDxVwQOVzOFzl+OuzNw/GF3DI
iPze3/pCAcoXQeNLOPxZ+fGSbxKML4Mmr+Dwa87uWH1fmHlKDs5HLeqFuWB8
FTS+Gpp7NBy6H9Rr39wI42uh8XUcLv0+dn1epBKUr+ewocTOxnsCTN4ATb0h
Gt/IIc3noFT6ZRjfGI1vAlcPABRrUnM=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7B13MHF9/aJoDxVwQOVzOKT5HJRKvwzjCzhk
RH7vb32hAOWLOHQ/qNe+uREmL+Egb1iVt1AbxpdBM0/B4dLvY9fnRSpB+Upo
8ioO9qvPTLl2Hyav5rChxM7GewJMXgPNfC00+3UcQK4TsIDp10NzvwGa/YYO
Vzn++uzNg8kbofnP2EFGxeVnkxhMvYnDrzm7Y/V9Fe0BvKFQvw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7GMlXrq+rRO1hwo4CH/IVuE8BONzOHzMeNyx
9YcIlC/ggKpexOHk8XdMqqxiUL6EA/+1/5ZnpotD+TIOhrEdV+UTJaB8BYfq
VtbvzHIwvhKavIrDPJ6+SeHPYXw1B11nmdePzKSgfA0H/1NL2swYpKF8LQcN
zQ0My3hkoHwdB+8NFnN+XoXx9Rz2VK5yzmuDqTdA02/oEPJEoLBYSxLKN0Lj
GzscmCymt3oDjG/iYFb+ZX9Mt5g9AAR1SO4=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7LO1ug/pdenZQwUc/uT6T7jxDsbncJiwz/Py
ggwYX8Bhe7xdpGGMLpQv4uCxmEn99gEYX8JBhd9FLPMRjC/j8L+qlfU7M0y/
gsPWII4nQu4wvpKDIhPfQq+zML4Kmryaw2bXS3lfDPWhfA2HTNlQX4FSGF/L
wbiD/80PfQMoX8chQubcnyw+GF/PQdFuw+P9DjC+AZp6QzTzjND4xg4undNs
5k2D8U3g7gEA5bRHIA==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7L3tH765ZuRpDxVwSNMrqFwjCeNzODjO2phh
ZQ3jCzjEdjp85VeC8UUc8i/P/+shCONLONzrv60/f40HlC/jcHiBz+KTR2F8
BYerr1avZtoK4ys5fLxpZXFjNoyv4iCW99PDqwrGV3P4VZe1p2QyjK/hoLEj
IrA5E8bXcjCM7bgqnwjj66Dx9Rx8fcSTvrrD+AYOLVqm1QtEYXxDh97zKf9t
eGF8I4cFkkfYy/64Q/nGDkUPrhalq8HkTRxW7vvcLfTF3R4A3s5QZQ==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7NuOCTvOaVe2hwo4JBqFGmithPE5HC68m5DU
4ALjCzisjroUyJcG44ugqZdA48ug6VdAk1dCM08Fja+Gpl4Dja+FZr6Ow9cm
/+JPSjC+noP96jNTrt1XgvIN0PiGaHwjB9TwMEZzjwmcDwC9Z0mi
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7E8ef8ekyqpmDxVwaJhf+NDBA8bncIjm3nzh
XCaML+CwxNjg0yY1GF/EYZHar5opgupQvoSDcdY+L7syGF/GIeJfTfSGEBhf
AU1eCU1eBU1ezYH/2n/LM9NhfA2Hwwt8Fp88qgHlaznM4+mbFP4cxtdxeG7C
vcV6CYyvh8Y3cHiqftVOtl8TyjdE4xs58Jw8eWRtE0y9scPs/+Gylpdg8iZw
PgA6lU1b
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7EOeCBQWa0naQwUc5vH0TQp/LgHlczgcmCym
t3oDTF7AAVW9iAPXnsn+/bkwvgQaX8bhuQn3FuslMPMU0PhKaHwVB/5r/y3P
TBeH8tXQ3KOBZr+WA+si9dQgZ2koX8fB/9SSNjMGGF/PYeYnxRVSe6WgfAM0
9YYOus4yrx+ZweSN0PxrjCZvAucDAMg3RfA=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7PdUrnLOa9O2hwo4sC5STw1yhvE5HIoCdZW6
TsL4Ag5aZs9KjyjC+CIOD3kzQx6kwPgSaPplHHbmlJzzL9SB8hUcCly+r8ne
AuMrofFVHO4xGN8/6A/jqzloaG5gWMYD42ugqddy8N5gMefnVRhfx2Hqja17
706C8fUcGDt2V4lK6kL5Bg7/q1pZvzPrQfmGDrnmB81958PkjdDUG6OpN3FQ
4XcRy3ykaw8AocBJlA==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7GVUXH42iSnZQwUcUPkcDlc5/vrszVOE8gUc
NpTY2XhPgPFFHJyPWtQLc8H4Eg6OO5i4vn6B8WUcLv0+dn1eJMw8BTTzlRy+
97e+ELCA8VUc1qVzHNephvHVHDove27bNQfG13C48G5CUoOLMpSv5WA7b5r8
jlMwvo7DSt85d94HqED5emjyBg7xqvK7uafA5A0dEo1CDbRWwuSNHNqOCTvO
aYfxjdH0mzisjroUyJembA8AdEhKJw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7HPND5r7zpe1hwo4oPI5HG49O/alRVUOyhdw
2B5vF2kYA5MXQVMv4TD1xta9dyfJQPkyDhqaGxiW8cD4Cg73GIzvH/SH8ZXQ
9KugqVdz2FO5yjmvTRrK13Dw3mAx5+dVmLyWgwq/i1jmI5h+HTT36TlM2Od5
eUEGzP0GDm7TzmzcsxrGN3SQ/3pdW2eHPJRvhGaescNm10t5Xwxh8iZw/QCH
8UqL
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7HlOnjyytknDHirg8NyEe4v1Ehifw8EwtuOq
fCKML4DGF0HjSzjoBwQlMPpoQvkyDrP/h8taXoLxFRyCrt/6HSKqBeUrOZRl
z+Q5/hkmr4LGV3PgWB97qyACpl4DTV7L4cBkMb3VG2B8HTT79Ryeql+1k+2H
8Q3Q7DdEkzdC02+MJm/iMI+nb1L4cw17AJv2SR0=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7PctMYxyDw22hwo4bP3PeG1VLIzP4aDesYvf
IQvGF0Djizj4yFQqbPKA8SUcCjaYG6qow/gyDlNdvjlOY4XxFRykxPlaUhhh
fCUHjrPrqrWFYHwVh7NKItGOl4OgfDWHw7VPri25DeNrOAR+1Z7Lfx7G13Ko
15MyklsK4+s48C5L/NExA8bXc2BhNCp5swDGN3BYcuiG04RmGN/QYTuPhffJ
IhjfyMG1pV7QJA3GN3a49PvY9XmRML6Jw7p0juM61UH2ADbnScQ=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Kfe2Lr37iQZe6iAA2PH7ipRSVkon8NBQ3MD
wzIemLyAg66zzOtHZlJQvogD6yL11CBnaShfwsH/1JI2MwYYXwZNXgHNPCU0
+1TQ5NUcigJ1lbpOwvRroKnXcviT6z/hxjs5KF/HQf7rdW2dHfJQvp7DZtdL
eV8MYXwDh6tnorg8fsP4hmjmGTl4b7CY8/MqzH5jNPNNHHLND5r7zpe1BwDd
C0Vf
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7BdIHmEv+2NuDxVw6D2f8t+G1wLK53BwWf78
bkQAjC/gUN3K+p1ZDsYXcdgQ9nbWhGswvoQDz8mTR9Y2wfgyDml6BZVrJC2h
fAUHrj2T/ftzYXwlh6fqV+1k+2F8FTS+moPUzz2PVrpbQfkaDhJv2nK7jayh
fC2HokBdpa6TML6Ow57KVc55bTC+nsNHr0nPf9nZQPkGDjtzSs75F8L4hg5n
tl2+1pEA4xuhmWfsoKG5gWEZD0zexKFldo/W4R3W9gBeik+D
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7G+xSEyzv29mDxVwQOVzOCjrTt2uPAfGF3Aw
K/+yP6Ybxhdx8DgYfGJqFYwv4RDNvfnCuUwYX8YhN1ToJnskjK+AJq+Epl8F
TV7NoWF+4UMHDxhfw+HfjGvLNu6F8bUcBB+brn+1BsbXQXO/Hpq8gcMSY4NP
m9RgfEOHSS8vvKw0h/GNHLbX9v96LQrjG6PZbwKXBwAByVJX
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7OW/XtfW2SFvDxVwuHomisvjN4zP4bDZ9VLe
F0MYX8DhT67/hBvv5KB8EYcJ+zwvL8iA8SUc3Kad2bhnNYwvg6ZewQHVPiU0
eRU0+9TQzNNwyDU/aO47XxbK10LTr4OmXw9NvQGaeYZo7jdyUOF3Ect8BFNv
jKbexOHWs2NfWlTl7AGidFYE
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7BONQg20VirbQwUcUPkcDhJcN/jc3sD4Amh8
EYeVvnPuvA9QgfIlHGznTZPfcQomL+Nw7mHU20R9mLyCw+dSyX+XeWF8JYd4
Vfnd3FNgfBWHM1dUKpylVKF8NTR5DTR5LTS+joPwh2wVzkMwvp7Dx4zHHVt/
wPQbOFi0aJlWL4DJG6LxjRxE/y6cqX4dpt7YIVbipevbOpi8Cdw8AIgySbc=

     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FkXqacGOUvbQwUcUPkcDo+l5p/8VykF5Qs4
HJgsprd6gySUL+JQFKir1HUSpl4CTb2Mw8xPiiuk9sL4Cg5ceyb79+fC9Cs5
lGXP5Dn+GcZXQZNXQ7NPw0HXWeb1IzOYeVpo5uugmaeHpt4AzX2GDiFPBAqL
tWDqjRzm8fRNCn8uAeUbo+k3cXhuwr3FeomEPQCkVUp+
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7HlOnjyytknDHirgYBjbcVU+EcbncDi6tkni
xS11KF/AYYHkEfayPzC+iEN1K+t3ZjmYegk09TIOhxf4LD55FCav4FBZcb7x
KYcmlK/kEPJEoLBYC8ZXQVOv5qDrLPP6kZkWlK/hsK/twY6e2TC+loP/qSVt
ZgzaUL6Ow8xPiiuk9sLk9dD4Bg4PeTNDHqTA1Bs6lMQlT19xDyZvhKbeGE29
iYOW2bPSI4ra9gBud1Cx
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FX4XcQyH/HaQwUctsfbRRrGwPgcDjM/Ka6Q
2ssF5Qs46DrLvH5kBuOLOLAuUk8NcuaG8iUcigJ1lbpOwvgyaPoV0NQrocmr
oPHV0OzTQHOfloP3Bos5P6/yQPk6aPJ6aPIGaPKGDvcYjO8f9IfJGzkcmCym
t3oDJ5RvjKbfBO4+AKn/RoM=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Dc1lmzMXGpgDxVwQOVzOBw9fXnnoikwvoDD
y/hJp0SKYXwRB0W7DY/3O8D4Eg69b7cu+H4MxpdBU6+AxldCs0/FoXpx2Ix9
12F8NYfrosaHbjfD+BoOYfwz2n1+wvhaaOp10Ph6DgvMRVcabIPxDdDcZ4jG
N0LTb+yQEfm9v/UFjG8C5wMAAN9Z+A==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7I+ubZJ4cUvdHirggMrncKidZJ2jZAzjCzhE
c2++cC5TDcoXcTAr/7I/phvGl0BTL+NgnLXPy64MxldwWKT2q2aKIIyvhGaf
isMbv/J5Fedg5qk5HN+1o5ftA4yv4fDchHuL9RINKF/LIeSJQGGxliaUr+Ow
QPIIe9kfmHl6aPYZOBjGdlyVT4TpN3Tgv/bf8sx0mLwRmnuM0cwzcahuZf3O
LKdhDwAlu05k
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7BXtNjze76BgDxVw+LPy4yXfJBifw0H+63Vt
nR3yUL6Aw9UzUVwev2F8EYdNjSUbM5fC1Eug8WXQzFNwyIj83t/6AsZXcpA3
rMpbqK0I5as4OB+1qBfmgvHVHNJ8DkqlX4bxNRwcdzBxff0C42s5XPp97Pq8
SCUoXwdNXg9N3sCh87Lntl1zYHxDBxkVl59NYjC+kcNVjr8+e/Ng+o3RzDNx
6H27dcH3Ywr2AFBPU3M=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Pmv/bc8M53dHirgsEjtV80UQRifA40v4ICq
XsTBrPzL/phuNihfAk1eBk1eAc08JTS+isPHjMcdW3+wQPlqDrESL13f1rFC
+RpofC0083XQ9Os5nDz+jkmVFSZvgCZviGaeERrfGM19JnD9AJNEUw0=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7NN8DkqlXxa0hwo4yKi4/GwSE4LyORzsV5+Z
cu0+jC+Axhdx+NrkX/xJSRjKl0DjyzhIcN3gc3sD4ys4WE1MWDVzqwiUr+TQ
svPu6doiGF8Fja/m8MavfF7FOTEoXwONr+WwSO1XzRRBcShfB01ez4H/2n/L
M9Nh8gZo6g0dIv7VRG8IgfGN0OSNHRrmFz508ICZZ+Ig/CFbhfOQqD0Ab1BQ
sw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Ft23j1dW6RiDxVwiFeV3809BcbncBD9u3Cm
+nUYXwCNL4LGl3CwaNEyrV6gCuXLOCx3SEu/aA3jKzgIf8hW4TwE4yuhqVdx
eBe9Vnj6YxhfDU29Bpq8Fpq8jkPTmuVh8bEwvh6afwwcPmY87tj6A8Y3RHOf
EZp/jB2sJiasmrkVxjeB6wcAEexN9A==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7O98/pO52MrWHirggMrncJh0ut5jfy2ML4DG
F3FQk6nqbv9uA+VLOFik3Zx84BmML+Mw9cbWvXcnwfgKDvcYjO8f9IfxlRzi
2c9JBt6yhvJVHHz35glKvIbx1RxW6ntbm06H8TUcHvJmhjxIgfG1HNpXHJr/
8KwVlK/jsK/twY6e2TC+noOus8zrR2YwvoEDx/rYWwURML4hmrwRGt/YQern
nkcr3WF8EzgfAKz+VHc=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7N9FrxWe/tjVHirggMrncPjOcHe68W0YXwCN
L+LA5W2zIOcUjC/hwLiMR+bCJRhfBk29goPM1Nkrlu6E8ZXQ9Kug8dXQ1Gs4
CH/IVuE8BONrOVSyV1w6lArj66Dx9Rya1iwPi4+F8Q0cugOv3/odAuMbOsyd
bfbYxAXGN0KTN3ZY7pCWftEaxjeBqwcA2uZRfg==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7B9o7/o6S87EHirgcO5h1NtEfRifw6GkZotF
8gxjKF/AYff03080HGDyIg6fSyX/XeaF8SUcbOdNk99xCqZexkErxFy8/jaM
r+BQlF932KUZpl7JYaXvnDvvA2B8FTS+Ghpfw2E6s+2VbYkwvhaae3QcWnbe
PV1bBOProdln4KDhzrgo4RiMb4jGN3KIV5XfzT0Fxjd2sJqYsGrmVhjfBM4H
AIWwUPY=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7F85OmpG7TS3hwo4HF3bJPHiFozP4aCoEO/E
2g7jCzigqhdxyLRe9u6UngWUL+HAc/LkkbVNML6Mw6+6rD0lk2F8BQcZts/h
J2IsoXwlhwOTxfRWb4DxVRz0A4ISGH1gfDWHp+pX7WT7YXwNB11nmdePzKyg
fC2HmZ8UV0jthfF1HNpXHJr/8CyMr+ewxqZxQ/AaGN/AAWS7ZIg1lG/oUBKX
PH3FPZi8kcOeylXOeW0weWM09SZwPgDln05r
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FdHXQrkS1O2hwo4XHg3IanBBcbncLCdN01+
xykYXwBNXsSh87Lntl1zlKB8CYfv/a0vBCxgfBmHS7+PXZ8XCeMrOKxL5ziu
Uw3jK6HJqzhIifO1pDDCzFdDU6/hkGLfvdRjH4yvhcbXQePrOdivPjPl2n0Y
3wCNb+iA6n8jNPuM0fxnApcHAFjGUEs=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7M8VMNvZ9zjYQwUcdqstMWWbC+NzOBw9fXnn
oikwvoADqnoRNL6Ew2eWQ34bs2B8GYeX8ZNOiRTD+Apo8koO10WND91uhvFV
0OxTQzNfw2FTY8nGzKUwvhYaXwdNvR6avIFD79utC74fg/EN0fxrhOZeYzTz
TODqAZTrUD0=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7C+8m5DU4GJsDxVwQOVzOKyOuhTIlwbjCzjs
W2IY5R4K44s42M6bJr/jFIwv4SDBdYPP7Q2ML+PAeqCCjfcvjK/g8EB719dZ
ciZQvpLDuYdRbxP1YXwVh8+lkv8u88L4ag5F+XWHXZphfA2HKd/Y4mf4mEL5
Wg7CH7JVOA/B+DoOJ4+/Y1JlNYPy9RzMyr/sj+mG8Q0cork3XziXCeMbOngc
DD4xtQrGN0JTb+ygrDt1u/IcGN8EzgcAlBZNnw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Gd+UlwhtVfKHirg4H9qSZsZgzSUz+Gwp3KV
c14bjC+AxhdxYF2knhrkDONLOByYLKa3eoMklC/jwLVnsn9/Loyv4DCPp29S
+HMJKF/J4bkJ9xbrJTC+Cpq8mkPIE4HCYi2Yfg00vpbDIrVfNVMExaF8HTS+
Hpp5Bg4R/2qiN4TA5A0d+K/9tzwzHcY3QpM3RuObwN0LAFTzSlg=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7LfH20UaxsjaQwUcGDt2V4lKwvgcDir8LmKZ
j2B8AYdbz459aVGVg/JF0PgSaPpl0OQVHHLND5r7zofJKzlM2Od5eUEGTF7F
wW3amY17VsP4ag6o7tNAk9dykP96XVtnhzyUr+OQKRvqK1AK4+s5bHa9lPfF
EMY3QFNv6HBd1PjQ7WYFKN/I4c/Kj5d8k2B8Y4dNjSUbM5fC+CZweQAbaU9l

     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7HmeS6Vl2BjaQwUcfs3ZHavvC+NzOMgbVuUt
1IbxBdDkRRw2lNjZeE+A8SXQ5GXQ+AoOVzn++uzNg/GV0PSrOKT5HJRKvwzj
qzno5y1m3MNqBOVroPG1HJ66qj247gHj6zgc2Jh+PjULxtdz6LzsuW3XHBjf
wMF+9Zkp1+7D+IYOgV+15/Kfh/GNHFLsu5d67IPxjdH0m8DNBwBxDk4/
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7POTPPzU8kztoQIOsRIvXd/WwfgcDk1rlofF
x8L4Ag4WLVqm1QtgfBGH7bX9v16LmkH5Eg65oUI32SNhfBmHJcYGnzapwfgK
DrWTrHOUjM2hfCWHbI87yS+dYXwVhwl3ZpVEK8H4ag6KCvFOrO0wvobDpmRl
gfWvYXwth6NrmyRe3ILxddDk9Rx6z6f8t+G1gPINHOSFNc8+K4TxDR0yrZe9
O6UH4xs5/KrL2lMyGcY3RpM3cTCM7bgqn2hhDwB6p0tO
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7GOXT5x26rajPVTAIc3noFT6ZRifw6HJOmC5
zS4YX8ChYpqC8oJDML6Iw1yt+8ZCC2F8CYczyWdPKJTD+DIOy8/z7Vg3A8ZX
cLi3VudiZBqMr+RwaN9cl5Z6GF/FYUOJnY33BBhfDU2/hgPPc6m0DBsYX8vB
NyuDeQMjjK/jUPRPTUTpgQOUr4cmb+CwqbFkY+ZSmLyhQ+/brQu+H4PxjRyu
ixofut0M4xs7HD19eeeiKTC+icNutSWmbHMd7AGJ1VCJ
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Gd+UlwhtVfKHirg8Fhq/sl/lTA+h8OByWJ6
qzdIQvkCDv6nlrSZMUhD+SIOrIvUU4OcYXwJh5AnAoXFWjD1Mg7zePomhT+X
gPIVHKpbWb8zy8H4SmjyKmjyag7PTbi3WC+B8TUcyrJn8hz/DDNfC80+HTT3
66GpN0BzvyGa+UZo9hs7GMZ2XJVPhPFN4HwAJqVHjQ==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7A9MFtNbvUHTHirggMrncJjH0zcp/LkGlC/g
cHiBz+KTR2F8EQeekyePrG2C8SUcKivONz7lgOmXcQj76PZsoj1MXgFNv5LD
cxPuLdZLYHwVh5AnAoXFWjD9ag4LJI+wl/1Rh/I10OzTQnOfjoNhbMdV+UQY
Xw9N3gDNPkM084zQ3G+Mpt/EQT8gKIHRR9MeAGJZTxE=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7IOu3/odImplDxVwsO+t/iytBuNzOFy4YH/w
aBeML+Aw85PiCqm9ML6Ig5bZs9IjitZQvoRDkghLf/57mLyMw7nDnD7LS2Hy
Cg47c0rO+RfaQPlKDsxTP7431oPxVRzufP6TudjKFspXc9gebxdpGAPjazio
8LuIZT6C8bUctgZxPBFyt4PydRyOz0l/420G4+uh8Q0c/uT6T7jxDsY3dDja
b1iuq2gP5Rs5XL85oT5NAMY3RpM3cXDpnGYzb5q9PQBAtU52
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FdHXQrkSxO2hwo4fG3yL/6kBONzoPEFHCS4
bvC5vYHxRRwSjUINtFbC+BIOMiouP5vEhKB8GQf71WemXLsP4ys4XPp97Pq8
SBhfCU2/Cpp+NQdU92k4dF723LZrDkxeC02/Dpr79Bxadt49XVskAuUbOHzM
eNyx9QeMb4jmPyOHWImXrm/rRKF8Y4eTx98xqbKKQfkmcHkApP9LSQ==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7JcYG3zapKZmDxVwQOVzOFi0aJlWL1CF8gUc
ljukpV+0hvFFHE4ef8ekygpTL+HwLnqt8PTHMHkZNL6Cg/CHbBXOQzC+Epr5
Kg6xEi9d39bB+Gpo9mk4fMx43LH1hwqUr+XQtGZ5WHwsTF4HzT16aPYboJlv
iGa/EZp+YzTzTRxE/y6cqX5dxR4A0P9MYw==
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7J+6qj247mFkDxVwQOVzoPEFHBx3MHF9/WII
5Ys46OctZtzDCpOXcNhQYmfjPQEmL+Pwa87uWH1fGF/BYa7WfWOhhTC+Epp6
FTS+Ghpfw6FimoLygkMwvhYaXwfNfXoOMiouP5vEYO4zQOMboqk3QuMbO3zv
b30hYAFTbwKXBwBirEoE
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7FPsu5d67DOyhwo46CTm9sz9AONzOHRe9ty2
aw6ML4AmL+Kwb4lhlHuoMZQv4aAVYi5efxvGl3Hwf/FV/eNOGF/BwXbeNPkd
p2B8JYcH2ru+zpIzgfJVHOJV5XdzT4Hx1Rw03BkXJRyD8TUc8pM8/NTyTKF8
LYemNcvD4mNhfB0HNavTOk4bYXw9B8HHputfrTGD8g0c/s24tmzjXhjf0EFZ
d+p25TkwvpGDx8HgE1OrYHxjhyXGBp82qcH4Jg4nj79jUmU1swcALZVNeg==

     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7G89O/alRVXOHirggMrncNgebxdpGCML5Qs4
MHbsrhKVhPFFHKbe2Lr37iQZKF/CYbPrpbwvhvJQvoyDCr+LWOYjmHoFB/mv
17V1dsDklRzcpp3ZuGc1zD4VNL6aw4R9npcXZMD4GmjyWmj26aDJ6zn8yfWf
cOMdjG/g4AZWrgDlGzpcPRPF5fEbpt8ITb0xmvkm8PAAAAnCVAU=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7D9mPO7Y+kPEHirggMrnQOMLOCx3SEu/aC0K
5Ys4CH/IVuE8BONLOMRKvHR9Wwfjy6CpV0AzT8nh3MOot4n6ML4Kmn41B7Py
L/tjusWgfA2HhvmFDx08YHwth0Vqv2qmCIpD+Tpo6vUcJLhu8Lm9EYbyDdDs
M3RINAo10FoJkzdy+NrkX/xJCcY3RpM3cei87Llt1xwhewDjiVEI
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7OWFNc8+K7Swhwo4GMZ2XJVPhPE5HHhOnjyy
tgnGF0Dji6Cpl3DoPZ/y34YXxpdB4ys4ZFove3dKD8ZXcgj76PZsoj2Mr+Lw
ytFRM2qnOZSv5rApWVlg/WsYXwPNPi2HBZJH2Mv+wOR1HK5/f6igeArG13P4
073AcPIKGN8ATd4QTd7IIdvjTvJLZxjf2MFti2xweSqMb+JgnLXPy67M3B4A
IuNPwQ==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7ONV5XdzT1Gxhwo4tOy8e7q2CMbncBD9u3Cm
+nUYXwCNL+Kw3CEt/aK1KpQv4fAx43HH1h8weRmHWImXrm/rYPIKaOqVHJrW
LA+Lj4XxVRxOHn/HpMqqBuWrOVi0aJlWL4DJa6Cp10IzXwfNfD009xigyRs6
nLmiUuEsBeMboZlnjMY3gbsPABOaTn8=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7C/9PnZ9XqSQPVTAAZXP4ZDmc1Aq/bIglC/g
sKHEzsZ7AowvgqZeAo0v4/C1yb/4k5IwlK/g0HnZc9uuOTB5JQf71WemXLsP
46s4/JqzO1bfF2a+Gpr9Gmj6tRxkVFx+NonB+DoOzkct6oW5YOr10PgGDtdF
jQ/dbhaA8g3R+EZofGOH3rdbF3w/BuObwPkAaN1UjQ==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7K/fnFCfJqBvDxVw2Ox6Ke+LIYzP4ZApG+or
UArjC6DxRRyunoni8vgN40s4LDAXXWmwzQDKl0HjKzg8D4oJ/RZrCOUrOcgb
VuUt1IbxVRy6H9Rr39wI46s5yKi4/GwSM4LyNRz08xYz7mGF8bUcuG49+eCp
DuProPH1HNalcxzXqYbxDRxmy67c97kbxjdE4xs56CTm9sz9AOMbO3CcXVet
LWQM5Zs4SInztaQwGtsDACqfSK8=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Lm8bRbknHK1hwo46N//teHeChifw0Fm6uwV
S3fC+AIOFi1aptULYHwRh0r2ikuHUmF8CYd7ci0NNZwwvozD1cqQP/cFYXwF
NL6Swy9eYd6gDy5QvooDT0SRaPd9GF/NQfTvwpnq12F8DTS+lkPLzruna4tg
fB2HBStyIoIjYXw9h93Tfz/RcIDxDRzOPYx6m6gP4xs6rPSdc+d9AIxv5HC9
ravwnxqMb+zwQHvX11lyML4JXB4A27xUWg==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7DNlQ30FSvXtoQIOvxIkpXfdhPE5HFw6p9nM
mwbjCzj0bRSOawqG8UUc/uT6T7jxTg/Kl3BANU/G4frNCfVpAjC+goP81+va
OjtgfCU081Uc3C7lfTGUN4Dy1dDUa6Cp10Lj66Cp13PI1uo+pNcFc58Bmv8M
0fxjhMY3RjPPBO5fAPziS+0=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7D9mPO7Y+kPEHirgYDUxYdXMrTA+hwOqvACa
vAiavASavIzDcoe09IvWolC+gsPJ4++YVFnFoHwlh1iJl65v62DyKg4N8wsf
OnjA5NUc3viVz6s4B+NroOnXQuProLlHD809Bg4SXDf43N4IQ/mGDvarz0y5
dl8IyjdC4xuj8U3gfAAeNlWi
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7A9MFtNbvUHSHirggMrncPA/taTNjEEayhdw
MIztuCqfKAHlizjoOsu8fmQmBeVLOJRlz+Q5/hmmXwZNXsHhsdT8k/8qYXwl
NHkVNHk1NL4GmnotNPfpOLAuUk8Ncobx9RxmflJcIbUXpt4ATb0hGt8ITb+x
Q1GgrlLXSRjfBG4eAAIdSMc=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7CedrvfYX6trDxVwQOVzOHgsZlK/fQDGF3C4
8/lP5mIrGF/EYWsQxxMhdz0oX8JBkYlvoddZGF8GTV7B4frNCfVpAvpQvhIa
X8Xh1rNjX1pUYerV0MzTcJD/el1bZwdMvZbDrwRJ6V03YXwdh6tnorg8fsP4
emjyBg4v4yedEik2gPINHRTtNjze7wDjGzlEyJz7k8UH4xs7XBc1PnS7GcY3
cVhgLrrSYJuBPQDSwU5a
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7P/k+k+48Y7PHirggMrncPDeYDHn51UeKF/A
YXu8XaRhDC+UL+Iw85PiCqm9XFC+hENRoK5S10luKF8GTb+CQ6ZsqK9AKT+U
r+SgaLfh8X4HAShfxeHqmSguj98weTU0eQ0HFX4XscxHMPu10NTrOEzY53l5
QQbM/Xpo6g3Q1Bui+dcIjW+MxjdxuMdgfP+gP489AKcpTxI=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7IsCdZW6TkrbQwUcUPkcDqyL1FODnGF8AYfH
UvNP/quUgvJF0PgSDgcmi+mt3iAJ5cs4zOPpmxT+XALKV3DwP7WkzYwBZp4S
mn4Vh7LsmTzHP8P0qzmEPBEoLNaC8TXQ+FoOus4yrx+ZwfTroOnXQzPfAI1v
6MC1Z7J/fy5MvZGDYWzHVflEmHuN0cwzgfsPAKjqTHw=
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7O8s+BZtHehkDxVwePcqNKXEAcbncDiwMf18
ahaML+DAaLo1Z60+jC/ioHqyuFaeD8aXcOh+UK99c6MjlC/j0GQdsNxmF4yv
4GAhfLk14i+Mr+Sgn7eYcQ8rTL+Kg1esUd/ENzB5NQfhepHSZ3IweQ00+7Uc
HHcwcX39AlOvg6ZfzyGEKUlI7wmMb+CQ//HDPObTML6hQ8U0BeUFh2B8IzR5
YzS+Cdx/AJppTko=
     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7HPND5r7zte1hwo4bI+3izSMgfE5HNRkqrrb
v+tA+QJofBEHFX4XscxHMPUSDptdL+V9MdSH8mUcrt+cUJ8mAOMrOPzJ9Z9w
450elK/k0LdROK4pGCav4qDIxLfQ6yxMXs3BbdqZjXtWw/gaDlfPRHF5/Iap
13Iw7uB/80PfAMrXcYiQOfcniw/G13P4lSApvesmTL0BmnpDBzeQc+VhfCM0
840d+L4E3G4LhMmbwOUBZ7NM+g==
     "]]}, 
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7Ofx9E0Kf65hDxVwqKw43/iUQxPK53BAlRdw
mP0/XNbyEkxexCHo+q3fIaJaUL4EmryMw4HJYnqrN8D4Cg7+p5a0mTFoQ/lK
DqyL1FODnGF8FTS+msPOnJJz/oU6UL6Gwz0G4/sH/WF8LTR5HTS+nsP2eLtI
wxhdKN/AYdLpeo/9tTC+ocOdz38yF1vB+EZo6o0dvDdYzPl5FWaeiYPHYib1
2wd07QGZlE0D
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, Automatic},
  Frame->True,
  FrameLabel->{
    FormBox["\"Iteration\"", TraditionalForm], 
    FormBox["\"AGTE\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox["\"AGTE: excluding lowest TEs\"", TraditionalForm],
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4810125335461483`*^9}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7GN4rkgkiwXYQwUcePsmhT+XgPE5HFLe3A8I
VoPxBRzqxLwn1qjC+CIOlz237ZojBONLOETNL/IR++4P5cs4BO1PE1F7DuMr
OEz47HE24yuMr+TQ5ifpeeYvjK/iIHwsgd/8I4yv5mA29fflP3D9Gg6/EiSl
d92E8bUcFh9/n/trM4yv4zD5zG/PY9Uwvp6DwK/H7D/qYXwDB4bSFd7ZFTC+
ocPtLMPLgZkwvpHDVX/P57yOML6xw4Qy81V61jC+icOHyi3q5g7+9gA0flEN

     "]]}, 
   {RGBColor[0, 0, 1], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7L9fnMh3o1/XHirgwF5a9bZ5BozP4WD94U3E
xy4YX8BhqcubQpUsGF/E4apwuIf8VBhfwsHPn2uPbweML+PAabi+0KQXxldw
yNCdn9B0F8ZXctj37lGn+0MYX8XBNC+x8uh9GF/Nwcjq8JvNjHpQvoZDgu9P
u3/mML6Ww7Vvnx8fCoLxdRy4LjRM7LCH8fUc7Pv3VbjawvgGDkcOBpmtLYTx
DR22BnE8EXKH8Y0cgpSqMjZLwPjGDvFX+83m+sH4Jg7LWxf7Kyjp2QMAfLRN
2g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  AxesOrigin->{0, Automatic},
  Frame->True,
  FrameLabel->{
    FormBox["\"Iteration\"", TraditionalForm], 
    FormBox["\"AGTE\"", TraditionalForm]},
  FrameStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  LabelStyle->Directive[FontFamily -> "Helvetica", FontSize -> 12],
  PlotLabel->FormBox["\"AGTE: excluding lowest TEs: mean\"", TraditionalForm],
  
  PlotRangeClipping->True]], "Output",
 CellChangeTimes->{3.4810125335832577`*^9}]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
WindowSize->{959, 687},
WindowMargins->{{36, Automatic}, {Automatic, 21}},
FrontEndVersion->"6.0 for Linux x86 (64-bit) (April 20, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 124, 1, 39, "Subsection"],
Cell[717, 26, 838, 15, 46, "Input"],
Cell[CellGroupData[{
Cell[1580, 45, 117, 1, 30, "Subsubsection"],
Cell[CellGroupData[{
Cell[1722, 50, 3214, 88, 284, "Input"],
Cell[4939, 140, 1854, 35, 97, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6842, 181, 253, 7, 30, "Subsubsection"],
Cell[CellGroupData[{
Cell[7120, 192, 6196, 137, 369, "Input"],
Cell[13319, 331, 595, 13, 63, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13963, 350, 111, 1, 30, "Subsubsection"],
Cell[CellGroupData[{
Cell[14099, 355, 6431, 147, 369, "Input"],
Cell[20533, 504, 1262, 22, 39, "Print"]
}, Open  ]],
Cell[21810, 529, 1453, 42, 97, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23312, 577, 168, 2, 39, "Subsection"],
Cell[CellGroupData[{
Cell[23505, 583, 124, 1, 30, "Subsubsection"],
Cell[23632, 586, 808, 15, 43, "Input"],
Cell[24443, 603, 1625, 26, 43, "Input"],
Cell[26071, 631, 325, 8, 43, "Input"],
Cell[26399, 641, 151, 3, 27, "Input"],
Cell[26553, 646, 361, 7, 27, "Input"],
Cell[26917, 655, 1492, 25, 58, "Input"],
Cell[28412, 682, 1422, 22, 27, "Input"],
Cell[CellGroupData[{
Cell[29859, 708, 1545, 35, 43, "Input"],
Cell[31407, 745, 202000, 3317, 244, 176844, 2905, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[233422, 4065, 403, 8, 43, "Input"],
Cell[233828, 4075, 301, 7, 43, "Input"],
Cell[234132, 4084, 3171, 85, 118, "Input"],
Cell[CellGroupData[{
Cell[237328, 4173, 945, 22, 43, "Input"],
Cell[238276, 4197, 25153, 616, 266, 17982, 496, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[263444, 4816, 3232, 74, 253, "Input"],
Cell[266679, 4892, 2090, 55, 133, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[268806, 4952, 126, 1, 24, "Subsubsection"],
Cell[268935, 4955, 954, 21, 58, "Input"],
Cell[CellGroupData[{
Cell[269914, 4980, 4641, 103, 133, "Input"],
Cell[274558, 5085, 985, 16, 27, "Output"],
Cell[275546, 5103, 106071, 1744, 249, 95550, 1572, "CachedBoxData", \
"BoxData", "Output"],
Cell[381620, 6849, 856, 12, 27, "Output"]
}, Open  ]],
Cell[382491, 6864, 1843, 44, 133, "Input"],
Cell[384337, 6910, 2199, 52, 163, "Input"],
Cell[386539, 6964, 241, 6, 27, "Input"],
Cell[386783, 6972, 3687, 88, 220, "Input"],
Cell[CellGroupData[{
Cell[390495, 7064, 449, 10, 27, "Input"],
Cell[390947, 7076, 5242, 97, 376, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[396238, 7179, 126, 1, 24, "Subsubsection"],
Cell[396367, 7182, 9762, 214, 529, "Input"],
Cell[406132, 7398, 5110, 137, 327, "Input"],
Cell[411245, 7537, 4217, 81, 178, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[415499, 7623, 131, 1, 24, "Subsubsection"],
Cell[415633, 7626, 13316, 308, 932, "Input"],
Cell[428952, 7936, 1125, 19, 46, "Input"],
Cell[430080, 7957, 1049, 18, 46, "Input"],
Cell[431132, 7977, 594, 15, 28, "Input"],
Cell[431729, 7994, 3833, 69, 97, "Input"],
Cell[435565, 8065, 335, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[435925, 8076, 3516, 68, 132, "Input"],
Cell[439444, 8146, 5273, 96, 389, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444754, 8247, 628, 10, 28, "Input"],
Cell[445385, 8259, 1292, 32, 90, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[446726, 8297, 151, 2, 30, "Subsubsection"],
Cell[CellGroupData[{
Cell[446902, 8303, 546, 12, 63, "Input"],
Cell[447451, 8317, 761, 11, 28, "Output"]
}, Open  ]],
Cell[448227, 8331, 1394, 36, 131, "Input"],
Cell[449624, 8369, 2417, 62, 148, "Input"],
Cell[452044, 8433, 1870, 43, 114, "Input"],
Cell[453917, 8478, 1456, 41, 80, "Input"],
Cell[CellGroupData[{
Cell[455398, 8523, 1619, 48, 114, "Input"],
Cell[457020, 8573, 2782, 51, 385, "Output"]
}, Open  ]],
Cell[459817, 8627, 2958, 67, 209, "Input"],
Cell[CellGroupData[{
Cell[462800, 8698, 419, 9, 46, "Input"],
Cell[463222, 8709, 582, 11, 28, "Output"],
Cell[463807, 8722, 573, 11, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[464417, 8738, 310, 7, 28, "Input"],
Cell[464730, 8747, 25832, 808, 143, "Output"]
}, Open  ]],
Cell[490577, 9558, 3109, 69, 233, "Input"],
Cell[CellGroupData[{
Cell[493711, 9631, 1017, 26, 64, "Input"],
Cell[494731, 9659, 3064, 57, 391, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[497832, 9721, 2651, 68, 284, "Input"],
Cell[500486, 9791, 143, 2, 28, "Output"]
}, Open  ]],
Cell[500644, 9796, 2362, 55, 267, "Input"],
Cell[503009, 9853, 881, 24, 46, "Input"],
Cell[503893, 9879, 2327, 63, 80, "Input"],
Cell[506223, 9944, 2645, 69, 97, "Input"],
Cell[CellGroupData[{
Cell[508893, 10017, 300, 7, 28, "Input"],
Cell[509196, 10026, 327, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509560, 10038, 3464, 88, 291, "Input"],
Cell[513027, 10128, 1125, 26, 277, "Output"],
Cell[514155, 10156, 999, 22, 255, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515191, 10183, 3767, 92, 284, "Input"],
Cell[518961, 10277, 1690, 35, 267, "Output"]
}, Open  ]],
Cell[520666, 10315, 5208, 126, 326, "Input"],
Cell[525877, 10443, 5969, 142, 414, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[531883, 10590, 150, 2, 30, "Subsubsection"],
Cell[CellGroupData[{
Cell[532058, 10596, 2310, 57, 163, "Input"],
Cell[534371, 10655, 1241, 30, 81, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[535649, 10690, 445, 10, 27, "Input"],
Cell[536097, 10702, 5732, 100, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541866, 10807, 256, 5, 27, "Input"],
Cell[542125, 10814, 321, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[542483, 10827, 2102, 56, 103, "Input"],
Cell[544588, 10885, 22762, 384, 246, "Output"]
}, Open  ]],
Cell[567365, 11272, 251, 6, 27, "Input"],
Cell[CellGroupData[{
Cell[567641, 11282, 1132, 30, 73, "Input"],
Cell[568776, 11314, 192, 5, 27, "Output"],
Cell[568971, 11321, 198, 5, 27, "Output"],
Cell[569172, 11328, 216, 5, 27, "Output"],
Cell[569391, 11335, 232, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569660, 11346, 415, 10, 58, "Input"],
Cell[570078, 11358, 245, 3, 27, "Output"],
Cell[570326, 11363, 246, 3, 27, "Output"],
Cell[570575, 11368, 257, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[570869, 11376, 1740, 45, 118, "Input"],
Cell[572612, 11423, 77, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572726, 11429, 2822, 73, 133, "Input"],
Cell[575551, 11504, 22021, 374, 246, "Output"]
}, Open  ]],
Cell[597587, 11881, 1489, 37, 73, "Input"],
Cell[CellGroupData[{
Cell[599101, 11922, 4205, 100, 264, "Input"],
Cell[603309, 12024, 3471, 66, 261, "Output"],
Cell[606783, 12092, 3631, 68, 268, "Output"],
Cell[610417, 12162, 3838, 71, 261, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[614292, 12238, 4825, 113, 270, "Input"],
Cell[619120, 12353, 5329, 94, 241, "Output"],
Cell[624452, 12449, 3069, 56, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[627558, 12510, 1035, 31, 58, "Input"],
Cell[628596, 12543, 2608, 47, 241, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[631253, 12596, 122, 1, 24, "Subsubsection"],
Cell[CellGroupData[{
Cell[631400, 12601, 826, 20, 88, "Input"],
Cell[632229, 12623, 1098, 27, 66, "Print"]
}, Open  ]],
Cell[633342, 12653, 124, 3, 27, "Input"],
Cell[633469, 12658, 175, 4, 27, "Input"],
Cell[633647, 12664, 5252, 121, 328, "Input"],
Cell[638902, 12787, 135, 3, 27, "Input"],
Cell[639040, 12792, 160, 3, 27, "Input"],
Cell[CellGroupData[{
Cell[639225, 12799, 3970, 64, 58, "Input"],
Cell[643198, 12865, 5507, 100, 380, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[648742, 12970, 163, 4, 27, "Input"],
Cell[648908, 12976, 1123, 28, 66, "Print"]
}, Open  ]],
Cell[650046, 13007, 923, 23, 27, "Input"],
Cell[650972, 13032, 696, 11, 27, "Input"],
Cell[651671, 13045, 2363, 69, 103, "Input"],
Cell[654037, 13116, 1219, 29, 103, "Input"],
Cell[CellGroupData[{
Cell[655281, 13149, 247, 5, 27, "Input"],
Cell[655531, 13156, 960, 20, 241, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[656540, 13182, 263, 5, 24, "Subsubsection"],
Cell[656806, 13189, 285, 7, 46, "Input"],
Cell[657094, 13198, 161, 3, 28, "Input"],
Cell[657258, 13203, 4222, 100, 286, "Input"],
Cell[661483, 13305, 165, 3, 28, "Input"],
Cell[661651, 13310, 10449, 237, 593, "Input"],
Cell[672103, 13549, 2709, 62, 199, "Input"],
Cell[CellGroupData[{
Cell[674837, 13615, 371, 6, 28, "Input"],
Cell[675211, 13623, 335, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[675583, 13635, 185, 3, 28, "Input"],
Cell[675771, 13640, 27237, 420, 251, 21649, 327, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[703023, 14063, 147, 2, 28, "Input"],
Cell[CellGroupData[{
Cell[703195, 14069, 325, 10, 46, "Input"],
Cell[703523, 14081, 274, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703834, 14095, 56, 1, 27, "Input"],
Cell[703893, 14098, 72, 1, 27, "Output"]
}, Open  ]],
Cell[703980, 14102, 27293, 605, 1554, "Input"],
Cell[731276, 14709, 370, 7, 27, "Input"],
Cell[731649, 14718, 758, 16, 27, "Input"],
Cell[732410, 14736, 33249, 722, 1749, "Input"],
Cell[CellGroupData[{
Cell[765684, 15462, 424, 8, 27, "Input"],
Cell[766111, 15472, 77, 1, 27, "Output"]
}, Open  ]],
Cell[766203, 15476, 758, 16, 27, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[766998, 15497, 130, 1, 24, "Subsubsection"],
Cell[767131, 15500, 827, 15, 43, "Input"],
Cell[767961, 15517, 4337, 84, 193, "Input"],
Cell[772301, 15603, 257, 5, 27, "Input"],
Cell[772561, 15610, 976, 20, 27, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[773574, 15635, 111, 1, 18, "Subsubsection"],
Cell[773688, 15638, 1043, 18, 43, "Input"],
Cell[774734, 15658, 184, 4, 27, "Input"],
Cell[CellGroupData[{
Cell[774943, 15666, 340, 9, 27, "Input"],
Cell[775286, 15677, 286, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775609, 15688, 117, 2, 27, "Input"],
Cell[775729, 15692, 209, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775975, 15702, 261, 7, 27, "Input"],
Cell[776239, 15711, 1148, 17, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777424, 15733, 2702, 60, 118, "Input"],
Cell[780129, 15795, 30994, 653, 247, "Output"],
Cell[811126, 16450, 1282, 29, 250, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
